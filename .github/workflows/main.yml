# This is a basic workflow to help you get started with Actions

name: Build-RV64 configurations

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  ci_rv64_build:
    name: RV64 Tiny Sanity Test
    timeout-minutes: 30 # 30-minutes
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: msyksphinz/scariv:run_env
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Tiny Build
        run: |
           cd $GITHUB_WORKSPACE/spike_dpi && make -j$(nproc)
           cd $GITHUB_WORKSPACE/tests/riscv-tests && ./configure && make -j$(nproc)
           cd $GITHUB_WORKSPACE/verilator_sim && ../scripts/runtest.py --isa rv64imafdc -c tiny -t sanity -j$(nproc)

  ci_rv32_build:
    name: RV32 Tiny Sanity Test
    timeout-minutes: 30 # 30-minutes
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: msyksphinz/scariv:run_env
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: recursive

      - name: Tiny Build
        run: |
           cd $GITHUB_WORKSPACE/spike_dpi && make -j$(nproc)
           cd $GITHUB_WORKSPACE/tests/riscv-tests && ./configure && make -j$(nproc)
           cd $GITHUB_WORKSPACE/verilator_sim && ../scripts/runtest.py --isa rv32imafdc -c tiny -t sanity -j$(nproc)
