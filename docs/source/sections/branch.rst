分岐命令
========

RISC-Vにはいくつかの分岐命令が実装されています。大きく分けで"条件分岐命令"と"無条件分岐命令"に分けられます。

* 条件分岐命令: レジスタ間の値を比較して、条件に応じて別のPCにジャンプする
* 無条件分岐命令: 特に条件なく別のPCにジャンプする

MSRHではこれらの分岐命令はBRU(BRanch Unit)にて実行されます。
それぞれの役割について詳細を以下で説明します。

*スケジューラ* 命令実行のスケジューリングを行う
*実行パイプライン* 分岐命令を実行するためのパイプライン

分岐タグ
--------

各分岐命令は命令ディスパッチ時に"分岐タグ(Branch Tag)"が割り当てられます。
分岐タグはインフライトな命令に対してそれぞれ違う値が割り当てられています。
また、ある分岐命令Aから、次の分岐命令Bまでの一連の命令は、分岐命令Aと同じ分岐タグが割り当てられて発行されます。
これは、分岐タグAに属する命令が実行されるのは分岐タグAの分岐命令の条件が成立した場合に限る
(つまり分岐タグAの分岐命令に依存している)ということを意味します。::

	...
	// ここからが分岐タグ5
	beq  x1, x2, label
	add  x10, x11, x12
	sub  x30, x31, x1
	// ここからが分岐タグ6
	bne  x5, x6
	mul  x10, x11, x12
	1div  x2, x3, x4
	// ここから先が分岐タグ7

分岐タグの目的は、分岐命令Aが実行完了し結果が予測と異なっていた場合、
その分岐命令に(制御フロー的に)依存している命令を即時フラッシュすることで
分岐命令のコミットを待たずにパイプラインの再実行を可能とするということです。

分岐タグは、`msrh_resource_alloc` モジュールにて分岐命令がデコードされるたびに新たに割り当てられます。
分岐タグの割り当て時、以下の情報が移行の命令に割り当てられます。

*分岐タグ(brtag)* 割り当てられる分岐タグの種類(数)は分岐命令の最大インフライト量と同一である
*分岐マスク(brmask)* 分岐タグが割り当てられられた際、それ以前に割り当てられている分岐マスクのビットマップ(自分の分岐タグを含む)

例として、分岐命令最大インフライト量が8である場合、分岐タグ(`brtag`)は3ビット、分岐マスク(`brmask`)は8ビットが使用されます。

ある分岐命令Dが割り当てられる際、それより前に分岐命令A,B,Cがインフライトである場合、分岐命令Aは以下のような情報を持ってディスパッチされます。::

	brtag: 3 (分岐命令A=0, B=1, C=2)
	brmask: 0000_1111

この後、例えば分岐命令Bが予測ミスとなりパイプラインをフラッシュする場合、分岐命令Bは分岐アップデートパスを用いて分岐タグの情報を通知します。
この際、分岐命令Bは `brtag=1` のため、 `brmask` のビット1が1に設定されている全ての命令は即時フラッシュ(正確にはDead状態)となります。
一方、分岐命令Aと、Aに属するグループの命令が持っている `brmask` には1ビット目が0に設定されていないため、フラッシュされずに実行を継続します。
