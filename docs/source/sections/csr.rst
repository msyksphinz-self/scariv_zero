CSR命令とその他の制御命令
=========================

RISC-Vには以下のCSR命令が定義されています。

- CSRRW : CSRレジスタと整数汎用レジスタの値を交換する
- CSRRS : 汎用レジスタにCSRレジスタの値を転送し、汎用レジスタに基づいてCSRレジスタの特定のビットに1を設定する
- CSRRC : 汎用レジスタにCSRレジスタの値を転送し、汎用レジスタに基づいてCSRレジスタの特定のビットに0を設定する
- CSRRWI: 汎用レジスタにCSRレジスタの値を転送し、即値オペランドに基づいてCSRレジスタを設定する
- CSRRSI : 汎用レジスタにCSRレジスタの値を転送し、即値オペランドに基づいてCSRレジスタの特定のビットに1を設定する
- CSRRCI : 汎用レジスタにCSRレジスタの値を転送し、即値オペランドに基づいてCSRレジスタの特定のビットに0を設定する

CSR命令動作の概要
-----------------

これらの命令はCSRレジスタを変更します。
CSRレジスタはリネームの対象外ですので、汎用レジスタ操作命令と同様に投機実行を行ってしまった場合、
ロールバックすることはできません。
投機実行を行ってロールバックができない例としては、メモリストア命令があります。
メモリストア命令の扱い方については別の章で説明しますが、CSR命令はストア命令と違い実行頻度は高くありません。
従って、CSR命令は"必ず実行されることが保証される状態"になるまで命令実行を待ちます。
このような状態を"Uncommitted Oldest"と呼びます。"コミットされていない最も古い命令"であれば、
プログラム順序的にも次に実行されるべきはこの命令となり、ロールバックされることはありません。

また、CSR命令よりもプログラム順序的に若い命令について、MSRHではこれらの命令の投機実行を妨げることはありません。
従ってCSR命令よりも先に若い命令が実行され汎用レジスタのステートを更新することがありますが、
CSR命令は実行終了後に常にSILENT FLUSH信号を出してパイプラインをフラッシュするため、
これらの先に実行終了した命令の状態がコミット状態になることはありません。

SFENCE.VMA命令の動作概要
------------------------

`SFENCE.VMA` 命令メモリアクセスの順序を同期するための命令です。
`SFENCE.VMA` 命令は、当該命令よりもプログラム順序的に古いメモリストア命令と、
当該命令よりもプログラム順序的に新しい命令を明確に順序付けするために行われます。
詳細はRISC-Vの命令仕様書を参照してください。

`SFENCE.VMA` 命令の重要な機能の一つに、TLBのフラッシュが挙げられます。
`SFENCE.VMA` の汎用レジスタオペランドの値を仮想アドレスとみなし、
一致するTLBエントリをフラッシュすることで仮想アドレス変換に使用するPTEの値を更新します。


MSRHでのSFENCE.VMAの実装
------------------------

MSRHでは、SFENCE.VMA命令はCSUパイプラインで実行され、
Oldest Uncommittedな状態になると実行が開始されます。
CSUパイプラインのEX3ステージには `SFENCE.VMA` 命令専用のインタフェースが定義されており、
MSRHの命令TLB、データTLBに対してTLBフラッシュリクエストが送出されます。
このリクエストに基づき、TLBの該当するエントリがフラッシュされます。

.. note::
   現在のMSRHの実装では、 `SFENCE.VMA` のレジスタオペランドで指定される仮想アドレスを無視し、
   無条件ですべてのTLBエントリをフラッシュするように単純化されています。
