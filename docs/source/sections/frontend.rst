フロントエンド
==============

フロントエンドは、MSRHコアにおける命令フェッチおよび命令デコードを行います。
命令フェッチにより取得された命令はデコードユニットにより命令の解釈が行われ、解釈の結果に基づいてバックエンドに渡されます。

MSRHのフロントエンドは以下のユニットで構成されています。

:命令キャッシュ:
   フェッチした命令を保持しておくキャッシュです。キャッシュのラインサイズはMSRH外部インタフェースと同一です。
   命令キャッシュは、仮想アドレスに基づいてアドレスを格納しています。

:命令TLB:
   命令フェッチ用の仮想アドレスを物理アドレスに変換します。構成はデータTLB(後述)と同一です。

:命令バッファ:
   命令キャッシュから取得した命令を一時的に格納しておくバッファです。

各ステージの機能
----------------

MSRHのフロントエンドは以下のステージで構成されています。

:s0ステージ:
   命令キャッシュおよびTLBに対して仮想アドレスのリクエストを送出します。
   TLBは同じサイクルで物理アドレスの探索結果を返します。
   ヒットすれば物理アドレスまたは例外情報、ミスすればmiss信号をアサートします。
   命令キャッシュ内では、命令タグアドレスを用いたタグRAMの検索とデータRAMの読み出しが
   行われます。

:s1ステージ:
   タグRAMから読みだしたタグ情報を用いて命令キャッシュのヒット/ミスを決定します。

:s2ステージ:
   s1ステージの結果、命令キャッシュがヒットしていればヒットした命令を取得します。
   そうでなければ命令キャッシュは読み出しをBusy状態に入り、外部に対して命令キャッシュリクエストを
   送出します。

命令キャッシュの役割
--------------------

xxx

命令TLBの役割
-------------

命令TLBは命令フェッチ用の仮想アドレスを物理アドレスに変換する機能を持ちます。
TLBはヒット時は0サイクルで変換を行いますが、ミスの場合はmiss信号をアサートし
PTW要求を外部に送出します。



命令バッファの役割
------------------

命令バッファはs2ステージで取得した命令キャッシュの内容を確保し、
一時的に保管する役割を持っています。
バックエンドのリソース状態を確認しながら、命令を取り出して *ディスパッチ(dispatch)* を行います。

命令バッファの先頭から命令を取り出す際、バックエンドのリソース量に応じて
ディスパッチする命令を決定しています。
バックエンドはフロントエンドから同時に受け取ることができる命令の数が決められており、
その情報に基づいてディスパッチする命令を決定します。

例えば、バックエンドにおいてALU命令を同時に2つ、LSU命令を同時に2つ受け取ることができる場合、
命令バッファの先頭から、これらの制約を満たす量の命令を取り出してディスパッチします。

`FENCE.I` 命令に対する動作
--------------------------

`FENCE.I` 命令はRISC-Vにおける命令キャッシュとメモリアクセスデータの整合性を取るための命令です。
`FENCE.I` 命令を実行すると、命令側とデータ側のポートが同期され、命令フェッチ側でデータキャッシュ側の
アップデートが観察できるようになります。

MSRHでは、 `FENCE.I` 命令はCSU命令としてカテゴライズされており、投機実行は行われません。
`FENCE.I` 命令が実行されると、命令キャッシュのタグがすべてクリアされ、命令キャッシュの内容は
破棄されます。
