ROBと命令コミット
=================

ROB(Reorder Buffer)は、すべてのパイプラインを含むバックエンドに存在する
すべての命令の順序を管理するためのユニットです。
"Reorder"という名前の通り、アウトオブオーダで実行される命令を
プログラム順に戻すための機能を持っており、命令ムがどのような順番で
実行されたとしても、ROBにより最終的にプログラム順に戻されます。

ROBは、バックエンドによって実行が完了したら命令の情報を集め、プログラム順に
最終的な状態を決定します。
プログラム順序的にその完了した命令は"コミット"され、その命令の状態は確定します。
逆に言えば、"コミット"された命令の実行状態は元に戻すことはできず、
コミットされる前の命令は、たとえバックエンドパイプラインでの実行が完了していたとしても
"フラッシュ"操作により打ち消される可能性があります。

フロントエンドからディスパッチされた命令は、ROBにその命令が登録されます。
ROBは命令の状態を保持するエントリから構成されており、
一般的に複数のエントリを持っています。

MSRHコアでは、ROBのエントリ数は再構成可能であり、1つのエントリが保持することのできる
命令数も再構成可能となっています。
MSRH Standard構成ではROBのエントリ数は32、1エントリあたり5つの命令を保持することができます。

バックエンドパイプラインで命令を実行し計算結果やデータのロードが完了すると、
バックエンドパイプライン(正確には各パイプラインを制御するスケジューラ)はROBに対して
命令実行終了通知 (done通知) を転送します。

ROBは受け取ったdone信号をもとにどの命令が実行完了したのかを記録し、最も古いエントリの
登録されているすべての命令が実行完了すると、その命令を"コミット"状態とします。
コミット状態になったエントリはROBから削除されます。
コミット状態になると、どの命令がコミットされたかを示すコミット通知信号(`o_commit`)が設定され、
必要なユニットにコミット情報が通知されます。

このコミット情報は、PCのアップデートやコミット後のストア命令の動作などに使用されます。
また、検証環境においてはこのコミット通知信号の情報に基づいてISSとの一致比較が行われます。
