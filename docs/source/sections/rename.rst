レジスタリネーム
================

レジスタリネームは、RISC-Vで定義されているレジスタファイルのアドレスを、
CPU内部で使用されている物理レジスタファイルのアドレスに動的に置き換えることで
実行時のハザードを削減することができます。

レジスタリネームによる効果が現れる例を以下に示します。::

	...
	mul   x10, x11, x12
	sub   x12, x10, x11
	add   x10, x13, x14
	...

上記のアセンブリ命令列では、1番目の `mul` 命令が `x10` レジスタに書き込みを行いますが、
3番目の `add` 命令も `x10` レジスタに書き込みを行いますが、 一般的に `mul` 命令は `add` よりもレイテンシが大きいため、
`add` 命令が先に `x10` に書き込みを行い、その後 `mul` 命令が `x10` に書き込みを行ってしまう可能性があります。
その結果3命令の実行終了時点で `x10` には `mul` 命令が計算した `x10` が書き込まれ、実行結果が誤ってしまいます。
したがって、同じレジスタへの書き込み命令はアウトオブオーダで実行してレジスタ書き込みを行うことができません。
これを"WAW"(write after write) ハザードと呼びます。

WAWをハザード解決するためには、レジスタのリネームを行います。
レジスタのリネームは、 `x10` などのRISC-Vで定義されたレジスタを、CPU内部で定義された物理レジスタに置き換えることを言います。
以降では、RISC-Vで定義されるレジスタ名と、CPU内部で定義される物理レジスタを区別するために、
前者を "アーキテクチャレジスタ(architectureal register)", 後者を "物理レジスタ(physical register)" と呼びます。

レジスタリネームは命令実行中に動的に行われ、同じアーキテクチャレジスタであっても異なる物理レジスタアドレスが割り当てられます。
一般的に物理レジスタの数はアーキテクチャレジスタの数よりも多く用意されており、
一つのアーキテクチャレジスタをより多くの物理レジスタに割り当てることができます。
これにより、上記の3つのアセンブリ命令は以下のように変換されます。::

  ...
  mul  P10, P11, P12
  sub  P20, P10, P11
  add  P30, P13, P14
  ...

最初の `mul` 命令において、 `x10` レジスタが物理レジスタ `P10` に割り当てられています。
2番目の `sub` 命令のソースオペランド `x10` も同様に `P10` に割り当てられています。
3番目の `add` 命令の書き込みレジスタ `x10` は `P30` が割り当てられ、
別物のレジスタとして認識されています。
これにより、 `add` 命令は `mul` 命令の書き込み完了を待つことなく、すぐに `P30` に書き込み命令を終了することができます。

リネーム機構
============

レジスタリネームは、命令発行直後のRNステージで行われます。
`scariv_rename` ユニット内でレジスタリネーム処理が行われ、内部構成はxxxのようになっています。

- フリーリスト `scariv_freelist` : 使用可能な物理レジスタIDを保持しています。ディスパッチイズ毎に別々のフリーリストが用意されています
- リネームマップ `scariv_rename_map` : 現在のリネーム状況を示します。指定したアーキテクチャレジスタIDから現在の物理レジスタIDを返します。このモジュールは投機的なレジスタ状態も含みます
- インフライトリスト `scariv_inflight_list` : どの物理レジスタIDが命令によって現在計算中であるかを示します。ソースオペランドの `ready` 信号の生成に使用されます
- BRUスナップショット `scariv_bru_rn_snapshots`  : 分岐命令毎に各アーキテクチャレジスタ毎のリネーム状況を記録しています。分岐命令が発行されるたびにリネームマップから現在のリネーム状態のスナップショットを取得し、分岐予測ミスが発生するとスナップショットからリネーム状態を取り出し、リネームマップに書き戻すことでリネーム状態を投機実行する前の状態に戻します
- コミットマップ `scariv_commit_map` : 現在コミットされた命令までのリネーム状態を示します。コミットマップのリネーム状態は、リネームマップとは異なり投機的な状態を含みません。ROBからのコミット情報でフラッシュが伝達されると、コミットマップからリネーム状態を復帰させます。

リネームIDは、リセット時の整数レジスタ32本のための物理IDと、
各フリーリストに32個ずつ格納されています。
したがって、ディスパッチ数が5の構成では、 `32\times 5 + 32 = 192` 個の物理IDが使用可能になっています。

レジスタ書き込みを行う命令が発行されると、該当するフリーリストから1つ分の物理IDを取得し、これを新たな物理IDとして使用します。
同じアーキテクチャレジスタの古い物理IDは最終的にフリーリストに戻さなければならず、この情報ほROBに保持されています。

`scariv_bru_rn_snapshots`
------------------------

分岐命令毎に、空くアーキテクチャレジスタのリネーム状態のスナップショットを取ります。

リネームと同じタイミングで、スナップショットを取得します。

- ベースとなるRNIDは `i_rn_list` からなる32本のリネームIDリストですが、同じタイミングで
  リネームが行われるレジスタに対して追加のアップデートが行われる
- 同じ命令グループにおいて分岐命令よりも古い命令についてリネームIDを更新する命令
  (レジスタ書き込みが発生する命令)についてはその命令の新規取得したリネームIDに更新する
