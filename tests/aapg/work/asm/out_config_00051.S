# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831246

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 6552  
				add                 sp, sp, t1
i0000000000:	li                  x23, 10   
i0000000001:	sw                  s11, 20(sp)         
i0000000002:	add                 a6, a6, a4
i0000000003:	sw                  s10, 124(sp)        
i0000000004:	addi                a4, sp, 424
i0000000005:	lwu                 s10, 600(sp)        
i0000000006:	mulw                s9, a3, a1
i0000000007:	and                 a0, s10, a6
i0000000008:	srai                a2, a2, 19
i0000000009:	sub                 a1, t4, a7
i000000000a:	addw                s11, s9, s9
i000000000b:	sub                 s10, gp, t3
i000000000c:	remu                s9, s11, a2
i000000000d:	fence.i                       
i000000000e:	mul                 s10, s2, t0
i000000000f:	lui                 zero, 268527
i0000000010:	sh                  t6, -628(sp)        
i0000000011:	divu                t2, s11, a4
i0000000012:	sll                 s10, a1, a4
i0000000013:	srai                a1, a1, 5 
i0000000014:	ld                  a4, 344(sp)         
i0000000015:	fence.i                       
i0000000016:	lw                  s0, 52(sp)          
i0000000017:	srai                a1, a1, 29
i0000000018:	mulh                s11, t5, t4
i0000000019:	sd                  s9, 224(sp)         
i000000001a:	remw                a6, t0, t2
i000000001b:	remuw               s9, a3, t0
i000000001c:	mulh                a4, s9, a1
i000000001d:	addiw               s9, s10, -1313
i000000001e:	addi                a4, sp, 64
i000000001f:	slti                t3, s10, -1224
i0000000020:	lui                 a3, 83950 
i0000000021:	sltu                gp, tp, s8
i0000000022:	addi                a5, sp, 440
i0000000023:	rem                 a1, s9, a4
i0000000024:	ld                  s9, 1800(sp)        
				la                  sp, begin_signature
				li                  t1, 7496  
				add                 sp, sp, t1
i0000000025:	lhu                 s9, 1748(sp)        
i0000000026:	fsrmi               x0, 2     
				la                  sp, begin_signature
				li                  t1, 6576  
				add                 sp, sp, t1
i0000000027:	ld                  s2, 8(sp)           
i0000000028:	srli                a3, a3, 10
i0000000029:	sh                  s9, 494(sp)         
				li                  x25, 12   
				addi                x23, x23, 1
				srlw                tp, a4, s11
				fence                         
				srai                a4, a4, 6 
				addw                t3, s11, a4
				sb                  s11, -265(sp)       
				addi                sp, sp, -48
				sraiw               t6, a6, 24
	
b000000002a:
				beq                 x23, x25, 1f        
				jal                 x1, i0000000019     
				1: li x23, 10                           
	
				addi                a4, sp, 312
				lw                  s11, 48(sp)         
				lw                  a4, 12(sp)          
				fence.i                       
				lw                  s11, 44(sp)         
				sd                  s3, 520(sp)         
				auipc               s10, 370022
i000000002a:	srli                s10, a4, 59
i000000002b:	lui                 s3, 21    
i000000002c:	mulhsu              s9, a1, s9
i000000002d:	rem                 a1, s5, s2
i000000002e:	srai                a0, a0, 22
i000000002f:	mulhsu              a1, a2, t5
i0000000030:	sw                  t3, -1568(sp)       
i0000000031:	mulhsu              a4, a0, a4
i0000000032:	srai                a4, a4, 8 
i0000000033:	addiw               a0, a0, -3
i0000000034:	sw                  s6, 1656(sp)        
i0000000035:	srai                a4, a4, 3 
				la                  sp, begin_signature
				li                  t1, 4760  
				add                 sp, sp, t1
i0000000036:	ld                  a4, 120(sp)         
i0000000037:	mulw                t3, a1, a4
i0000000038:	remu                a1, s9, a4
i0000000039:	srai                a1, a1, 32
i000000003a:	fence                         
				la                  sp, begin_signature
				li                  t1, 3824  
				add                 sp, sp, t1
i000000003b:	lhu                 s0, 406(sp)         
i000000003c:	addiw               s10, a4, 1780
i000000003d:	ld                  a6, 176(sp)         
i000000003e:	fence.i                       
i000000003f:	rem                 a1, tp, s3
i0000000040:	xori                zero, a1, -1272
i0000000041:	sw                  a2, 52(sp)          
i0000000042:	fence                         
i0000000043:	addiw               a4, tp, 1919
i0000000044:	xor                 a3, a2, t1
i0000000045:	sw                  s11, 1808(sp)       
i0000000046:	or                  a4, a4, a1
i0000000047:	and                 a2, a2, a5
i0000000048:	subw                a5, a5, a3
i0000000049:	mulhsu              a4, s9, a1
				la                  sp, begin_signature
				li                  t1, 4680  
				add                 sp, sp, t1
i000000004a:	sw                  a0, 24(sp)          
i000000004b:	ld                  s9, 256(sp)         
i000000004c:	lb                  a0, -1843(sp)       
i000000004d:	addi                s0, sp, 272
i000000004e:	fence.i                       
i000000004f:	auipc               a5, 386202
i0000000050:	lw                  a0, 48(sp)          
i0000000051:	mul                 s3, a1, s9
				srai                a4, a4, 14
				lh                  s9, -1172(sp)       
				add                 s9, s9, a4
				mulhu               a4, s6, tp
				xor                 s1, s1, a4
				addiw               a4, a4, -9
				sh                  a4, 654(sp)         
	
b0000000052:
				jal                 x1, i0000000062     
	
				lui                 a4, 24    
				remuw               s9, s4, s8
				sh                  s2, -592(sp)        
				addi                a4, sp, 384
				sraiw               t4, s10, 17
				srai                s1, s1, 5 
				or                  s10, s6, gp
i0000000052:	or                  a2, a2, a4
i0000000053:	lw                  a2, 12(sp)          
				la                  sp, begin_signature
				li                  t1, 2664  
				add                 sp, sp, t1
i0000000054:	lwu                 a1, 312(sp)         
i0000000055:	srliw               a0, a4, 21
i0000000056:	srai                s1, s1, 9 
i0000000057:	and                 a5, a5, a2
i0000000058:	divu                t3, t5, t2
i0000000059:	addi                a2, sp, 116
i000000005a:	lui                 a1, 5     
i000000005b:	fence                         
i000000005c:	fence                         
i000000005d:	div                 a1, a4, s9
i000000005e:	srli                a1, a1, 16
i000000005f:	rem                 a3, s0, a2
i0000000060:	ld                  s0, 232(sp)         
				la                  sp, begin_signature
				li                  t1, 7272  
				add                 sp, sp, t1
i0000000061:	sd                  a1, 104(sp)         
i0000000062:	andi                a0, a0, -25
i0000000063:	srlw                t3, t1, t3
i0000000064:	slliw               a4, s9, 31
i0000000065:	addw                a4, a4, a3
				la                  sp, begin_signature
				li                  t1, 3704  
				add                 sp, sp, t1
i0000000066:	lw                  s0, 96(sp)          
i0000000067:	subw                a4, a4, a5
i0000000068:	sub                 a1, s11, a0
i0000000069:	srai                a2, a2, 11
i000000006a:	addi                s0, sp, 312
