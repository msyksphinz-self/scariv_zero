# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831264

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 14176 
				add                 sp, sp, t1
i0000000000:	li                  x26, 10   
i0000000001:	srlw                s7, s8, a4
i0000000002:	divw                a7, t1, t0
i0000000003:	sw                  zero, 108(sp)       
i0000000004:	addiw               t0, a1, -587
i0000000005:	addi                sp, sp, 96
i0000000006:	addi                sp, sp, -448
i0000000007:	addiw               t1, a2, 2024
i0000000008:	subw                t0, gp, s4
i0000000009:	lw                  s0, 20(sp)          
i000000000a:	div                 a5, a1, s4
i000000000b:	sb                  s11, 1045(sp)       
i000000000c:	addiw               a4, a4, -5
i000000000d:	remu                s9, t6, s5
i000000000e:	addiw               a4, a4, -30
i000000000f:	srai                a4, a4, 12
i0000000010:	sw                  zero, 128(sp)       
i0000000011:	and                 a0, a0, a4
i0000000012:	srai                a4, a4, 10
i0000000013:	srlw                a1, t0, a4
i0000000014:	subw                a4, a4, a4
i0000000015:	sd                  zero, 1776(sp)      
i0000000016:	sraiw               t3, s9, 19
i0000000017:	addiw               s9, gp, -422
i0000000018:	divw                t2, s4, s1
i0000000019:	srai                a4, a4, 11
i000000001a:	lui                 a4, 466777
i000000001b:	sb                  s5, -50(sp)         
i000000001c:	srai                a3, a3, 1 
i000000001d:	sd                  s9, 136(sp)         
i000000001e:	addiw               a0, a0, 15
i000000001f:	sllw                a6, t6, t3
i0000000020:	sw                  s1, 16(sp)          
i0000000021:	srai                a4, a4, 10
i0000000022:	addi                sp, sp, 176
i0000000023:	sraw                t2, s11, s5
i0000000024:	lwu                 t1, -324(sp)        
i0000000025:	remu                tp, a0, a4
i0000000026:	subw                a3, a3, a0
i0000000027:	addi                sp, sp, -128
i0000000028:	addi                sp, sp, -80
				la                  sp, begin_signature
				li                  t1, 8248  
				add                 sp, sp, t1
				remuw               s5, a7, tp
				addi                a4, sp, 64
				mulw                a4, t2, a4
				subw                s0, s0, s0
				srai                a4, a4, 15
				sll                 s1, t2, a4
				srai                s1, s1, 1 
	
b0000000029:
				la                  x29, i0000000033    
				jalr                x1, x29, 0          
	
				sw                  t3, 0(sp)           
				fence.i                       
				sd                  s9, 200(sp)         
				fence.i                       
				addiw               t2, s1, -439
				addi                a5, s0, 208
				lw                  a5, 20(sp)          
i0000000029:	fence.i                       
i000000002a:	sd                  a0, 48(sp)          
i000000002b:	lw                  a5, 84(sp)          
				la                  sp, begin_signature
				li                  t1, 6216  
				add                 sp, sp, t1
i000000002c:	sw                  a5, 56(sp)          
i000000002d:	remw                t6, t0, t1
i000000002e:	lwu                 zero, 700(sp)       
i000000002f:	ld                  a6, 48(sp)          
i0000000030:	ld                  s5, 528(sp)         
i0000000031:	sd                  a5, 112(sp)         
i0000000032:	lw                  t4, -2028(sp)       
i0000000033:	or                  a4, t5, s6
i0000000034:	xori                s0, a6, 1666
i0000000035:	slti                t0, a5, -1896
i0000000036:	fence                         
				la                  sp, begin_signature
				li                  t1, 2200  
				add                 sp, sp, t1
i0000000037:	ld                  s4, 88(sp)          
i0000000038:	sltiu               t1, t1, -541
i0000000039:	ld                  a5, 128(sp)         
i000000003a:	srli                a0, a0, 2 
i000000003b:	srai                a2, a2, 13
i000000003c:	lb                  s5, -992(sp)        
i000000003d:	addi                sp, sp, -96
i000000003e:	addi                sp, sp, -464
i000000003f:	srai                s1, s1, 14
				la                  sp, begin_signature
				li                  t1, 8272  
				add                 sp, sp, t1
i0000000040:	lw                  a2, 44(sp)          
i0000000041:	ld                  tp, 48(sp)          
i0000000042:	divu                s4, a4, a0
i0000000043:	rem                 a2, t1, t0
				la                  sp, begin_signature
				li                  t1, 13128 
				add                 sp, sp, t1
i0000000044:	sw                  a2, 40(sp)          
i0000000045:	sraw                t1, a5, a4
				la                  sp, begin_signature
				li                  t1, 5520  
				add                 sp, sp, t1
i0000000046:	sw                  a5, 32(sp)          
i0000000047:	divuw               a4, t0, a4
i0000000048:	sw                  t4, -136(sp)        
i0000000049:	auipc               s8, 444523
				la                  sp, begin_signature
