# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831239

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 12360 
				add                 sp, sp, t1
i0000000000:	li                  x22, 10   
i0000000001:	addw                s0, s0, s0
i0000000002:	mulw                a2, t2, s0
				la                  sp, begin_signature
				li                  t1, 3944  
				add                 sp, sp, t1
i0000000003:	sd                  a5, 128(sp)         
i0000000004:	sll                 t2, t6, t6
				la                  sp, begin_signature
				li                  t1, 13000 
				add                 sp, sp, t1
i0000000005:	sd                  t2, 1120(sp)        
i0000000006:	addi                s0, sp, 4 
i0000000007:	slliw               s0, t1, 0 
i0000000008:	slli                t6, s0, 42
i0000000009:	mulhu               t6, t2, t6
i000000000a:	addi                s0, s0, -9
i000000000b:	ld                  a2, 104(sp)         
i000000000c:	mulhu               t5, gp, t1
				la                  sp, begin_signature
				li                  t1, 13272 
				add                 sp, sp, t1
i000000000d:	lw                  a2, 40(sp)          
i000000000e:	fence                         
i000000000f:	remu                s0, a4, s3
i0000000010:	lwu                 s0, -1812(sp)       
i0000000011:	addiw               s0, s0, 16
i0000000012:	addi                s0, sp, 60
i0000000013:	addw                s10, t6, t6
i0000000014:	fence                         
i0000000015:	srli                a3, a3, 4 
i0000000016:	addiw               s0, s0, 14
i0000000017:	ld                  a1, 112(sp)         
i0000000018:	sd                  s0, 96(sp)          
i0000000019:	andi                s0, t5, 524
i000000001a:	fence                         
i000000001b:	sd                  s1, 720(sp)         
i000000001c:	slli                t2, a1, 45
				la                  sp, begin_signature
				li                  t1, 13352 
				add                 sp, sp, t1
i000000001d:	sd                  t2, -128(sp)        
i000000001e:	sd                  t4, 248(sp)         
i000000001f:	addi                sp, sp, -448
i0000000020:	divu                s0, t4, s8
i0000000021:	andi                a4, a4, -1
i0000000022:	addi                sp, sp, -240
i0000000023:	srli                s1, s1, 12
i0000000024:	addiw               a0, a7, 75
i0000000025:	addi                s1, sp, 180
i0000000026:	srai                a0, a0, 7 
i0000000027:	divw                t6, t2, s0
i0000000028:	sw                  s9, 124(sp)         
				li                  x29, 10   
				la                  sp, begin_signature
				li                  t1, 6184  
				add                 sp, sp, t1
				lwu                 gp, 228(sp)         
				mulh                s0, s2, tp
				lbu                 s3, -402(sp)        
				srli                s0, s0, 11
				sd                  s0, 80(sp)          
				fence.i                       
				lw                  t6, 1868(sp)        
	
b0000000029:
				beq                 x22, x29, 1f        
				la                  x29, i000000000c    
				jalr                x1, x29, 0          
				1: li x22, 10                           
	
				srli                s0, s0, 6 
				addi                sp, sp, 96
				remuw               a7, s5, zero
				add                 s0, s0, a5
				lw                  s0, 84(sp)          
				ld                  a5, 872(sp)         
				srli                s1, s1, 2 
i0000000029:	addiw               s0, s0, -12
i000000002a:	add                 s0, s0, a3
i000000002b:	subw                s0, s0, a1
i000000002c:	addi                s0, sp, 164
i000000002d:	lw                  s0, 56(sp)          
i000000002e:	srai                a1, a1, 9 
i000000002f:	ori                 t6, s0, 1853
i0000000030:	ld                  s0, -56(sp)         
i0000000031:	subw                s1, s1, a1
i0000000032:	mulhu               t5, t4, a0
i0000000033:	srai                a2, a2, 1 
i0000000034:	fence.i                       
i0000000035:	sw                  t0, 36(sp)          
i0000000036:	addi                a3, sp, 312
i0000000037:	srai                a4, a4, 12
i0000000038:	subw                a6, s0, t6
i0000000039:	sraiw               a1, s2, 12
i000000003a:	fence                         
i000000003b:	ld                  a5, 56(sp)          
i000000003c:	fence                         
i000000003d:	mulw                s0, t6, s0
i000000003e:	sub                 s0, s0, a4
i000000003f:	sd                  s0, -264(sp)        
i0000000040:	ld                  t2, -1376(sp)       
i0000000041:	ori                 s1, s0, 1980
i0000000042:	mulw                t6, a7, s7
i0000000043:	ld                  t2, 800(sp)         
i0000000044:	srai                a2, a2, 15
i0000000045:	sw                  a2, 44(sp)          
i0000000046:	srli                s0, s0, 12
i0000000047:	divu                t6, a2, a2
				la                  sp, begin_signature
				li                  t1, 5016  
				add                 sp, sp, t1
i0000000048:	lw                  t5, 72(sp)          
				la                  sp, begin_signature
				li                  t1, 12424 
				add                 sp, sp, t1
i0000000049:	sd                  t3, 224(sp)         
i000000004a:	fence                         
i000000004b:	addw                t2, s2, s9
i000000004c:	fsrmi               x0, 6     
i000000004d:	ld                  a2, 208(sp)         
i000000004e:	xori                t5, t3, 1603
i000000004f:	addiw               s0, s0, -21
i0000000050:	fence                         
i0000000051:	sw                  t6, 116(sp)         
				li                  x16, 10   
				la                  sp, begin_signature
				li                  t1, 7384  
				add                 sp, sp, t1
				la                  sp, begin_signature
				li                  t1, 2992  
				add                 sp, sp, t1
				addi                s0, sp, 284
				lw                  s1, 44(sp)          
				sd                  a5, 40(sp)          
				remuw               s10, s8, s10
				addi                sp, sp, 48
				addi                s0, zero, -15
				sw                  s1, -412(sp)        
	
b0000000052:
				beq                 x22, x16, 1f        
				jal                 x0, i0000000041     
				1: li x22, 10                           
	
				fence.i                       
				lui                 gp, 28    
				srai                s0, s0, 15
				srai                s0, s0, 25
				sllw                zero, s5, a4
				remu                a4, tp, s2
				rem                 t2, t2, s1
i0000000052:	fsrmi               x0, 1     
i0000000053:	ld                  gp, 176(sp)         
i0000000054:	lwu                 a0, 2012(sp)        
i0000000055:	add                 t6, zero, a7
i0000000056:	srli                a0, a0, 15
				la                  sp, begin_signature
				li                  t1, 4848  
				add                 sp, sp, t1
i0000000057:	lw                  t4, -1700(sp)       
i0000000058:	srli                a2, a2, 3 
i0000000059:	remw                s0, a2, s0
i000000005a:	xor                 a4, a4, s0
i000000005b:	lw                  a2, 96(sp)          
i000000005c:	rem                 a2, s0, s0
i000000005d:	slti                s0, s2, -1230
