# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831245

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 10624 
				add                 sp, sp, t1
i0000000000:	li                  x23, 10   
i0000000001:	subw                t0, s10, t0
i0000000002:	addw                s3, t3, t0
i0000000003:	sb                  t1, -956(sp)        
i0000000004:	ld                  s10, 232(sp)        
i0000000005:	slli                s1, s1, 28
i0000000006:	sw                  s3, 556(sp)         
i0000000007:	sd                  a1, 56(sp)          
i0000000008:	slti                s3, a4, 1020
				la                  sp, begin_signature
				li                  t1, 3136  
				add                 sp, sp, t1
i0000000009:	sw                  a4, 60(sp)          
i000000000a:	fence                         
i000000000b:	div                 s6, a0, s4
i000000000c:	remuw               s4, t0, t0
				la                  sp, begin_signature
				li                  t1, 3144  
				add                 sp, sp, t1
i000000000d:	lwu                 s3, -60(sp)         
i000000000e:	divu                s0, a1, t6
i000000000f:	addiw               a3, a3, -27
i0000000010:	srli                a4, a4, 6 
i0000000011:	add                 s2, s2, a0
i0000000012:	mul                 a5, s2, s4
i0000000013:	sh                  s9, -170(sp)        
i0000000014:	divw                a2, a2, t4
i0000000015:	srliw               t0, s9, 24
i0000000016:	fence                         
i0000000017:	sw                  a0, 88(sp)          
i0000000018:	divw                a0, t4, s5
i0000000019:	slli                a0, a0, 20
i000000001a:	addi                a4, a4, -32
i000000001b:	sw                  s0, 16(sp)          
i000000001c:	addiw               a4, a4, 10
i000000001d:	sw                  t6, 88(sp)          
i000000001e:	addi                a4, a4, 3 
				la                  sp, begin_signature
				li                  t1, 9464  
				add                 sp, sp, t1
i000000001f:	sw                  s6, -560(sp)        
i0000000020:	mulw                t0, t1, s5
i0000000021:	mulh                a4, s3, t0
i0000000022:	fsrmi               x0, 5     
i0000000023:	sd                  a3, 16(sp)          
i0000000024:	addi                s0, sp, 100
i0000000025:	subw                a5, a5, a4
i0000000026:	subw                a4, a4, a4
i0000000027:	addi                a0, sp, 476
				la                  sp, begin_signature
				li                  t1, 3248  
				add                 sp, sp, t1
i0000000028:	sw                  a0, 112(sp)         
i0000000029:	lui                 a4, 2     
				la                  sp, begin_signature
				li                  t1, 7416  
				add                 sp, sp, t1
				lbu                 s4, -1352(sp)       
				lhu                 s4, 122(sp)         
				srli                s1, s1, 8 
				lw                  zero, 116(sp)       
				add                 s9, s9, s1
				lw                  a4, 28(sp)          
				ld                  s1, -160(sp)        
	
b000000002a:
				la                  x27, i0000000032    
				jalr                x0, x27, 0          
	
				xori                s9, a4, 1864
				srli                a4, s0, 34
				or                  s1, s0, gp
				fence                         
				ld                  s3, 224(sp)         
				srli                a5, a5, 1 
				sw                  s1, 32(sp)          
i000000002a:	srli                a5, a5, 2 
				la                  sp, begin_signature
				li                  t1, 3632  
				add                 sp, sp, t1
i000000002b:	sw                  s1, 0(sp)           
i000000002c:	mulw                a0, a0, t0
i000000002d:	fence                         
i000000002e:	addi                sp, sp, 160
i000000002f:	addi                t0, s3, -122
i0000000030:	mulw                a0, t4, a1
i0000000031:	addw                a2, a2, s1
i0000000032:	addi                s1, zero, -22
i0000000033:	srai                a5, a5, 13
i0000000034:	fence.i                       
i0000000035:	div                 s3, s10, t5
i0000000036:	and                 a0, a0, a4
i0000000037:	addi                sp, sp, -240
i0000000038:	sw                  a5, 52(sp)          
i0000000039:	addi                t6, zero, -6
i000000003a:	sd                  a4, 24(sp)          
i000000003b:	srai                a4, a4, 5 
i000000003c:	subw                a4, a4, a5
i000000003d:	srli                a5, a5, 8 
i000000003e:	slli                a0, a0, 24
i000000003f:	lui                 s2, 9     
i0000000040:	lb                  t0, -1255(sp)       
i0000000041:	sd                  a5, 0(sp)           
i0000000042:	addw                a5, s9, s2
i0000000043:	divuw               a0, s11, t6
i0000000044:	addw                a1, a1, a0
i0000000045:	mulhsu              a4, a5, a4
i0000000046:	addi                a5, sp, 68
i0000000047:	and                 a5, a5, a4
i0000000048:	addw                s2, a0, a4
i0000000049:	sd                  a0, 16(sp)          
i000000004a:	remuw               a5, a2, s11
i000000004b:	slli                a5, a5, 5 
i000000004c:	addiw               s0, s0, -18
i000000004d:	ld                  a0, -200(sp)        
i000000004e:	sd                  a4, 120(sp)         
i000000004f:	xor                 s0, s0, a2
i0000000050:	srli                a4, t3, 62
i0000000051:	add                 s9, zero, t6
				li                  x21, 10   
				la                  sp, begin_signature
				li                  t1, 13088 
				add                 sp, sp, t1
				la                  sp, begin_signature
				li                  t1, 4448  
				add                 sp, sp, t1
				sw                  a5, 64(sp)          
				ld                  s10, 1768(sp)       
				srai                a5, a5, 12
				ld                  s1, 0(sp)           
				srlw                t6, a5, a4
				lb                  a4, -1604(sp)       
				ld                  gp, 0(sp)           
	
b0000000052:
				beq                 x23, x21, 1f        
				jal                 x1, i000000002f     
				1: li x23, 10                           
	
				xor                 a4, a4, s0
				addiw               s0, s0, 1 
				lw                  a4, 56(sp)          
				fence                         
				sh                  a5, -1064(sp)       
				and                 s1, s1, a5
				sd                  s0, 48(sp)          
				la                  sp, begin_signature
				li                  t1, 2416  
				add                 sp, sp, t1
i0000000052:	sh                  t1, -798(sp)        
i0000000053:	fence.i                       
i0000000054:	remu                a5, a2, s1
				la                  sp, begin_signature
				li                  t1, 8592  
				add                 sp, sp, t1
i0000000055:	lhu                 a4, 64(sp)          
i0000000056:	addiw               s5, s2, -1204
i0000000057:	divuw               s1, a4, a0
i0000000058:	fence.i                       
i0000000059:	fence                         
i000000005a:	mulhu               s4, s2, t4
i000000005b:	addi                a4, sp, 288
