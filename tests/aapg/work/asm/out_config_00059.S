# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831254

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 8824  
				add                 sp, sp, t1
i0000000000:	li                  x26, 10   
i0000000001:	mulh                a4, s11, s5
i0000000002:	ld                  t3, 88(sp)          
i0000000003:	addi                a4, sp, 264
i0000000004:	addiw               a0, a0, 11
i0000000005:	subw                s0, a0, a0
i0000000006:	srli                a2, a2, 15
i0000000007:	subw                a2, a2, a4
i0000000008:	andi                a0, a0, 15
i0000000009:	sd                  a2, 120(sp)         
i000000000a:	subw                s1, s1, a2
i000000000b:	srli                s0, s0, 4 
i000000000c:	slli                a4, a4, 2 
i000000000d:	addiw               a0, gp, -1560
i000000000e:	remw                t6, s0, a0
i000000000f:	ld                  s0, 192(sp)         
i0000000010:	lw                  a2, 16(sp)          
i0000000011:	sw                  a3, 24(sp)          
i0000000012:	mulh                t6, a5, zero
i0000000013:	slliw               s0, t0, 7 
i0000000014:	srliw               a0, a3, 31
i0000000015:	mulh                a7, gp, a5
i0000000016:	fence                         
i0000000017:	mulhsu              s9, t5, gp
i0000000018:	addi                sp, sp, -208
i0000000019:	sll                 a3, s11, a7
i000000001a:	lw                  tp, 1452(sp)        
i000000001b:	addi                a3, sp, 48
i000000001c:	srli                a2, a2, 11
i000000001d:	lw                  a5, 4(sp)           
i000000001e:	ld                  s1, 152(sp)         
				la                  sp, begin_signature
				li                  t1, 9192  
				add                 sp, sp, t1
i000000001f:	sb                  s0, -157(sp)        
i0000000020:	addi                a1, sp, 504
