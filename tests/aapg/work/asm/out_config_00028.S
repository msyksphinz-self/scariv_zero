# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831223

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 11936 
				add                 sp, sp, t1
i0000000000:	li                  x17, 10   
i0000000001:	mulw                s6, t5, a6
i0000000002:	addi                a3, a3, 1 
i0000000003:	sra                 s5, s1, s7
i0000000004:	srliw               t6, s6, 17
i0000000005:	sllw                zero, a0, s11
i0000000006:	divw                t2, a4, t2
i0000000007:	addi                sp, sp, -336
i0000000008:	rem                 t2, s1, a5
i0000000009:	lui                 s3, 17    
i000000000a:	subw                a4, a4, a3
i000000000b:	div                 s7, a5, a0
i000000000c:	remu                t4, t0, a5
i000000000d:	lw                  s0, 28(sp)          
i000000000e:	srai                a3, a3, 17
i000000000f:	fence.i                       
i0000000010:	ld                  a2, 104(sp)         
i0000000011:	and                 t4, a1, t3
i0000000012:	sraw                a1, t5, s5
i0000000013:	fence.i                       
i0000000014:	addiw               a2, t0, 866
i0000000015:	mulhsu              t0, a3, a2
i0000000016:	fence.i                       
i0000000017:	div                 zero, s2, s9
i0000000018:	addiw               a3, a3, -22
i0000000019:	sd                  a3, 96(sp)          
i000000001a:	srli                a0, a0, 4 
i000000001b:	sw                  a3, 128(sp)         
i000000001c:	lui                 a0, 395270
i000000001d:	lhu                 a3, 138(sp)         
i000000001e:	srai                a5, a5, 7 
i000000001f:	srli                a0, a0, 3 
i0000000020:	fence.i                       
i0000000021:	fence.i                       
i0000000022:	sllw                a5, s2, s2
i0000000023:	addi                a5, sp, 240
i0000000024:	fence                         
i0000000025:	fence.i                       
i0000000026:	and                 a5, a0, a3
i0000000027:	and                 a0, t3, s1
i0000000028:	subw                gp, t6, t5
				li                  x16, 10   
				la                  sp, begin_signature
				li                  t1, 12192 
				add                 sp, sp, t1
				add                 s2, zero, t4
				addw                s0, s0, s1
				addw                s1, s1, s0
				lwu                 gp, 424(sp)         
				ld                  zero, 664(sp)       
				addi                a4, sp, 196
				sraiw               s1, t2, 12
	
b0000000029:
				pre_branch_macro                        
				bne                 x17, x16, i0000000023
				post_branch_macro                       
	
				lw                  s0, 52(sp)          
				mul                 s1, a4, s11
				lw                  a4, 32(sp)          
				subw                a4, a4, s1
				sw                  a5, 52(sp)          
				slliw               s1, s3, 25
				add                 s4, zero, s1
				li                  x17, 10   
i0000000029:	ld                  a0, -440(sp)        
i000000002a:	addi                a3, sp, 184
i000000002b:	sd                  a0, 128(sp)         
i000000002c:	add                 a3, zero, a5
i000000002d:	mulw                gp, a3, a5
i000000002e:	lui                 s2, 338039
i000000002f:	lwu                 t6, -1864(sp)       
i0000000030:	srai                a4, a4, 10
i0000000031:	addi                a5, zero, 12
i0000000032:	xor                 a0, a0, s0
i0000000033:	addiw               t0, a5, 994
i0000000034:	lw                  a5, -1600(sp)       
i0000000035:	subw                a5, a5, a5
i0000000036:	subw                a5, a5, a5
i0000000037:	fence                         
i0000000038:	addiw               s0, s0, -2
i0000000039:	srai                a4, a4, 7 
i000000003a:	ld                  a5, 1256(sp)        
i000000003b:	mulhsu              t2, tp, tp
i000000003c:	lh                  s3, 990(sp)         
i000000003d:	remw                a5, a5, a5
i000000003e:	sub                 a3, a0, a3
i000000003f:	or                  a1, a1, a3
i0000000040:	srli                s1, s1, 3 
i0000000041:	sd                  s0, 56(sp)          
i0000000042:	addi                sp, sp, -320
i0000000043:	addiw               a5, a5, 3 
				la                  sp, begin_signature
				li                  t1, 4360  
				add                 sp, sp, t1
i0000000044:	ld                  a0, 8(sp)           
i0000000045:	sd                  s10, 200(sp)        
i0000000046:	divuw               a3, a5, a0
i0000000047:	addw                a2, a2, a3
i0000000048:	divu                a3, a5, a5
i0000000049:	and                 a5, a5, s0
i000000004a:	addi                a5, a5, -18
i000000004b:	sub                 a2, a2, a4
i000000004c:	sb                  a3, 1742(sp)        
i000000004d:	addiw               a5, a5, -409
i000000004e:	xor                 s1, s1, a0
i000000004f:	addw                a0, a0, s1
i0000000050:	addi                a6, zero, 6
				li                  x27, 9    
				li                  x17, 10   
				srai                s1, s1, 27
				srli                s1, s1, 7 
				addi                s0, sp, 12
				sb                  zero, 418(sp)       
				xor                 s1, s1, s0
				slliw               gp, t6, 11
				sllw                gp, t2, a4
	
b0000000051:
				pre_branch_macro                        
				bge                 x27, x17, i000000006d
				post_branch_macro                       
	
				addiw               s1, s1, -22
				fence                         
				remuw               a4, s7, t2
				add                 gp, zero, a5
				addi                sp, sp, -512
				remw                s1, s1, gp
				lui                 a5, 26    
				li                  x17, 10   
i0000000051:	and                 a1, a1, a4
i0000000052:	sd                  a0, -1688(sp)       
i0000000053:	srliw               a5, s1, 3 
i0000000054:	lwu                 a0, 1880(sp)        
i0000000055:	fence                         
i0000000056:	lb                  a3, 302(sp)         
i0000000057:	xor                 a4, a4, a5
				la                  sp, begin_signature
				li                  t1, 7432  
				add                 sp, sp, t1
i0000000058:	sd                  a6, 152(sp)         
i0000000059:	subw                a2, a2, a0
i000000005a:	lui                 s11, 31   
i000000005b:	lw                  a5, 44(sp)          
i000000005c:	addi                a1, a1, -13
i000000005d:	sd                  a5, -984(sp)        
i000000005e:	remw                s2, t2, s10
i000000005f:	lh                  a5, -1204(sp)       
i0000000060:	srli                a0, a0, 16
i0000000061:	sd                  s8, 248(sp)         
i0000000062:	rem                 a5, t3, zero
i0000000063:	srli                a2, a2, 2 
i0000000064:	divuw               zero, a1, s3
i0000000065:	slli                a4, a4, 5 
i0000000066:	addiw               tp, a3, 482
i0000000067:	mulh                t3, s9, s5
i0000000068:	addiw               a5, zero, -1693
i0000000069:	subw                a0, a0, a3
i000000006a:	addi                tp, zero, -26
i000000006b:	sub                 s0, s0, a3
i000000006c:	sw                  s1, 28(sp)          
i000000006d:	srai                a0, a0, 12
i000000006e:	addiw               tp, a3, 1537
i000000006f:	addi                a1, sp, 508
i0000000070:	fence                         
i0000000071:	xori                s5, a4, 537
i0000000072:	sw                  a2, 8(sp)           
i0000000073:	sw                  a5, 80(sp)          
i0000000074:	fence.i                       
i0000000075:	addi                s0, sp, 104
i0000000076:	ld                  s1, 88(sp)          
i0000000077:	sraw                a3, a5, a5
i0000000078:	addw                s0, s0, a1
				li                  x23, 12   
				addi                x17, x17, 1
				sh                  a4, -1384(sp)       
				ld                  a6, -1952(sp)       
				sd                  a4, 104(sp)         
				fence.i                       
				srli                s0, s0, 12
				srai                s1, s1, 2 
				addi                s0, sp, 404
	
b0000000079:
				beq                 x17, x23, 1f        
				jal                 x1, i0000000056     
				1: li x17, 10                           
	
				ld                  s0, 88(sp)          
				addi                s11, zero, 5
				sd                  a6, 32(sp)          
				slt                 a4, gp, gp
				srli                a5, a5, 3 
				srliw               a6, a4, 2 
				addiw               s1, s1, 2 
				la                  sp, begin_signature
				li                  t1, 9480  
				add                 sp, sp, t1
i0000000079:	ld                  t4, 1232(sp)        
i000000007a:	srai                a1, a1, 12
i000000007b:	srlw                a3, a0, a0
				la                  sp, begin_signature
				li                  t1, 3408  
				add                 sp, sp, t1
i000000007c:	sw                  tp, 1084(sp)        
				la                  sp, begin_signature
				li                  t1, 12624 
				add                 sp, sp, t1
i000000007d:	lw                  s0, 56(sp)          
i000000007e:	sd                  s1, 48(sp)          
i000000007f:	or                  s1, s1, a5
i0000000080:	xor                 zero, a5, a3
i0000000081:	addw                a1, a1, a0
i0000000082:	lw                  a1, 128(sp)         
i0000000083:	and                 a2, a2, a3
i0000000084:	addiw               a1, a1, -6
i0000000085:	addiw               a4, a4, -27
i0000000086:	sw                  a5, 80(sp)          
i0000000087:	sb                  a3, -181(sp)        
i0000000088:	ld                  a3, -472(sp)        
i0000000089:	subw                a5, a5, a3
i000000008a:	fence.i                       
i000000008b:	sw                  s2, 1364(sp)        
i000000008c:	divu                a3, a5, a5
i000000008d:	sltiu               a3, a5, -1170
i000000008e:	rem                 s0, a0, a0
i000000008f:	xor                 a1, a1, a4
i0000000090:	addiw               a4, a4, -26
i0000000091:	addw                a3, a3, a3
i0000000092:	fence                         
i0000000093:	mulhu               t4, a3, a5
i0000000094:	fence.i                       
i0000000095:	srai                s0, s0, 13
i0000000096:	addi                sp, sp, 224
i0000000097:	fence                         
i0000000098:	addiw               a2, a2, -12
i0000000099:	sub                 a2, a2, a5
i000000009a:	subw                a2, a2, a0
i000000009b:	lw                  a3, 32(sp)          
i000000009c:	auipc               s3, 44197 
i000000009d:	addi                a2, sp, 276
				la                  sp, begin_signature
				li                  t1, 14288 
				add                 sp, sp, t1
i000000009e:	sw                  a1, 84(sp)          
i000000009f:	add                 a3, a3, a5
i00000000a0:	sraiw               s1, s9, 28
				la                  sp, begin_signature
				li                  t1, 12048 
				add                 sp, sp, t1
				fence                         
				lh                  a5, 564(sp)         
				srliw               a4, tp, 0 
				addw                s2, a4, a5
				sw                  s3, 124(sp)         
				add                 tp, a5, s0
				srli                a5, a5, 5 
	
b00000000a1:
				jal                 x1, i00000000a6     
	
				srli                s1, s1, 11
				lbu                 a4, 624(sp)         
				addw                a5, a5, s1
				addi                sp, sp, -352
				srliw               a4, s0, 24
				fence                         
				fence.i                       
i00000000a1:	fence                         
i00000000a2:	ld                  a2, 504(sp)         
i00000000a3:	srliw               a5, gp, 13
i00000000a4:	fence                         
i00000000a5:	lw                  a0, -1036(sp)       
i00000000a6:	lh                  a0, 1526(sp)        
i00000000a7:	fence.i                       
i00000000a8:	ld                  a5, 48(sp)          
i00000000a9:	lw                  a0, 64(sp)          
i00000000aa:	remuw               a3, s2, a1
i00000000ab:	lh                  s7, -1748(sp)       
i00000000ac:	ld                  s0, 48(sp)          
i00000000ad:	srli                s9, a3, 53
i00000000ae:	addw                t4, a0, a5
i00000000af:	and                 s1, s1, a3
i00000000b0:	addi                a0, sp, 348
i00000000b1:	addi                sp, sp, -304
i00000000b2:	lw                  a3, -2044(sp)       
i00000000b3:	addi                sp, sp, -464
i00000000b4:	remuw               a1, s8, t5
i00000000b5:	addiw               a2, a2, -21
i00000000b6:	xori                a3, s11, -1086
i00000000b7:	lb                  a4, 310(sp)         
i00000000b8:	ld                  s1, 40(sp)          
i00000000b9:	divuw               a3, s3, s4
