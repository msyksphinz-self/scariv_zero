# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831225

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 3592  
				add                 sp, sp, t1
i0000000000:	li                  x19, 10   
i0000000001:	subw                a4, a4, a3
i0000000002:	remuw               s2, t6, t5
i0000000003:	lw                  t6, 52(sp)          
i0000000004:	addi                sp, sp, 64
i0000000005:	sd                  s2, 72(sp)          
i0000000006:	fence.i                       
i0000000007:	andi                a3, a3, 8 
i0000000008:	mul                 a3, a6, s6
i0000000009:	srai                a2, a2, 6 
i000000000a:	srli                a2, a2, 26
i000000000b:	and                 a4, a4, a2
i000000000c:	lwu                 a2, 1564(sp)        
i000000000d:	addi                s0, sp, 88
i000000000e:	xor                 a2, a2, s1
i000000000f:	srlw                a2, s6, s11
i0000000010:	divw                a2, a4, a3
i0000000011:	addiw               a4, a4, 9 
i0000000012:	remu                a5, a3, a2
i0000000013:	add                 a4, zero, s2
i0000000014:	and                 a3, a3, a4
i0000000015:	fence.i                       
i0000000016:	lh                  t4, 1156(sp)        
i0000000017:	mul                 a1, gp, s2
i0000000018:	sb                  a4, -1262(sp)       
i0000000019:	srli                a3, a3, 7 
i000000001a:	sraw                a2, s8, s8
i000000001b:	fence                         
i000000001c:	addi                sp, sp, 176
i000000001d:	ld                  a5, 48(sp)          
i000000001e:	ld                  a0, 24(sp)          
				la                  sp, begin_signature
				li                  t1, 10312 
				add                 sp, sp, t1
i000000001f:	lbu                 t1, 776(sp)         
i0000000020:	addi                sp, sp, 96
i0000000021:	mulhsu              a3, a5, a5
i0000000022:	fence                         
i0000000023:	srliw               t2, s9, 26
i0000000024:	ld                  s6, 216(sp)         
i0000000025:	addi                sp, sp, 16
i0000000026:	addw                a4, a4, a4
i0000000027:	addi                sp, sp, -496
i0000000028:	ld                  t6, -1680(sp)       
				li                  x17, 12   
				addi                x19, x19, 1
				ld                  zero, 1864(sp)      
				sraw                s1, s9, s7
				divw                a4, a4, a5
				addi                s0, sp, 208
				sw                  t2, 68(sp)          
				sw                  a5, 56(sp)          
				addw                a4, a4, a5
	
b0000000029:
				pre_branch_macro                        
				bne                 x19, x17, i0000000018
				post_branch_macro                       
	
				ld                  a4, 24(sp)          
				srai                s0, s0, 8 
				fence.i                       
				srai                a5, a5, 13
				srai                s1, s1, 13
				and                 a5, a5, s1
				srai                s0, s0, 24
				li                  x19, 10   
i0000000029:	lui                 a3, 26    
i000000002a:	addiw               a3, a3, -27
i000000002b:	xor                 a2, a2, a3
i000000002c:	sw                  a5, 28(sp)          
i000000002d:	lbu                 a2, 371(sp)         
i000000002e:	mulhu               a3, t5, s10
i000000002f:	srai                a1, a1, 10
i0000000030:	addi                sp, sp, 64
i0000000031:	addi                sp, sp, -368
i0000000032:	srli                a5, a5, 6 
i0000000033:	addi                sp, sp, -272
i0000000034:	mulh                s4, a2, a4
i0000000035:	srai                a2, a2, 16
i0000000036:	fence.i                       
i0000000037:	srai                a2, a2, 2 
i0000000038:	sd                  s6, 232(sp)         
i0000000039:	addi                sp, sp, 96
i000000003a:	lwu                 a4, 812(sp)         
i000000003b:	addi                sp, sp, -48
i000000003c:	sw                  a3, 104(sp)         
i000000003d:	srli                a4, a4, 3 
i000000003e:	lwu                 a3, 1208(sp)        
				la                  sp, begin_signature
				li                  t1, 10536 
				add                 sp, sp, t1
i000000003f:	sd                  a4, 48(sp)          
i0000000040:	add                 a3, a3, s8
i0000000041:	mulhsu              a5, a3, a2
i0000000042:	fence                         
i0000000043:	addi                sp, sp, 176
i0000000044:	sw                  a3, 56(sp)          
i0000000045:	sw                  a5, 12(sp)          
i0000000046:	lui                 a3, 3     
i0000000047:	mulhsu              tp, tp, a1
i0000000048:	or                  t2, a4, a4
i0000000049:	sw                  a4, -264(sp)        
i000000004a:	addiw               a2, a2, -16
i000000004b:	xori                a3, a0, 1540
i000000004c:	fence                         
i000000004d:	lb                  s4, -990(sp)        
i000000004e:	or                  a3, a3, s0
i000000004f:	lw                  a4, 1468(sp)        
i0000000050:	add                 a2, zero, a4
				li                  x29, 11   
				li                  x19, 10   
				divuw               s8, a6, a7
				slli                s1, s1, 9 
				ld                  a6, 120(sp)         
				mulh                s6, s5, s7
				srli                s0, s0, 16
				addi                sp, sp, -256
				lbu                 s8, -701(sp)        
	
b0000000051:
				pre_branch_macro                        
				bne                 x19, x29, i0000000072
				post_branch_macro                       
	
				sw                  a4, 1440(sp)        
				srai                a4, a4, 25
				divw                s2, a7, s9
				rem                 a5, tp, tp
				addi                sp, sp, -368
				sw                  s2, 12(sp)          
				ori                 a5, a4, 356
				li                  x19, 10   
i0000000051:	lhu                 a2, -2040(sp)       
i0000000052:	srli                a3, a3, 1 
i0000000053:	sw                  a7, 80(sp)          
i0000000054:	remw                gp, a3, a2
i0000000055:	addi                a5, sp, 64
i0000000056:	srai                a0, a0, 20
i0000000057:	sd                  a2, 16(sp)          
i0000000058:	ld                  t2, 40(sp)          
i0000000059:	subw                a3, a3, a1
i000000005a:	srliw               t3, a3, 14
i000000005b:	srai                a1, a1, 11
i000000005c:	remu                a4, a3, a3
i000000005d:	remuw               a2, t5, s8
i000000005e:	fence.i                       
i000000005f:	srli                s1, s1, 15
i0000000060:	add                 s8, s8, t5
i0000000061:	srli                a4, a4, 1 
i0000000062:	fence.i                       
i0000000063:	addiw               a4, s9, -1675
i0000000064:	xor                 a1, a1, s1
i0000000065:	mulw                a4, a3, a4
i0000000066:	lw                  a5, 16(sp)          
i0000000067:	srai                a3, a3, 2 
i0000000068:	lh                  a2, 292(sp)         
i0000000069:	srli                a2, a2, 4 
i000000006a:	remu                a4, s0, s11
i000000006b:	subw                a4, a4, a5
i000000006c:	srlw                s9, a1, a6
i000000006d:	sub                 a2, a2, a4
i000000006e:	slliw               s2, a3, 7 
i000000006f:	mul                 a4, s11, a0
i0000000070:	mulhu               a2, a2, a3
i0000000071:	sd                  a3, 32(sp)          
i0000000072:	srli                a1, a1, 7 
i0000000073:	or                  t1, a3, a3
i0000000074:	mulhu               a3, a4, a3
i0000000075:	srli                a4, a4, 7 
i0000000076:	ld                  s4, 1168(sp)        
i0000000077:	divu                a3, a4, a2
i0000000078:	addi                sp, sp, -272
				li                  x31, 12   
				addi                x19, x19, 1
				la                  sp, begin_signature
				li                  t1, 6208  
				add                 sp, sp, t1
				la                  sp, begin_signature
				li                  t1, 13632 
				add                 sp, sp, t1
				mulh                s10, tp, gp
				sd                  a4, 224(sp)         
				sh                  a5, -584(sp)        
				sw                  s0, 52(sp)          
				srl                 s8, s10, s8
				divw                t4, t3, t3
				sd                  s7, 64(sp)          
	
b0000000079:
				beq                 x19, x31, 1f        
				jal                 x1, i000000005d     
				1: li x19, 10                           
	
				and                 a4, a4, a4
				mulw                s4, a4, s4
				sll                 a4, t4, s9
				fence.i                       
				lw                  s0, 76(sp)          
				divuw               s8, s0, s2
				ld                  a4, 208(sp)         
i0000000079:	sh                  t2, -1104(sp)       
i000000007a:	divu                t1, a3, a3
i000000007b:	add                 a4, a4, a3
i000000007c:	divw                a3, s5, t4
i000000007d:	lh                  t5, 1174(sp)        
i000000007e:	or                  a3, a3, a0
i000000007f:	subw                a3, t2, s10
i0000000080:	ld                  a3, 104(sp)         
i0000000081:	mulhu               s11, a3, a3
i0000000082:	addi                sp, sp, 48
i0000000083:	divw                t6, a2, a4
i0000000084:	sw                  a1, 32(sp)          
i0000000085:	lhu                 s4, -914(sp)        
i0000000086:	slli                a2, a2, 19
i0000000087:	remuw               a2, a3, a4
i0000000088:	ld                  a4, -1160(sp)       
i0000000089:	lb                  s1, -1792(sp)       
i000000008a:	srli                a3, a3, 13
i000000008b:	srlw                t2, a1, a0
i000000008c:	sd                  a4, 1016(sp)        
i000000008d:	srli                a1, a1, 15
i000000008e:	srli                a4, a4, 10
				la                  sp, begin_signature
				li                  t1, 5632  
				add                 sp, sp, t1
i000000008f:	sw                  a0, 44(sp)          
i0000000090:	lw                  a2, 64(sp)          
i0000000091:	subw                gp, a4, a4
i0000000092:	and                 a0, a0, a0
i0000000093:	addi                a3, sp, 8 
i0000000094:	fence                         
i0000000095:	mulh                a4, a3, a2
i0000000096:	srlw                a2, a3, a2
i0000000097:	divw                s6, a4, a3
i0000000098:	srli                a5, a5, 3 
i0000000099:	srli                a2, a2, 1 
i000000009a:	srai                a4, a4, 4 
i000000009b:	rem                 s0, a5, t6
i000000009c:	fence                         
i000000009d:	addi                a0, sp, 364
i000000009e:	ld                  a2, -768(sp)        
i000000009f:	sd                  t0, -1864(sp)       
i00000000a0:	srlw                a1, s1, t4
				la                  sp, begin_signature
				li                  t1, 11040 
				add                 sp, sp, t1
				addi                s0, sp, 448
				div                 s0, a4, a5
				sd                  s5, -880(sp)        
				fence.i                       
				ld                  s7, 1008(sp)        
				addi                a5, sp, 504
				sraw                t3, s8, s1
	
b00000000a1:
				la                  x22, i00000000a9    
				jalr                x0, x22, 0          
	
				remuw               tp, t4, s8
				lbu                 s8, 64(sp)          
				srli                s0, s0, 2 
				addi                sp, sp, -336
				addw                a4, a5, s0
				addi                s1, sp, 212
				srai                s1, s1, 20
i00000000a1:	srlw                t1, t0, s9
i00000000a2:	sh                  a2, -688(sp)        
i00000000a3:	and                 a2, a2, a3
i00000000a4:	srai                a5, a5, 11
i00000000a5:	subw                a5, a5, s0
i00000000a6:	andi                a4, s11, 574
i00000000a7:	lh                  a2, 1346(sp)        
i00000000a8:	srli                a4, a3, 56
i00000000a9:	ori                 a4, s1, 1970
i00000000aa:	fence.i                       
i00000000ab:	fence.i                       
i00000000ac:	ld                  a6, -1744(sp)       
i00000000ad:	sw                  a5, 1272(sp)        
i00000000ae:	lb                  a3, -327(sp)        
i00000000af:	srai                a3, a3, 4 
i00000000b0:	sb                  a3, 753(sp)         
i00000000b1:	ld                  a5, 1448(sp)        
i00000000b2:	sd                  a2, 1968(sp)        
i00000000b3:	divw                s4, t2, s2
				la                  sp, begin_signature
				li                  t1, 3712  
				add                 sp, sp, t1
i00000000b4:	lw                  a2, 908(sp)         
i00000000b5:	lw                  a2, 52(sp)          
i00000000b6:	fence.i                       
i00000000b7:	addw                a2, a2, a3
i00000000b8:	xor                 a3, a3, a3
i00000000b9:	slli                a2, a2, 27
i00000000ba:	addi                a4, zero, 16
i00000000bb:	div                 zero, a2, a3
i00000000bc:	sw                  a2, 40(sp)          
i00000000bd:	or                  a1, a1, a4
i00000000be:	sraiw               t0, a2, 20
i00000000bf:	srli                a1, a1, 24
i00000000c0:	ld                  a3, 1392(sp)        
i00000000c1:	fence.i                       
				la                  sp, begin_signature
				li                  t1, 14264 
				add                 sp, sp, t1
i00000000c2:	ld                  a4, -448(sp)        
i00000000c3:	remu                a4, a2, a2
i00000000c4:	sw                  a4, 1268(sp)        
i00000000c5:	auipc               a3, 24831 
i00000000c6:	divu                s9, a4, a4
i00000000c7:	sltu                a3, a4, a4
i00000000c8:	addi                a1, sp, 204
				li                  x31, 10   
				remu                a5, a5, s4
				sd                  s0, 104(sp)         
				fence                         
				fence                         
				addi                a4, sp, 240
				lb                  a5, 500(sp)         
				sb                  s1, 814(sp)         
	
b00000000c9:
				pre_branch_macro                        
				beq                 x19, x31, i00000000d4
				post_branch_macro                       
	
				fence                         
				sd                  a5, 136(sp)         
				ld                  t4, -1712(sp)       
				lwu                 tp, 236(sp)         
				remw                gp, a4, a4
				sd                  s4, 512(sp)         
				srli                s0, s0, 7 
				li                  x19, 10   
i00000000c9:	sraw                a4, a5, s5
				la                  sp, begin_signature
				li                  t1, 9936  
				add                 sp, sp, t1
i00000000ca:	ld                  t3, 32(sp)          
i00000000cb:	fence.i                       
i00000000cc:	ld                  s7, -408(sp)        
i00000000cd:	sw                  a3, 20(sp)          
i00000000ce:	srlw                s5, a2, a4
i00000000cf:	lw                  a2, 1512(sp)        
i00000000d0:	ld                  a2, 32(sp)          
i00000000d1:	srai                s1, s1, 9 
i00000000d2:	sw                  a2, 40(sp)          
i00000000d3:	mulh                zero, zero, a6
i00000000d4:	sub                 s7, a2, a4
i00000000d5:	sll                 a3, s6, s5
i00000000d6:	fence.i                       
i00000000d7:	lhu                 s5, -1004(sp)       
i00000000d8:	remuw               t3, a2, a2
i00000000d9:	xor                 a1, a1, a2
i00000000da:	ld                  s8, -1976(sp)       
i00000000db:	addi                s0, sp, 64
i00000000dc:	addi                a1, sp, 0 
i00000000dd:	sraw                t4, a3, a3
i00000000de:	srli                a3, a3, 13
i00000000df:	addi                sp, sp, -272
i00000000e0:	addi                s1, sp, 300
i00000000e1:	srli                a4, a4, 15
i00000000e2:	lbu                 a4, -981(sp)        
i00000000e3:	lh                  a6, 270(sp)         
i00000000e4:	mulhsu              t6, a0, t5
i00000000e5:	remuw               s6, s7, a5
