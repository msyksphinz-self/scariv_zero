# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831250

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 10784 
				add                 sp, sp, t1
i0000000000:	li                  x24, 10   
i0000000001:	addw                s0, s0, a5
i0000000002:	fence.i                       
i0000000003:	fence                         
i0000000004:	sub                 a2, a2, s1
i0000000005:	fence                         
i0000000006:	sub                 a1, a1, s1
i0000000007:	srliw               zero, a6, 19
i0000000008:	slt                 a1, a2, s0
i0000000009:	lbu                 s10, -902(sp)       
i000000000a:	srli                a1, a1, 1 
i000000000b:	mulhsu              t3, a7, s3
i000000000c:	mulh                zero, s3, s4
i000000000d:	lw                  a5, 64(sp)          
i000000000e:	addiw               a5, a5, -18
i000000000f:	srai                a4, a4, 31
				la                  sp, begin_signature
				li                  t1, 13576 
				add                 sp, sp, t1
i0000000010:	sw                  a1, 12(sp)          
i0000000011:	srli                a3, a3, 10
i0000000012:	slli                a0, a0, 16
i0000000013:	sub                 a3, a3, a5
i0000000014:	fence                         
i0000000015:	addi                s0, s0, -13
i0000000016:	srai                a5, a5, 2 
i0000000017:	addi                sp, sp, -368
i0000000018:	addiw               a0, a0, 3 
i0000000019:	addiw               a5, a5, -23
i000000001a:	addi                sp, sp, -464
i000000001b:	subw                a5, a5, a1
i000000001c:	slliw               t5, a5, 19
i000000001d:	add                 a5, zero, a1
i000000001e:	sh                  s3, 950(sp)         
i000000001f:	sd                  s0, 1280(sp)        
i0000000020:	srai                s1, s1, 1 
i0000000021:	sd                  a6, 696(sp)         
i0000000022:	addi                s1, sp, 240
i0000000023:	lwu                 s4, 1868(sp)        
i0000000024:	subw                a3, a1, zero
i0000000025:	sraiw               s0, a3, 6 
i0000000026:	srai                s1, s1, 15
i0000000027:	add                 a7, a7, a1
i0000000028:	srai                a3, a3, 7 
				la                  sp, begin_signature
				li                  t1, 9336  
				add                 sp, sp, t1
				la                  sp, begin_signature
				li                  t1, 7376  
				add                 sp, sp, t1
				lh                  a6, 100(sp)         
				fence.i                       
				subw                s9, a5, s1
				ld                  s1, 768(sp)         
				lb                  s1, -828(sp)        
				fence.i                       
				mulw                s1, s4, s4
	
b0000000029:
				jal                 x1, i0000000048     
	
				lwu                 gp, -1064(sp)       
				xori                a5, a6, -819
				sd                  a6, 1568(sp)        
				addw                s0, s0, a5
				lw                  s1, 40(sp)          
				ld                  s0, 112(sp)         
				lw                  s0, 56(sp)          
i0000000029:	sd                  a3, 1160(sp)        
i000000002a:	mulhu               a3, a3, a1
i000000002b:	addi                sp, sp, 192
i000000002c:	divuw               a1, s0, a3
i000000002d:	slli                a1, a1, 33
i000000002e:	slli                s1, s1, 16
i000000002f:	remw                a3, t6, a6
i0000000030:	fence                         
i0000000031:	remw                gp, a1, a5
i0000000032:	sltu                s7, s7, t2
i0000000033:	remu                tp, s3, t4
i0000000034:	lbu                 t6, 1773(sp)        
i0000000035:	srliw               a0, a5, 8 
i0000000036:	add                 a2, t5, s4
i0000000037:	srai                a1, a1, 24
i0000000038:	rem                 s9, t5, s7
				la                  sp, begin_signature
				li                  t1, 9808  
				add                 sp, sp, t1
i0000000039:	lhu                 s4, -1494(sp)       
