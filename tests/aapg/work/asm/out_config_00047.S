# Random Assembly Program Generated using aapg
# Generated at: 2022-03-11 16:13 GMT
# Seed: 13863580155342831242

#include "templates.S"

#aapg version: 2.2.6

# Generated by user: Unknown
# Arguments:
#  priv-mode:
#    mode: m
#  general:
#    total_instructions: 10000
#    regs_not_use: x1,x2
#    custom_trap_handler: True
#    code_start_address: 2147483648
#    default_program_exit: True
#    delegation: 4095
#  isa-instruction-distribution:
#    rel_sys: 0
#    rel_sys.csr: 0
#    rel_rv32i.ctrl: 1
#    rel_rv32i.compute: 10
#    rel_rv32i.data: 10
#    rel_rv32i.fence: 10
#    rel_rv64i.compute: 10
#    rel_rv64i.data: 10
#    rel_rv32m: 5
#    rel_rv64m: 5
#    rel_rv32a: 0
#    rel_rv64a: 0
#    rel_rv32f: 0
#    rel_rv64f: 0
#    rel_rv32d: 0
#    rel_rv64d: 0
#    rel_rvc.ctrl: 1
#    rel_rvc.compute: 10
#    rel_rvc.sp: 10
#    rel_rvc.data: 10
#    rel_rvc.fdata: 0
#    rel_rv32c.compute: 10
#    rel_rv32c.ctrl: 1
#    rel_rv32c.fdata: 0
#    rel_rv64c.compute: 10
#    rel_rv64c.data: 10
#  float-rounding:
#    rne: 0
#    rtz: 0
#    rdn: 0
#    rup: 0
#    rmm: 0
#  branch-control:
#    backward-probability: 0.5
#    block-size: 7
#  recursion-options:
#    recursion-enable: False
#    recursion-depth: 10
#    recursion-calls: 5
#  access-sections:
#    begin_signature: 0x80091000,0x80095000,rw
#  csr-sections:
#    sections: 0x0100:0xdff, 0x325, 0x500:0xfff
#  user-functions:
#    func1: {0:"add x0,x0,x0"}
#  switch-priv-modes:
#    switch_modes: False
#    num_switches: 0
#  i-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  d-cache:
#    num_calls: 0
#    num_bytes_per_block: 16
#    num_blocks: 8
#    num_cycles: 10
#  exception-generation:
#    ecause00: 0
#    ecause01: 0
#    ecause02: 0
#    ecause03: 0
#    ecause04: 0
#    ecause05: 0
#    ecause06: 0
#    ecause07: 0
#    ecause08: 0
#    ecause09: 0
#    ecause10: 0
#    ecause11: 0
#    ecause12: 0
#    ecause13: 0
#    ecause14: 0
#  data-hazards:
#    raw_prob: 0.5
#    war_prob: 0.5
#    waw_prob: 0.5
#    num_regs_lookbehind: 3
#  program-macro:
#    pre_program_macro: add x0,x0,x0
#    post_program_macro: add x0,x0,x0
#    pre_branch_macro: add x0,x0,x0
#    post_branch_macro: add x0,x0,x0
#    ecause00: random
#    ecause01: random
#    ecause02: random
#    ecause03: random
#    ecause04: random
#    ecause05: random
#    ecause06: random
#    ecause07: random
#    ecause08: random
#    ecause09: random
#    ecause10: random
#    ecause11: random
#    ecause12: random
#    ecause13: random
#    ecause14: random
#  self-checking:
#    rate: 100
#    test_pass_macro: la      sp, begin_signature; addi    sp, sp, 2*REGBYTES; li      t1, 0xfffff; SREG    t1, 0*REGBYTES(sp)
#    test_fail_macro: add x0,x0,x0

	.text
	.align		4
	.globl		main
	.type		main, @function
main:
				pre_program_macro             
				la                  t0, custom_trap_handler
				csrw                mtvec, t0 
				test_entry_macro              
				123:                          
				la                  sp, begin_signature
				li                  t1, 9080  
				add                 sp, sp, t1
i0000000000:	li                  x26, 10   
i0000000001:	ld                  a2, 112(sp)         
i0000000002:	sw                  zero, 100(sp)       
i0000000003:	lh                  t4, -1292(sp)       
i0000000004:	sllw                a6, t0, s2
i0000000005:	sw                  t5, 124(sp)         
i0000000006:	mulhsu              t5, t4, t4
i0000000007:	remw                a5, s7, s5
i0000000008:	divu                zero, t3, s3
i0000000009:	div                 s0, a2, a5
i000000000a:	fence                         
i000000000b:	srliw               t0, s0, 4 
i000000000c:	srli                t0, a7, 30
i000000000d:	div                 a1, s3, s4
i000000000e:	lb                  a2, -1530(sp)       
i000000000f:	sra                 t0, a0, s4
i0000000010:	lh                  s4, -820(sp)        
i0000000011:	lhu                 a0, 910(sp)         
i0000000012:	lui                 s4, 21    
i0000000013:	sd                  a2, 56(sp)          
i0000000014:	divw                s4, s4, t0
i0000000015:	and                 a4, a4, s0
i0000000016:	subw                s0, s0, s1
i0000000017:	slli                a2, a2, 9 
i0000000018:	remw                s1, a0, s7
				la                  sp, begin_signature
				li                  t1, 7512  
				add                 sp, sp, t1
i0000000019:	sd                  s4, 688(sp)         
i000000001a:	fence                         
i000000001b:	mulhsu              s4, a2, t0
i000000001c:	srli                s0, s0, 10
i000000001d:	sd                  s4, 208(sp)         
i000000001e:	sw                  s0, 1660(sp)        
i000000001f:	mulw                s6, t1, a3
i0000000020:	ld                  a2, 920(sp)         
i0000000021:	srli                s0, s0, 3 
i0000000022:	addw                a2, a2, s0
i0000000023:	srai                s1, s1, 9 
i0000000024:	remuw               a4, s4, s0
i0000000025:	auipc               s0, 436656
i0000000026:	fence.i                       
i0000000027:	lw                  a4, 64(sp)          
i0000000028:	xor                 a0, a0, a3
				li                  x29, 12   
				addi                x26, x26, 1
				sd                  a4, 128(sp)         
				lwu                 a4, -244(sp)        
				or                  a5, a5, s1
				sraiw               s4, gp, 14
				divw                a5, s8, s11
				srliw               s0, gp, 24
				srai                s0, s0, 2 
	
b0000000029:
				pre_branch_macro                        
				bge                 x29, x26, i0000000008
				post_branch_macro                       
	
				addi                s0, sp, 308
				sd                  s1, -504(sp)        
				srai                s1, s1, 1 
				sd                  a4, 128(sp)         
				fence                         
				sd                  s9, -448(sp)        
				fence                         
				li                  x26, 10   
i0000000029:	addi                s0, zero, 4
i000000002a:	sw                  a2, -1680(sp)       
i000000002b:	xor                 s0, s0, a1
i000000002c:	sd                  s4, 1792(sp)        
i000000002d:	sd                  s8, 248(sp)         
i000000002e:	srli                a2, a2, 15
i000000002f:	sd                  s4, 264(sp)         
i0000000030:	srlw                s11, a6, s1
i0000000031:	addi                a3, sp, 104
i0000000032:	sraw                a2, s4, s4
i0000000033:	sra                 s7, a6, s3
i0000000034:	sd                  s7, 1840(sp)        
i0000000035:	addi                s1, sp, 344
i0000000036:	srli                a3, a3, 12
				la                  sp, begin_signature
				li                  t1, 2096  
				add                 sp, sp, t1
i0000000037:	lw                  s0, 60(sp)          
i0000000038:	addi                s1, s1, 8 
i0000000039:	addi                t1, a2, 532
i000000003a:	remu                zero, s4, a2
i000000003b:	xor                 s1, s1, s0
				la                  sp, begin_signature
				li                  t1, 13664 
				add                 sp, sp, t1
i000000003c:	lb                  s4, -775(sp)        
				la                  sp, begin_signature
				li                  t1, 5752  
				add                 sp, sp, t1
i000000003d:	lw                  t4, 56(sp)          
i000000003e:	ld                  a2, -1832(sp)       
i000000003f:	fence.i                       
i0000000040:	add                 s4, s4, s5
i0000000041:	div                 s4, s3, t5
				la                  sp, begin_signature
				li                  t1, 11440 
				add                 sp, sp, t1
i0000000042:	sd                  a6, 40(sp)          
i0000000043:	lw                  s9, 1916(sp)        
i0000000044:	sd                  tp, -808(sp)        
i0000000045:	sraiw               s0, a2, 18
i0000000046:	sub                 s0, a4, s7
i0000000047:	remw                s0, a2, s0
i0000000048:	sub                 a2, tp, s7
i0000000049:	srli                a3, a3, 9 
i000000004a:	mulw                s8, s0, a2
i000000004b:	fence.i                       
i000000004c:	slli                a3, a3, 22
i000000004d:	mulw                s3, s4, s0
i000000004e:	fence                         
i000000004f:	slt                 a4, s1, a3
i0000000050:	srliw               s4, a2, 2 
				li                  x21, 9    
				fence                         
				lwu                 s4, -1308(sp)       
				sb                  s11, -410(sp)       
				lw                  t6, 8(sp)           
				remw                s0, s1, s0
				divuw               s1, gp, s2
				sd                  s3, 40(sp)          
	
b0000000051:
				pre_branch_macro                        
				blt                 x26, x21, i000000003a
				post_branch_macro                       
	
				lw                  s4, 60(sp)          
				srli                a4, a4, 2 
				divw                a4, zero, s9
				sd                  s0, 720(sp)         
				subw                a5, a5, a5
				divuw               a4, t6, gp
				ld                  s1, 208(sp)         
				li                  x26, 10   
i0000000051:	fence.i                       
i0000000052:	srli                a0, a0, 5 
i0000000053:	xori                a2, s4, 1750
				la                  sp, begin_signature
				li                  t1, 4920  
				add                 sp, sp, t1
i0000000054:	sw                  a0, 52(sp)          
i0000000055:	mulh                s5, s8, s7
i0000000056:	lhu                 s2, 562(sp)         
i0000000057:	addw                a3, a3, a2
				la                  sp, begin_signature
				li                  t1, 12608 
				add                 sp, sp, t1
i0000000058:	lw                  a5, 32(sp)          
i0000000059:	remuw               t3, a5, t0
i000000005a:	ld                  s1, 0(sp)           
i000000005b:	ld                  s0, 240(sp)         
i000000005c:	addw                a3, a3, a0
i000000005d:	lui                 a2, 13    
i000000005e:	remu                a2, s4, a2
i000000005f:	subw                s0, s0, a1
i0000000060:	add                 s0, a2, a2
i0000000061:	ori                 s0, a5, -1449
				la                  sp, begin_signature
				li                  t1, 7336  
				add                 sp, sp, t1
i0000000062:	sd                  s4, 120(sp)         
i0000000063:	andi                a0, a0, -18
i0000000064:	ld                  s8, -1648(sp)       
i0000000065:	srli                a5, a5, 7 
i0000000066:	divuw               s0, s4, s4
i0000000067:	mulh                a0, s0, s0
i0000000068:	and                 a4, a4, a2
i0000000069:	add                 s6, zero, s0
i000000006a:	addw                s0, s0, s0
				la                  sp, begin_signature
				li                  t1, 3928  
				add                 sp, sp, t1
i000000006b:	lb                  s4, 689(sp)         
i000000006c:	lw                  a2, 12(sp)          
i000000006d:	fence.i                       
i000000006e:	lwu                 a2, 1292(sp)        
i000000006f:	slt                 t2, t0, s7
i0000000070:	fence.i                       
i0000000071:	slli                a5, a2, 63
i0000000072:	add                 s0, a7, t1
i0000000073:	srai                s0, s0, 1 
i0000000074:	ld                  a2, 88(sp)          
i0000000075:	addi                sp, sp, -400
i0000000076:	sh                  t1, -340(sp)        
i0000000077:	srai                a2, a2, 14
i0000000078:	sltu                s1, a2, s0
				li                  x16, 10   
				la                  sp, begin_signature
				li                  t1, 10872 
				add                 sp, sp, t1
				srliw               s11, s9, 19
				addi                sp, sp, -112
				mulhsu              s0, a4, tp
				sw                  s1, 28(sp)          
				addi                a4, sp, 428
				remuw               zero, s4, s4
				srlw                s0, t2, s2
	
b0000000079:
				pre_branch_macro                        
				bne                 x26, x16, i0000000070
				post_branch_macro                       
	
				sd                  s7, 152(sp)         
				srli                s0, s0, 4 
				fence                         
				mulh                s5, s4, s4
				lw                  s0, 120(sp)         
				lw                  s0, 12(sp)          
				mul                 s2, a4, t3
				li                  x26, 10   
i0000000079:	srai                a5, a5, 15
				la                  sp, begin_signature
				li                  t1, 13232 
				add                 sp, sp, t1
i000000007a:	lw                  a3, 8(sp)           
i000000007b:	divw                s4, a7, tp
i000000007c:	fence                         
				la                  sp, begin_signature
				li                  t1, 10600 
				add                 sp, sp, t1
i000000007d:	lw                  s0, 84(sp)          
i000000007e:	divw                s4, a2, s0
i000000007f:	sw                  s4, 40(sp)          
i0000000080:	srlw                s0, a2, a2
				la                  sp, begin_signature
				li                  t1, 11896 
				add                 sp, sp, t1
i0000000081:	lhu                 tp, -492(sp)        
i0000000082:	addi                sp, sp, 192
i0000000083:	sltu                a2, a0, t4
i0000000084:	mul                 s4, t4, t5
				la                  sp, begin_signature
				li                  t1, 4936  
				add                 sp, sp, t1
i0000000085:	ld                  a2, 40(sp)          
i0000000086:	fence.i                       
i0000000087:	fence.i                       
i0000000088:	fsrmi               x0, 4     
				la                  sp, begin_signature
				li                  t1, 5576  
				add                 sp, sp, t1
i0000000089:	sd                  s4, 72(sp)          
i000000008a:	addi                s0, sp, 152
i000000008b:	subw                s0, tp, s8
i000000008c:	sd                  s0, -288(sp)        
i000000008d:	addw                s0, s0, a5
i000000008e:	sw                  s4, 108(sp)         
i000000008f:	fence                         
i0000000090:	ld                  a0, 16(sp)          
i0000000091:	divw                a7, zero, s6
i0000000092:	addw                s0, s0, s0
i0000000093:	sllw                s4, s4, s4
				la                  sp, begin_signature
				li                  t1, 2640  
				add                 sp, sp, t1
i0000000094:	lw                  zero, 32(sp)        
i0000000095:	sra                 s0, s0, s4
i0000000096:	lwu                 a2, 216(sp)         
i0000000097:	mulh                s0, s8, s7
i0000000098:	lw                  s4, 20(sp)          
i0000000099:	addi                a2, sp, 248
i000000009a:	lw                  a1, 80(sp)          
i000000009b:	ld                  s7, 1400(sp)        
i000000009c:	addi                s1, zero, -2
i000000009d:	sd                  a2, 24(sp)          
i000000009e:	remw                tp, s0, s0
i000000009f:	lbu                 s4, 2024(sp)        
i00000000a0:	sd                  s8, 232(sp)         
i00000000a1:	srai                a1, a1, 1 
				li                  x24, 0    
				la                  sp, begin_signature
				li                  t1, 10128 
				add                 sp, sp, t1
				la                  sp, begin_signature
				li                  t1, 8224  
				add                 sp, sp, t1
				ld                  s5, 224(sp)         
				mulh                a4, s2, zero
				fence                         
				lw                  a4, 52(sp)          
				divu                s11, s1, s1
				lw                  s7, 72(sp)          
				lhu                 s7, -1282(sp)       
	
b00000000a2:
				pre_branch_macro                        
				beq                 x26, x24, i0000000093
				post_branch_macro                       
	
				addi                sp, sp, -272
				fence                         
				sllw                s7, s4, s0
				and                 s1, s1, s1
				remuw               a6, s9, s9
				sll                 t4, s5, s2
				addiw               a5, a5, 10
				li                  x26, 10   
i00000000a2:	fence.i                       
i00000000a3:	addi                sp, sp, -240
i00000000a4:	mulhsu              s4, s5, t0
i00000000a5:	slliw               t5, a2, 7 
i00000000a6:	ld                  a4, 1128(sp)        
i00000000a7:	or                  s0, t0, a0
