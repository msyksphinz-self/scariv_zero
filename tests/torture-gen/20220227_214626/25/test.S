// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x9, x0, 1
	la x7, test_memory+588
	la x2, test_memory-321
	sra x29, x3, x30
	sd x29, 388(x7)
	la x3, test_memory+2234
	sraw x13, x6, x30
	addi x26, x0, -1702
	addi x15, x0, 698
	remu x17, x26, x26
	sll x9, x9, 63
	addi x16, x0, -437
	la x5, test_memory-290
	addi x23, x0, 1
	lh x4, -1664(x3)
	lw x12, 545(x2)
	addi x31, x0, 1158
	addi x29, x0, 846
	lw x11, 414(x5)
	addi x17, x0, -2032
	addi x18, x0, 244
	addi x28, x0, 1130
	sra x25, x31, x31
	addi x1, x0, -962
	addi x7, x17, -814
	sub x13, x29, x29
	bgeu x7, x17, crash_backward
	sll x23, x23, 63
	addi x27, x0, -1
	and x6, x15, x18
	addi x25, x2, 0
	addi x14, x0, -602
	xor x19, x11, x1
	addi x2, x0, -2028
	addi x11, x0, 1557
	mul x31, x16, x16
	addi x3, x25, 0
	srl x4, x2, x11
	addi x24, x0, -1
	xor x27, x27, x23
	sraw x30, x28, x1
	and x8, x22, x27
	la x26, test_memory+2358
	la x25, test_memory+1168
	la x29, test_memory+2273
	lw x11, -492(x25)
	addi x19, x0, 2021
	la x7, test_memory-1162
	la x2, test_memory+3010
	xor x24, x24, x9
	sra x28, x18, x4
	la x4, test_memory+904
	and x22, x15, x24
	ld x13, 1994(x7)
	la x12, test_memory+2343
	la x3, test_memory+1255
	sh x11, -609(x3)
	sra x21, x16, x14
	la x17, test_memory-1619
	la x3, test_memory-179
	and x11, x21, x21
	la x16, test_memory-1240
	addi x1, x27, 0
	sh x9, 1837(x17)
	lw x30, -2001(x29)
	addi x14, x1, 0
	lbu x31, -128(x4)
	lhu x15, -1988(x2)
	addi x1, x0, -1311
	sllw x17, x1, x1
	or x20, x8, x23
	la x28, test_memory-898
	or x10, x1, x9
	sd x1, -1799(x12)
	addi x25, x0, -1435
	addi x1, x0, 1
	sll x1, x1, 63
	remu x7, x25, x25
	ld x21, 531(x3)
	la x2, test_memory-1000
	lh x5, -1814(x26)
	lhu x13, 914(x28)
	addi x14, x0, 197
	bge x10, x22, crash_backward
	sw x6, 1088(x2)
	addi x31, x0, -1
	xor x31, x31, x1
	mulhu x4, x14, x14
	and x17, x30, x31
	la x7, test_memory+2319
	addi x11, x0, -772
	sw x20, 1596(x16)
	or x15, x10, x1
	addi x30, x0, 507
	bge x15, x17, crash_backward
	srl x29, x11, x30
	addi x18, x0, -1749
	lb x25, -1862(x7)
	sraw x6, x19, x18
	srlw x10, x6, x6
	la x30, test_memory-1001
	remw x15, x23, x23
	lw x28, 1821(x30)
	addi x3, x8, 1505
	la x26, test_memory+1032
	la x24, test_memory+998
	srlw x16, x23, x29
	addi x25, x0, 1
	sw x18, -810(x24)
	addi x19, x0, -497
	addiw x12, x20, 586
	sll x25, x25, 63
	addi x17, x19, -978
	la x13, test_memory+722
	sh x23, -644(x13)
	addi x1, x0, -1563
	addi x4, x0, -1768
	addi x20, x0, 44
	la x29, test_memory-1815
	addi x11, x20, 1727
	sw x9, -168(x26)
	addi x5, x0, 1055
	bgeu x17, x19, crash_backward
	addi x21, x0, 1232
	addi x7, x0, -553
	sltu x6, x4, x5
	addw x2, x21, x7
	addi x23, x1, -1100
	ld x18, 1831(x29)
	bgeu x23, x1, crash_backward
	addi x31, x0, -1
	xor x31, x31, x25
	and x27, x15, x31
	or x8, x27, x25
	addi x17, x0, -1052
	la x26, test_memory-825
	la x25, test_memory+1658
	la x2, test_memory+2072
	addi x15, x0, -486
	remw x3, x17, x21
	la x23, test_memory-1644
	addi x20, x0, 758
	addw x21, x11, x16
	sltu x7, x17, x24
	slliw x13, x12, 31
	la x31, test_memory-345
	la x21, test_memory+1142
	la x6, test_memory+1535
	lbu x19, -1048(x25)
	addi x8, x0, -1220
	sltiu x7, x1, -1991
	la x18, test_memory-666
	addi x4, x0, 1
	sh x22, 859(x31)
	addi x1, x0, 1155
	ld x14, -1888(x2)
	lw x3, -166(x21)
	divw x30, x17, x17
	addi x19, x0, -1849
	la x28, test_memory+134
	add x13, x19, x19
	mulhu x24, x20, x8
	sh x20, 1910(x23)
	sh x5, -1073(x6)
	sll x4, x4, 63
	addi x9, x0, -1
	lwu x11, 1022(x18)
	la x25, test_memory+2450
	addi x12, x0, 0
	addi x10, x15, -19
	xor x9, x9, x4
	remw x22, x1, x1
	and x27, x24, x9
	or x29, x27, x4
	bgeu x27, x29, crash_backward
	lh x5, 1327(x26)
	addi x16, x0, 0
	sb x17, 219(x28)
	la x10, test_memory-380
	lb x7, -1625(x25)
	la x30, test_memory+1098
	addi x11, x0, 748
	sh x15, -204(x30)
	addi x27, x0, 1
	mulhu x4, x21, x15
	addi x28, x11, 1337
	addi x17, x0, 1
	add x5, x27, x27
	sb x20, 856(x10)
	remuw x26, x5, x5
	la x8, test_memory+2608
	srli x31, x4, 38
	sd x3, -1592(x8)
	la x22, test_memory+1104
	sll x17, x17, 63
	add x13, x21, x21
	addi x23, x0, -1
	addi x3, x0, 1
	sll x3, x3, 63
	remuw x13, x3, x3
	lhu x21, -952(x22)
	la x14, test_memory+33
	xor x23, x23, x17
	and x20, x7, x23
	addi x1, x0, -1
	mul x30, x22, x6
	addi x8, x0, 434
	addi x11, x0, 367
	addi x30, x0, 534
	sh x13, 97(x14)
	la x26, test_memory+1864
	la x31, test_memory-543
	sll x27, x27, 63
	or x5, x11, x11
	xor x1, x1, x3
	addi x21, x0, 1970
	xori x19, x25, -174
	addi x25, x0, -241
	addw x4, x8, x25
	addi x13, x30, 1989
	or x18, x17, x17
	and x2, x12, x1
	beq x20, x18, crash_backward
	or x15, x2, x3
	sra x28, x11, x21
	sw x12, 1051(x31)
	lw x7, -1356(x26)
	bltu x12, x16, crash_forward
	addi x6, x0, -1
	la x10, test_memory-1137
	xor x6, x6, x27
	divw x22, x14, x7
	sw x16, 1961(x10)
	la x9, test_memory-1364
	and x29, x18, x6
	or x24, x29, x27
	bgeu x29, x24, crash_backward
	sd x15, 1700(x9)
	addi x5, x0, -210
	addi x17, x0, -864
	addi x20, x0, -1850
	addi x22, x0, 1
	remu x30, x17, x17
	sll x22, x22, 63
	div x13, x22, x0
	la x16, test_memory-641
	sraw x29, x25, x25
	addi x26, x0, -1632
	addi x30, x0, 1
	sub x8, x1, x1
	addi x14, x0, -1313
	addi x23, x20, 0
	la x27, test_memory+762
	lhu x3, -278(x27)
	sll x31, x26, x14
	sra x10, x26, x21
	sraiw x8, x29, 18
	addi x7, x0, 342
	sh x28, 1065(x16)
	sll x30, x30, 63
	addi x6, x0, -852
	blt x0, x0, crash_backward
	la x19, test_memory-826
	addi x21, x0, -406
	la x14, test_memory+1355
	addi x15, x0, 682
	addi x2, x0, -1
	xor x2, x2, x22
	lb x28, 1295(x19)
	addi x13, x0, -1
	lh x8, -957(x14)
	sllw x18, x20, x15
	la x28, test_memory+2319
	and x24, x13, x2
	addi x16, x0, 1320
	addi x3, x0, 155
	subw x10, x16, x16
	divu x27, x21, x21
	remu x26, x17, x17
	addi x14, x0, 1804
	remuw x9, x7, x7
	xor x13, x13, x30
	and x17, x9, x13
	lbu x8, -1309(x28)
	or x29, x5, x30
	addi x1, x23, 0
	or x11, x13, x22
	and x19, x3, x14
	divu x4, x6, x6
	divu x12, x7, x21
	la x20, test_memory+1196
	addi x16, x0, -1836
	la x27, test_memory+1179
	la x3, test_memory-1621
	mulhu x4, x19, x17
	mulw x19, x23, x22
	sd x25, -515(x27)
	la x23, test_memory+888
	mulh x25, x5, x5
	la x12, test_memory+1109
	la x26, test_memory-1302
	la x31, test_memory+1408
	addi x6, x0, 1460
	remw x13, x29, x12
	sltu x18, x16, x16
	addi x17, x6, 396
	sh x10, 1522(x26)
	bge x6, x17, crash_forward
	la x21, test_memory-1475
	addi x7, x0, 0
	sb x9, -913(x12)
	lwu x10, -528(x20)
	la x30, test_memory+95
	addi x14, x0, 0
	sh x6, 445(x30)
	addi x20, x0, -335
	la x16, test_memory+1944
	addi x8, x0, 1
	la x13, test_memory+1577
	sd x19, -1376(x31)
	la x11, test_memory+236
	addi x5, x0, 1748
	la x18, test_memory+1228
	bltu x7, x14, crash_backward
	sw x15, 328(x11)
	lh x4, -506(x18)
	addi x27, x20, -1773
	la x29, test_memory-135
	ld x9, -672(x23)
	sllw x17, x9, x0
	lwu x2, 1753(x3)
	ld x12, -601(x13)
	addi x23, x0, 0
	remw x25, x5, x5
	mul x9, x16, x4
	la x22, test_memory+1492
	sw x8, 267(x29)
	bltu x20, x27, crash_forward
	lwu x24, 2035(x21)
	addi x6, x0, 1530
	sltu x10, x6, x6
	mulhsu x12, x10, x4
	subw x9, x17, x17
	addi x27, x0, -352
	sll x8, x8, 63
	lhu x19, -1826(x16)
	la x13, test_memory-1597
	addi x1, x0, -1
	sllw x3, x5, x0
	addi x10, x0, -371
	addi x11, x0, -498
	addi x30, x0, -1306
	lw x2, 1789(x13)
	sw x5, -972(x22)
	addi x19, x0, 849
	addi x29, x0, 1029
	divu x3, x5, x15
	slt x6, x27, x11
	addi x25, x0, -176
	addi x24, x10, -88
	addi x7, x0, 1916
	addw x21, x4, x4
	addi x18, x0, -158
	la x14, test_memory+213
	sltu x20, x25, x7
	sltu x26, x18, x18
	sllw x31, x30, x30
	lbu x17, 518(x14)
	la x22, test_memory+155
	addi x27, x0, 618
	addi x9, x0, -2023
	ori x14, x31, -1721
	mulhsu x17, x12, x10
	lw x13, 97(x22)
	remw x11, x27, x27
	la x26, test_memory-613
	addi x16, x0, 868
	lwu x30, 1137(x26)
	xor x1, x1, x8
	addi x4, x0, 0
	and x28, x9, x1
	addi x17, x0, 0
	add x5, x29, x29
	addi x7, x0, -1675
	la x14, test_memory+161
	xori x6, x26, 1743
	mul x12, x19, x9
	addi x2, x0, 1161
	divw x20, x23, x5
	addi x13, x0, 1
	la x29, test_memory-816
	la x22, test_memory-1024
	sll x13, x13, 63
	sraw x5, x11, x11
	addi x3, x16, 1271
	addi x11, x0, -1
	la x16, test_memory-1522
	sh x19, 1208(x22)
	or x15, x2, x8
	and x18, x7, x2
	addi x31, x0, 0
	la x5, test_memory-702
	srl x4, x12, x11
	lw x19, 1570(x16)
	beq x28, x15, crash_forward
	sub x27, x17, x17
	xor x11, x11, x13
	addi x10, x0, 1219
	addi x1, x0, 1763
	addi x15, x0, -1764
	la x21, test_memory-118
	addi x28, x0, 1
	lw x25, 326(x21)
	sd x3, 295(x14)
	or x24, x1, x1
	la x6, test_memory+2040
	srl x2, x16, x16
	lb x23, 1321(x29)
	la x4, test_memory+1180
	sllw x9, x2, x22
	mulhsu x18, x10, x15
	la x27, test_memory+1989
	mulhsu x20, x7, x7
	sh x31, -1534(x6)
	sll x28, x28, 63
	and x30, x30, x11
	sh x12, 756(x5)
	lh x8, -570(x4)
	or x26, x30, x13
	lbu x12, -1610(x27)
	bltu x26, x30, crash_backward
	addi x7, x0, -1
	xor x7, x7, x28
	and x3, x20, x7
	or x22, x3, x28
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x15, 120(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x28, 224(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xa1c7d489ea583ed6
reg_x1_init:	.dword 0xb16b1ace72de74a9
reg_x2_init:	.dword 0xead10e196d7d1340
reg_x3_init:	.dword 0x0000000000000002
reg_x4_init:	.dword 0xffffffffffffff82
reg_x5_init:	.dword 0x9165aa8972c32a17
reg_x6_init:	.dword 0xc34a338f6fdd702b
reg_x7_init:	.dword 0x5dae602734fbafe5
reg_x8_init:	.dword 0x223cc87c34680ab3
reg_x9_init:	.dword 0x67ac9a162632c439
reg_x10_init:	.dword 0x3235dca5e7cfdb55
reg_x11_init:	.dword 0x7e48af61145a88ac
reg_x12_init:	.dword 0x3d9eba62ea359a03
reg_x13_init:	.dword 0x0000000000000006
reg_x14_init:	.dword 0x0000000000000000
reg_x15_init:	.dword 0xffffffff80000005
reg_x16_init:	.dword 0xffffffffffffffff
reg_x17_init:	.dword 0xffffffffffff8007
reg_x18_init:	.dword 0x0800000000000007
reg_x19_init:	.dword 0x0800000000000007
reg_x20_init:	.dword 0x551468d0b0b16ee1
reg_x21_init:	.dword 0xffffffffffffffff
reg_x22_init:	.dword 0xd650590e07c7c708
reg_x23_init:	.dword 0xffffffffffffffff
reg_x24_init:	.dword 0x62d715189bcce557
reg_x25_init:	.dword 0x0000000000000000
reg_x26_init:	.dword 0xb7684f45ce8ca19f
reg_x27_init:	.dword 0xe7b5516195e1ecff
reg_x28_init:	.dword 0x05c5c654fd8be12b
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0x0000000000000000
reg_x31_init:	.dword 0x28d716653957bb18

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x4c796301781967ad
reg_x1_output:	.dword 0x3c4a1bc074c36367
reg_x2_output:	.dword 0x73488d571c4dfe1c
reg_x3_output:	.dword 0x26c8576eba186da6
reg_x4_output:	.dword 0xaacace08ce96a00f
reg_x5_output:	.dword 0x144f1553ba5ba9ce
reg_x6_output:	.dword 0x093008fb392af2c4
reg_x7_output:	.dword 0x58fd2871f5a1d0f9
reg_x8_output:	.dword 0x95da7106610f5e3f
reg_x9_output:	.dword 0xa3616fb798ef3e11
reg_x10_output:	.dword 0x4910382fb0fbcb70
reg_x11_output:	.dword 0x70be234d97c95293
reg_x12_output:	.dword 0x6c1b8f1bbd6da095
reg_x13_output:	.dword 0x15a32330c0f2e395
reg_x14_output:	.dword 0xaf26a7c2d3b29fdd
reg_x15_output:	.dword 0xe0c61b00a413f309
reg_x16_output:	.dword 0x64c8af6402708c4e
reg_x17_output:	.dword 0x55188f18834d3943
reg_x18_output:	.dword 0x2913f3b95407b8e7
reg_x19_output:	.dword 0xbf8926e01cbc42b8
reg_x20_output:	.dword 0xca44a76a986ce608
reg_x21_output:	.dword 0xb5dec85e4cfd2608
reg_x22_output:	.dword 0x4732f9c62ef91112
reg_x23_output:	.dword 0x5bf159122103163d
reg_x24_output:	.dword 0xcaa275b077741a4a
reg_x25_output:	.dword 0xbc6d380123715555
reg_x26_output:	.dword 0x8db3dbd6c6896502
reg_x27_output:	.dword 0x7f8bc5118c324afd
reg_x28_output:	.dword 0xce5dec292b23d5fa
reg_x29_output:	.dword 0xd5fc899880a2c39f
reg_x30_output:	.dword 0x8c24d288e220d403
reg_x31_output:	.dword 0x5ddfd63113839b9e

// Memory Blocks
	.align 8
test_memory:
	.dword 0x7c8f2abecaa02ee5, 0x046ce9cdfe445ae0
	.dword 0xcd52cfaf71311082, 0xadeaf610b55d848c
	.dword 0x7322e9cca97a5c3a, 0x904594de17999f14
	.dword 0x44abf0d01eff2091, 0x4ffa832b68983875
	.dword 0x40e194a49c85ff0f, 0xcca7b519e9c66abd
	.dword 0x998dc1a600b4ae67, 0x2f5e174a5ebca4cd
	.dword 0x5e4f340b4bdefadb, 0xda4e916a42a9bb60
	.dword 0x94294e9fe91ae8de, 0xc4ac1e0dd86f864b
	.dword 0xb9ae28b831a1ddfa, 0x1ff70bc57e958e06
	.dword 0xfae7076037a0f3f3, 0xba92bb6a7f7a8d6a
	.dword 0xe9aeb5d79318da2d, 0xdfc86fb9ad75cbbc
	.dword 0x6274713e4a8fe94a, 0xbc6f0227762592e9
	.dword 0x41955b8bf85f4d17, 0xea9890eb38384613
	.dword 0xcde5a9c4168e68a8, 0x63247a5ecfd1dc4c
	.dword 0xd0e2016964bdd8c1, 0xf325398bc787c3a0
	.dword 0x7f94b930c7d5b877, 0x89eef801f3097058
	.dword 0xcfc1f0f6d8410c16, 0x6c9ce8e87d2c1c7d
	.dword 0x06a8b4f5bbba7645, 0x1228c15479747b9b
	.dword 0x18d6a034714c9b68, 0x3110e1dba9a166c6
	.dword 0x686eb23a936ad745, 0x423f056d7e66c4e1
	.dword 0x181b4c0ddb2d28e9, 0x65aa895a07b8331d
	.dword 0x3fee885a9b0478cc, 0x794ea2b7f0f731c0
	.dword 0x05f362eb94ea9d33, 0x33be14e83050d927
	.dword 0xd16563634263c0d5, 0xe6233d746ad35b0d
	.dword 0x5cabbf2601dd0fc1, 0xf714891f6883d40d
	.dword 0x5a902696ef4ece7e, 0x4d92a63641413165
	.dword 0x35f8b18823c63f73, 0x7307082c24c92efc
	.dword 0x5bef9eee02ddfa89, 0xb16e90650200b1a6
	.dword 0xa53adbd454719b0e, 0x794570509bf101a5
	.dword 0x327085908643e7dc, 0xd68698bd51ffa972
	.dword 0x3294db3d531cd9ba, 0x2e624a648cfefcbe
	.dword 0x1c21525f95572401, 0x3d749bcd30118bb3
	.dword 0x521bc2eb802b2382, 0xc17e084feb3b067e
	.dword 0xaddfde6d477f57a7, 0x1f2d5c78f21d5511
	.dword 0x11ac667e2fe4c9d7, 0xfdab93917c08e725
	.dword 0xd328d67d89e8071f, 0x638f7a77ef73807e
	.dword 0x3f2f74839345900e, 0x94e82bb792590572
	.dword 0xac72fd8f181ae2df, 0x556ab8d5af3e0bab
	.dword 0xf8566100d41b83dd, 0x65c094eafbc4332b
	.dword 0x03c03f4d8263a803, 0x0cb994739e3c8b90
	.dword 0xec1b1fefa7f865e2, 0x45fd9664e3a48999
	.dword 0x9a4e929dfb9f90c7, 0x25072a82c33e50e8
	.dword 0x958cafbbcbb7a21c, 0x0df1c8f2e8bd5609
	.dword 0x4592ac147a5a550e, 0x5b3b6f0ca60c9cb2
	.dword 0x5eb273c58f9ad870, 0xb942b574e244164c
	.dword 0xace6807c935abade, 0x1b47b36ba0b6e4b1
	.dword 0xe9905ee2da3ef525, 0x73474362d95c8537
	.dword 0x7c9597565600b6e2, 0xdb6d7cd11f7327ed
	.dword 0xb495eddaceebd968, 0x4e5577448c59b724
	.dword 0x0e312d525d171ce7, 0x6019aabde7845331
	.dword 0xef01f1ea920093c9, 0x3699813a69564670
	.dword 0xd95626d838fae05f, 0xa88ded8c59d8b58a
	.dword 0x99052b447c7e28bc, 0x6a501b724df58ffb
	.dword 0x7b4ed2835239e4e1, 0x51d28ce5ca5284ce
	.dword 0xfaadb38a6df2eb1a, 0x627e38b3825fffab
	.dword 0xc73a7ba0660b5ea6, 0xb2aa7e4c70ec7213
	.dword 0x13e53854d248649d, 0xa08002d955cc6ce9
	.dword 0x1ba4ccb2c843c30e, 0xd083cb922e2c4e33
	.dword 0xe70c05b35f35ce67, 0x4609294f7b288722
	.dword 0x2db701f1a8a64919, 0x929e495e5895be4f
	.dword 0x66fae0a38359197b, 0xb6707f96c4b25247
	.dword 0x956cebc7b3b5f9ef, 0x45e29dad0d0f0049
	.dword 0x6075b19cff388743, 0xc160ebc62594b34d
	.dword 0xa977c15389685159, 0x9923964e0869bf48

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
