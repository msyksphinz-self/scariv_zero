// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	divu x17, x26, x26
	mulhu x6, x13, x12
	la x21, test_memory+2089
	addi x5, x0, 1
	divuw x23, x23, x31
	sub x25, x5, x3
	addi x2, x0, -1272
	la x8, test_memory+680
	lhu x27, 190(x8)
	lbu x19, -1329(x21)
	addi x13, x19, 984
	addi x29, x0, 1801
	sll x5, x5, 63
	addi x6, x1, -722
	addi x3, x0, 608
	xor x24, x14, x11
	addi x25, x0, 530
	div x12, x29, x29
	la x13, test_memory-602
	addi x16, x0, 1497
	addi x23, x0, 1
	sll x23, x23, 63
	xor x11, x16, x22
	addi x8, x0, 1152
	addi x31, x0, 1632
	addi x12, x0, -792
	addi x21, x0, -1
	sh x26, 1116(x13)
	and x9, x2, x2
	mulhsu x27, x25, x8
	xor x21, x21, x23
	addi x10, x0, -1
	addi x14, x12, -697
	xor x10, x10, x5
	subw x22, x2, x16
	divu x17, x4, x4
	and x6, x24, x21
	addi x8, x0, 286
	addi x7, x31, 901
	bgeu x31, x7, crash_forward
	or x19, x6, x23
	addi x27, x0, 846
	addi x1, x0, 717
	and x28, x31, x10
	bgeu x14, x12, crash_forward
	la x11, test_memory-1946
	div x25, x8, x27
	addi x13, x1, 234
	la x29, test_memory+1539
	addi x19, x0, 478
	lh x24, -887(x29)
	la x12, test_memory+1478
	la x17, test_memory+1070
	divu x14, x11, x11
	sb x21, -1397(x12)
	la x18, test_memory-1194
	la x2, test_memory-752
	la x6, test_memory-122
	addi x8, x0, -1375
	lh x9, -172(x17)
	sh x26, 646(x6)
	lh x20, 2044(x11)
	sb x30, 1655(x2)
	lh x26, 1674(x18)
	addi x16, x0, 423
	la x22, test_memory+1737
	la x27, test_memory+1158
	or x15, x28, x5
	lbu x25, -848(x27)
	remuw x14, x8, x8
	addi x23, x16, 551
	addi x30, x0, 1916
	addi x9, x0, -698
	xor x8, x25, x15
	bgeu x16, x23, crash_backward
	la x7, test_memory-75
	la x2, test_memory+416
	lwu x31, -753(x22)
	addi x6, x0, 1
	addi x13, x0, -1913
	mul x5, x23, x1
	divu x4, x3, x30
	addi x15, x0, -1689
	addi x28, x15, -1614
	rem x27, x9, x13
	addi x8, x0, 463
	addi x18, x0, 1995
	div x20, x22, x22
	addi x4, x2, -531
	srlw x21, x19, x19
	sd x20, 280(x2)
	blt x0, x0, crash_backward
	mulh x11, x27, x12
	addi x25, x18, 1314
	sw x19, 1059(x7)
	addi x23, x0, 1322
	addi x1, x0, 1834
	sub x10, x23, x23
	sll x6, x6, 63
	beq x18, x25, crash_backward
	addi x14, x1, 23
	addi x29, x0, -1
	addi x26, x29, 0
	bge x1, x14, crash_forward
	addi x17, x26, 0
	mulhu x16, x8, x8
	xor x29, x29, x6
	and x24, x2, x29
	or x12, x19, x6
	la x13, test_memory-736
	addw x24, x19, x19
	la x25, test_memory+2449
	addi x1, x0, 1045
	la x26, test_memory+1884
	or x15, x1, x1
	addi x11, x0, 1
	lb x8, -1583(x25)
	sll x11, x11, 63
	sraw x7, x14, x14
	addi x27, x0, -1
	addi x6, x0, -1278
	sh x21, -1020(x26)
	la x16, test_memory-381
	addi x5, x0, 763
	addi x15, x0, -46
	la x24, test_memory+2316
	la x17, test_memory+1171
	xor x27, x27, x11
	sd x29, -195(x17)
	lhu x10, 1420(x13)
	bne x27, x27, crash_backward
	xor x4, x15, x15
	la x25, test_memory-224
	lb x2, 1282(x16)
	addiw x9, x30, -1739
	addi x20, x0, -1323
	la x26, test_memory+2180
	addi x3, x0, 1069
	sd x6, 1088(x25)
	addi x7, x0, 1
	mulhsu x29, x6, x5
	and x28, x9, x24
	addi x14, x0, 491
	remw x21, x14, x14
	and x31, x3, x27
	or x30, x14, x11
	divuw x8, x20, x3
	sw x31, -1420(x24)
	la x16, test_memory+1490
	sll x7, x7, 63
	srlw x6, x25, x25
	mulhu x2, x2, x3
	la x8, test_memory+916
	la x18, test_memory+1339
	addi x1, x16, 0
	lhu x22, -457(x18)
	la x25, test_memory+428
	sw x5, -1688(x26)
	remuw x17, x19, x19
	addi x23, x0, -1
	addi x14, x0, 229
	addi x9, x0, 851
	addi x26, x23, 0
	sub x4, x14, x9
	xor x23, x23, x7
	xor x15, x26, x26
	la x28, test_memory+1996
	la x22, test_memory+2427
	addi x20, x1, 0
	lh x17, -1647(x22)
	sd x15, -1892(x28)
	lhu x10, -310(x8)
	slliw x5, x28, 6
	addi x29, x0, -1174
	addi x2, x26, 0
	la x6, test_memory-157
	and x12, x20, x23
	addi x13, x29, -551
	bge x30, x31, crash_forward
	lb x18, 904(x6)
	la x21, test_memory-1600
	or x19, x12, x7
	lw x3, -1374(x16)
	sd x2, 1712(x21)
	lbu x24, -106(x25)
	la x1, test_memory-327
	addi x15, x0, -1921
	la x25, test_memory+1162
	blt x0, x0, crash_backward
	lb x20, 830(x1)
	sraw x16, x18, x18
	la x13, test_memory+77
	sub x10, x2, x2
	bne x0, x0, crash_backward
	sw x15, 147(x13)
	mulw x17, x23, x23
	divw x26, x8, x8
	xor x21, x9, x31
	addi x2, x0, 1698
	srli x6, x26, 63
	la x29, test_memory+560
	addi x8, x0, 1757
	divw x4, x31, x27
	sw x26, -874(x25)
	lbu x11, 361(x29)
	mulw x31, x20, x31
	la x15, test_memory+1676
	lbu x19, -1258(x15)
	addi x17, x0, -1550
	la x13, test_memory-1515
	sllw x3, x2, x2
	addi x10, x0, 0
	addi x25, x0, 0
	lw x1, 1959(x13)
	la x23, test_memory-489
	sb x12, 645(x23)
	blt x10, x25, crash_forward
	addi x5, x0, 170
	la x3, test_memory-1153
	addi x4, x0, 2003
	mulhsu x26, x5, x4
	la x1, test_memory+918
	la x19, test_memory+1807
	addi x2, x0, 1640
	addi x9, x0, 1272
	la x21, test_memory-1821
	lwu x20, 1877(x21)
	addw x6, x15, x15
	rem x16, x27, x2
	mulw x11, x22, x4
	divuw x31, x26, x26
	divu x24, x8, x9
	sw x0, -518(x1)
	la x15, test_memory+1760
	lh x13, -1587(x19)
	mul x29, x2, x2
	addi x8, x0, -72
	sw x10, 1945(x3)
	addi x13, x0, 1649
	sub x24, x8, x8
	xori x23, x25, 1676
	addi x19, x0, 1259
	addi x7, x0, 327
	addi x29, x0, 1399
	mul x12, x17, x7
	sd x14, -1280(x15)
	addi x1, x0, -1773
	addi x15, x0, 1581
	addi x28, x0, -27
	addi x5, x0, 649
	addi x2, x0, 82
	la x24, test_memory-595
	remu x16, x5, x2
	la x4, test_memory+655
	addi x22, x0, 1
	addi x25, x29, 1333
	div x23, x13, x1
	slt x20, x14, x14
	addi x9, x0, 1878
	la x11, test_memory-51
	srl x18, x28, x28
	remuw x26, x19, x1
	la x7, test_memory+1460
	lw x8, 831(x24)
	la x6, test_memory+1854
	sd x29, 171(x11)
	divu x3, x13, x13
	sll x22, x22, 63
	lw x21, -535(x4)
	sw x23, -1228(x7)
	lb x31, -1734(x6)
	subw x10, x9, x9
	addi x12, x0, -1160
	addi x27, x0, -1
	xor x27, x27, x22
	remuw x17, x15, x12
	and x30, x5, x27
	or x14, x27, x22
	blt x30, x14, crash_forward
	addi x11, x10, 0
	la x16, test_memory+1064
	lbu x10, -384(x16)
	addi x8, x0, 1
	slt x29, x4, x0
	addi x7, x0, 1187
	addi x31, x0, -1948
	la x9, test_memory-863
	sll x8, x8, 63
	addi x24, x0, -1
	ld x3, 1271(x9)
	mulhu x5, x31, x31
	la x17, test_memory-762
	sllw x6, x1, x12
	la x26, test_memory+172
	mulh x27, x21, x21
	or x20, x2, x24
	lhu x4, 570(x26)
	addi x9, x0, 954
	addi x5, x0, -835
	divw x18, x15, x15
	addw x16, x19, x19
	slli x19, x31, 4
	addi x3, x0, -1025
	xor x24, x24, x8
	rem x21, x7, x7
	rem x25, x12, x26
	addi x1, x11, 0
	lui x23, 448041
	blt x11, x1, crash_backward
	and x15, x27, x24
	or x12, x8, x8
	la x1, test_memory-170
	remw x7, x4, x4
	lbu x23, 849(x1)
	addi x6, x0, 1
	addi x29, x0, -300
	addi x2, x0, -1683
	bge x12, x15, crash_forward
	sll x6, x6, 63
	la x30, test_memory-274
	addi x21, x0, -1232
	div x16, x26, x26
	subw x10, x9, x3
	addi x22, x2, -1326
	lw x28, 1178(x30)
	addw x14, x5, x29
	mulw x25, x30, x30
	la x15, test_memory+1846
	la x13, test_memory-428
	and x22, x2, x18
	la x30, test_memory+1947
	lwu x3, -938(x15)
	addi x5, x0, -2020
	addi x1, x0, 1
	sll x1, x1, 63
	xor x10, x8, x27
	lb x28, -1644(x30)
	addi x11, x0, -1559
	srl x26, x21, x11
	addi x7, x0, -1
	xor x7, x7, x1
	and x16, x26, x7
	addi x27, x0, -1
	addi x2, x0, 1727
	or x24, x16, x1
	sh x31, 1378(x17)
	la x3, test_memory-33
	lbu x31, 1265(x13)
	la x23, test_memory-822
	sh x2, 941(x3)
	la x29, test_memory-1325
	la x30, test_memory-202
	addi x14, x5, -456
	lw x10, 374(x30)
	la x28, test_memory+394
	la x21, test_memory+1124
	sb x10, 1819(x29)
	addi x12, x0, -625
	subw x9, x12, x12
	addi x1, x0, -1280
	sh x0, -1076(x21)
	sra x13, x1, x1
	la x24, test_memory+375
	addi x31, x0, 986
	addi x17, x0, 1761
	xor x27, x27, x6
	addi x10, x0, -273
	lw x8, 1582(x23)
	lw x22, -342(x28)
	addi x18, x0, 1472
	addi x3, x0, -613
	lh x11, 541(x24)
	addw x19, x18, x18
	ori x12, x30, -896
	and x4, x11, x27
	la x21, test_memory+1237
	lhu x11, -1055(x21)
	la x25, test_memory+1101
	rem x29, x31, x10
	addi x10, x0, 15
	addi x5, x0, -622
	addi x19, x30, 0
	addi x16, x0, -245
	addi x31, x0, 96
	addi x24, x4, 0
	addi x8, x19, 0
	addi x11, x0, -123
	div x15, x2, x2
	mulh x30, x17, x3
	xor x18, x28, x28
	or x21, x31, x31
	addi x23, x24, 0
	la x13, test_memory-1161
	addi x18, x0, 1990
	div x22, x15, x8
	addi x2, x18, 1111
	addi x7, x5, -264
	ld x26, -381(x25)
	la x1, test_memory+1115
	la x28, test_memory+1156
	remuw x14, x16, x16
	srl x29, x10, x11
	lbu x12, -755(x28)
	or x20, x12, x6
	bge x20, x4, crash_backward
	addi x15, x0, -1422
	beq x5, x7, crash_forward
	lwu x9, 1645(x13)
	addi x31, x0, -1235
	and x30, x15, x31
	sw x18, -631(x1)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x13c4f839e6bcb00a
reg_x1_init:	.dword 0x6a35006c2baa11fb
reg_x2_init:	.dword 0x9deff4d8ae9491d9
reg_x3_init:	.dword 0x92cc3e47692f0759
reg_x4_init:	.dword 0xf1c7e9a79d1270bf
reg_x5_init:	.dword 0x1190f2808d6f25d0
reg_x6_init:	.dword 0x459bad76d3872b01
reg_x7_init:	.dword 0x779ecfe1da3e9db8
reg_x8_init:	.dword 0xeb1e91fc463958e4
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0x965afb52bf60d30d
reg_x11_init:	.dword 0x0000000000000007
reg_x12_init:	.dword 0x427cb826cfc2b6ea
reg_x13_init:	.dword 0x22ea2e46133c1b70
reg_x14_init:	.dword 0x917c81115cd91399
reg_x15_init:	.dword 0x9113ed655991474e
reg_x16_init:	.dword 0xa364ebde0339f2b8
reg_x17_init:	.dword 0x77e02f9ba241589b
reg_x18_init:	.dword 0xdc8fd563f3ebc925
reg_x19_init:	.dword 0xffffffff80000009
reg_x20_init:	.dword 0x0000000000000000
reg_x21_init:	.dword 0xfb3f939bdfde2aa9
reg_x22_init:	.dword 0xffffffffffffffff
reg_x23_init:	.dword 0xffffffff80000005
reg_x24_init:	.dword 0xe62f91db5d441f47
reg_x25_init:	.dword 0xffffffffffffff89
reg_x26_init:	.dword 0x0000000000000003
reg_x27_init:	.dword 0x5d3aab82293ae58f
reg_x28_init:	.dword 0xffffffffffff8009
reg_x29_init:	.dword 0x02057a890126528a
reg_x30_init:	.dword 0xd1cff1b9ee5ce0d7
reg_x31_init:	.dword 0x16e17768b49ae88b

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xede4e9b17c060a39
reg_x1_output:	.dword 0x8720bde4588a4cd4
reg_x2_output:	.dword 0x8e94b05d6d7cb07b
reg_x3_output:	.dword 0x7c543ab041535d7b
reg_x4_output:	.dword 0x91a7fe0f334cfb87
reg_x5_output:	.dword 0x8a6b7035835a1d89
reg_x6_output:	.dword 0x5b9625f41c3c3d84
reg_x7_output:	.dword 0xba30bb792f1e49b5
reg_x8_output:	.dword 0xe6f6fac18e957f1d
reg_x9_output:	.dword 0x8cd61ae0ee509b0b
reg_x10_output:	.dword 0x370956f8408e9c73
reg_x11_output:	.dword 0x1ff5ba1983ed2f01
reg_x12_output:	.dword 0xe6e36569e2adbd54
reg_x13_output:	.dword 0xccb4d83b4a0bdcc9
reg_x14_output:	.dword 0x69406dfbed119cad
reg_x15_output:	.dword 0xf6ac6c2a92d00be5
reg_x16_output:	.dword 0xf1d82aad47b2533d
reg_x17_output:	.dword 0xdb8d2b3fc666dfff
reg_x18_output:	.dword 0xd567e8d704d7998b
reg_x19_output:	.dword 0x9baad627c79bcdfa
reg_x20_output:	.dword 0xa155fab4675cb519
reg_x21_output:	.dword 0xaff4f00bb078ee44
reg_x22_output:	.dword 0x335c3d24732984da
reg_x23_output:	.dword 0x41a143f109e9a06d
reg_x24_output:	.dword 0xad2eb5ab80cb60e0
reg_x25_output:	.dword 0xad2edc61c1ab53fd
reg_x26_output:	.dword 0x7bdf8cc1e48fc159
reg_x27_output:	.dword 0x1bae514bea418a81
reg_x28_output:	.dword 0x8f11e847092de0bc
reg_x29_output:	.dword 0xe4a69027ae5f66e7
reg_x30_output:	.dword 0xcd216a54352bcd3e
reg_x31_output:	.dword 0x16bb825e558a5e0b

// Memory Blocks
	.align 8
test_memory:
	.dword 0x577c583813fe9d8b, 0x77ae35e817dedc91
	.dword 0x19caadc17facbcb2, 0xcba46c363418f5f4
	.dword 0xb75ca0b998b48160, 0xaa1fb351029070df
	.dword 0x48ff58b517688450, 0x62ea6d42eaf8c4bb
	.dword 0x99fedf09bf166a01, 0xe8c369b556aadc89
	.dword 0x0a088b1ebf6413aa, 0xb8f6f5d82f47b2f1
	.dword 0xcb116ee8969a6b6b, 0xc09e8687bee01b99
	.dword 0x829887b11f543fc4, 0x302e60aefcbf4dba
	.dword 0x0cd4b71b007ae24a, 0x868ae3e76dbb03f1
	.dword 0x2adac862cee17d97, 0x44555b62c9c54552
	.dword 0xb2c805ea1f6b5682, 0x38ba790defa92bc3
	.dword 0x9ec222f14eb86c8f, 0x210adef4449d3b86
	.dword 0x4d657da353172da9, 0xf6085ae134eb2017
	.dword 0xe846fd57ee31310e, 0x3358b846fe95e237
	.dword 0x33bf1116a0d42d8a, 0x41394c646be4eb48
	.dword 0xca87925ceb979ee7, 0xec9ca0a46b4b69db
	.dword 0xc00e901c6e32cea3, 0x288ddf431988eb87
	.dword 0xe1fc4606145e33e3, 0xb34be63583593ffc
	.dword 0xe48ac4099d565ea7, 0x5448244b1ad6f957
	.dword 0x02320a1dc9c5e23f, 0x4c53a48e2b151db6
	.dword 0x56139c3f6e3ef2fe, 0xf106ebeedfa9de0f
	.dword 0x15bcd2b495c4ab2c, 0xde178d21372d663d
	.dword 0xea876a9b036f2b40, 0x651896c43c4d1a5b
	.dword 0xe9541a9e6b35094e, 0x0c513fc48a44d555
	.dword 0xf0d330050b97c3be, 0xc2277604a494fcbb
	.dword 0xb74b77f043982b3e, 0x925233384fe57dd8
	.dword 0x390ff8e3dd32f7f9, 0xeee1bc0e80730803
	.dword 0xfcd940860bf4fe08, 0x2f6a2d98ca651834
	.dword 0x3b3f49a64439b529, 0x967efce58f40a9da
	.dword 0x1edd3e7eb99e07ae, 0xaf744cec8294a0ea
	.dword 0x4b789b3c5d5c9cb7, 0x06453eaefc3a413b
	.dword 0xa81974bdeee811a3, 0x57cc9f9ae9554710
	.dword 0x1299e79c1d6ad6c3, 0x436f9a33dbe474f6
	.dword 0x770ef36acf1ba350, 0x07304cf0a46caad0
	.dword 0x92cd463d8ed0b49f, 0xce186b634755da30
	.dword 0x05f0bc6f802b4c92, 0xe54a4d9cd1326be7
	.dword 0xd77598a062582351, 0xb80911cf2f9eeadf
	.dword 0x135eb7fc5ff8c03a, 0x94eeb43380f10827
	.dword 0x105446c22b94ee15, 0xf091412e50ca4c4f
	.dword 0x56dab9042232be8c, 0x7a4685ad941409f5
	.dword 0x3ffa0baa84a6d0d9, 0xe8c7e1d9612f659f
	.dword 0x982991bce315cfc0, 0xcc6e21e7e27d86cb
	.dword 0xd5d4d1e2603b5ac0, 0xfdd7814eb7114645
	.dword 0x75123822ba99ce85, 0xd8483c21509cedb7
	.dword 0x846c9ff503f9a0a0, 0x693852b223c3dc86
	.dword 0x5d2cfa7582d64279, 0x1087637d0a2125db
	.dword 0x64a194f480c1bf83, 0xd0f9bf47b0d17bff
	.dword 0xcfb4c3b853a78ab2, 0x45301b849c5ffceb
	.dword 0xfefcf4f8016a2f2a, 0xf47d86fb40dab41f
	.dword 0xb38c702facded838, 0xa31584a513cce5b2
	.dword 0x24674595f3e4e485, 0x5c4670d9d32a76aa
	.dword 0xb5ea31e96786f888, 0xea1294ac9119068d
	.dword 0x97d57a6ce3f6443c, 0x65bc8b964e388e37
	.dword 0xf85b05334e07f013, 0x9f01df5103d697ee
	.dword 0x6abf319dd9e7e529, 0x7e08fe06429464b3
	.dword 0xfb103520aa3364bc, 0xdcb5eea8d9b992da
	.dword 0x9670004d32e122dc, 0xe16b67a30cf219dd
	.dword 0x9ca8f00a2f83d85e, 0xcd742bb17acfaf6c
	.dword 0xcc85cf2433cf8016, 0xbeaad10c1b53e9c7
	.dword 0x3ce9ec096718b344, 0xc4b456ca5c49b350
	.dword 0xb12e46d00b08d94e, 0x30842c82de89e35b
	.dword 0x8c151b7d2a391eaf, 0x672690374cb01048
	.dword 0xb1f54c829011672f, 0x1938666f1e81eed4
	.dword 0x54d37188c767af54, 0x4d41f0a15d9cd2ab

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
