// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	srliw x12, x17, 30
	divu x14, x31, x20
	addi x15, x0, 0
	la x5, test_memory+2424
	addi x4, x0, 1
	mul x6, x7, x17
	addi x18, x0, 0
	addi x19, x0, 563
	addi x22, x0, 1962
	addi x9, x0, 1
	addi x8, x0, 137
	addi x20, x0, 487
	la x3, test_memory+234
	addi x13, x20, 124
	addi x23, x0, 1362
	addi x15, x0, 1244
	addi x18, x0, 825
	la x30, test_memory+1600
	addi x21, x23, 1845
	sll x28, x22, x8
	lbu x27, -213(x3)
	sll x4, x4, 63
	sd x2, -1584(x30)
	ld x11, -1888(x5)
	sll x9, x9, 63
	addw x20, x15, x18
	addi x7, x0, 1594
	addi x29, x0, -632
	mulh x24, x19, x29
	addi x16, x0, -1
	subw x26, x7, x7
	addi x31, x0, -1
	xor x16, x16, x9
	and x17, x26, x16
	or x25, x17, x9
	xor x31, x31, x4
	and x1, x20, x31
	or x10, x28, x4
	beq x1, x10, crash_forward
	remu x30, x16, x16
	addw x5, x26, x26
	la x10, test_memory+2844
	la x12, test_memory+10
	addi x9, x0, -2040
	subw x7, x22, x22
	addi x8, x0, -723
	addi x25, x0, 1218
	addi x24, x0, -312
	mulh x19, x8, x24
	remu x27, x4, x4
	addi x28, x0, 792
	addi x26, x25, 2006
	addi x20, x10, 1834
	la x18, test_memory-947
	sraw x29, x28, x29
	lh x21, -2002(x10)
	mulw x3, x9, x28
	addi x8, x0, 0
	addi x24, x0, -1131
	addi x19, x0, -1855
	addi x7, x0, 111
	remu x22, x12, x17
	divuw x29, x19, x19
	and x27, x24, x24
	addi x14, x0, 1
	addi x20, x7, 5
	slti x30, x11, 858
	bne x0, x0, crash_backward
	sll x1, x9, x9
	addi x5, x0, 0
	sll x14, x14, 63
	addi x19, x0, -1748
	addi x28, x0, -455
	remw x27, x28, x28
	addi x31, x0, -1546
	la x4, test_memory+21
	la x30, test_memory+917
	andi x3, x19, 2006
	addi x24, x12, 0
	la x11, test_memory+2203
	la x7, test_memory+1856
	add x2, x28, x28
	addi x21, x0, 1152
	sh x13, -1265(x11)
	addi x9, x31, -393
	blt x31, x9, crash_forward
	addi x1, x16, 0
	sb x20, 22(x30)
	la x25, test_memory+1467
	sraw x26, x31, x31
	addi x11, x1, 0
	blt x8, x5, crash_forward
	add x10, x19, x21
	la x15, test_memory-1592
	addi x6, x0, -1
	addi x5, x0, -76
	addi x26, x18, 0
	sllw x21, x20, x20
	sd x13, 115(x4)
	lh x16, 132(x12)
	addi x19, x23, 0
	addi x8, x0, 1124
	addi x9, x19, 0
	bne x1, x11, crash_backward
	addi x10, x26, 0
	la x12, test_memory+715
	la x21, test_memory-411
	sb x13, -1260(x25)
	ld x20, -1656(x7)
	addi x1, x0, 0
	remw x31, x8, x8
	addi x10, x0, 0
	la x25, test_memory-1000
	div x29, x8, x6
	addi x16, x0, 0
	blt x19, x9, crash_forward
	lhu x4, 865(x21)
	sw x8, -675(x12)
	addi x7, x0, -261
	addi x3, x0, 686
	addi x22, x24, 0
	bltu x24, x22, crash_backward
	la x20, test_memory+653
	sh x0, -645(x20)
	lbu x8, 1419(x25)
	addi x9, x0, -207
	xor x6, x6, x14
	addi x11, x0, 0
	addi x28, x0, -1747
	addw x26, x16, x16
	addi x22, x0, -479
	bne x1, x11, crash_forward
	addi x2, x0, -879
	mul x27, x28, x2
	la x12, test_memory-41
	addi x24, x0, -1014
	sraw x21, x9, x24
	la x27, test_memory-920
	divw x30, x5, x3
	addi x28, x0, 1
	addi x20, x0, -431
	la x25, test_memory+456
	sll x28, x28, 63
	rem x24, x8, x8
	remu x11, x20, x20
	lh x8, 280(x25)
	addi x16, x20, -1698
	sll x29, x22, x22
	sw x19, 133(x12)
	addi x31, x7, -148
	bgeu x16, x20, crash_forward
	la x25, test_memory-1293
	bltu x7, x31, crash_backward
	la x22, test_memory-140
	lhu x11, 504(x22)
	la x4, test_memory-527
	addi x1, x0, 1
	addi x10, x0, -1
	sh x6, 955(x4)
	la x9, test_memory+1990
	lhu x2, 1820(x27)
	lbu x26, -1396(x9)
	sw x0, 1672(x15)
	lw x29, 1985(x25)
	xor x10, x10, x28
	and x23, x1, x6
	sll x1, x1, 63
	la x11, test_memory+2016
	and x21, x26, x10
	lbu x17, 1029(x18)
	la x27, test_memory+86
	or x13, x2, x14
	addi x25, x0, 1
	la x24, test_memory-620
	la x22, test_memory+1871
	addi x16, x0, -1684
	sll x25, x25, 63
	addi x6, x0, -1655
	divw x7, x23, x14
	srliw x17, x10, 13
	sll x8, x6, x6
	or x19, x5, x28
	lwu x29, 826(x27)
	addi x4, x0, -1
	addi x23, x0, -1833
	lw x26, -1068(x11)
	sh x2, 1566(x24)
	sh x3, -953(x22)
	xor x4, x4, x25
	addi x11, x0, -1035
	xor x26, x24, x24
	sra x13, x8, x0
	and x20, x30, x4
	la x17, test_memory+1516
	lw x7, -1212(x17)
	subw x28, x22, x8
	srliw x26, x5, 30
	or x9, x25, x25
	addi x6, x11, -627
	la x29, test_memory-1059
	addi x30, x0, -1
	bltu x26, x26, crash_backward
	xor x30, x30, x1
	sraw x8, x0, x8
	sltu x10, x19, x19
	addi x12, x0, -2046
	add x22, x21, x2
	addi x14, x0, -949
	sub x31, x16, x12
	sb x16, 1649(x29)
	remw x18, x23, x14
	addi x21, x0, 0
	la x24, test_memory-166
	bltu x11, x6, crash_forward
	sd x1, 1142(x24)
	addi x13, x0, 0
	addi x2, x0, 1031
	ori x12, x14, 259
	la x29, test_memory-1135
	sll x27, x22, x24
	remu x19, x25, x25
	la x6, test_memory-295
	addi x22, x0, -989
	sw x28, 1439(x29)
	la x7, test_memory+1644
	lb x20, 796(x6)
	addi x9, x0, -234
	addi x4, x0, 1
	addi x16, x0, 937
	addi x12, x0, -1025
	addi x10, x0, -1091
	addi x15, x2, 131
	divuw x24, x22, x9
	la x26, test_memory-1067
	addi x31, x0, -1761
	la x19, test_memory+1065
	addi x25, x0, -658
	slt x8, x12, x12
	la x21, test_memory+2316
	lbu x22, -1623(x21)
	bge x2, x15, crash_backward
	sh x13, -1142(x7)
	sw x8, 1683(x26)
	addi x27, x0, 1444
	addi x9, x0, 0
	mulhsu x23, x10, x10
	remuw x14, x16, x16
	slt x17, x31, x25
	mulhsu x13, x27, x27
	addi x24, x0, 0
	and x3, x0, x30
	or x5, x3, x1
	ld x29, -65(x19)
	sll x4, x4, 63
	addi x18, x0, -1
	xor x18, x18, x4
	and x11, x23, x18
	or x28, x11, x4
	bgeu x11, x28, crash_forward
	srl x20, x30, x15
	la x25, test_memory-1522
	addi x4, x0, -811
	or x27, x8, x8
	la x31, test_memory+346
	addi x9, x30, 0
	addi x29, x4, -660
	la x28, test_memory-1372
	addi x21, x9, 0
	bltu x4, x29, crash_backward
	la x17, test_memory+674
	addi x5, x0, 1756
	remu x26, x21, x13
	blt x9, x21, crash_forward
	addi x24, x0, 1720
	addw x4, x0, x6
	la x18, test_memory+360
	addi x7, x0, 0
	mulhu x3, x25, x24
	ld x22, 1714(x25)
	andi x6, x12, -275
	la x20, test_memory-302
	addi x4, x0, -1203
	addi x9, x0, -1356
	sb x24, 590(x20)
	addi x30, x0, 287
	lb x19, 654(x31)
	addi x2, x0, -483
	addi x6, x24, 0
	mulw x12, x24, x2
	la x29, test_memory+97
	slt x1, x5, x30
	sh x12, -616(x17)
	la x16, test_memory+739
	lhu x11, -565(x16)
	addi x23, x0, 0
	srl x26, x4, x9
	addi x3, x0, 1820
	mul x20, x3, x3
	addi x1, x0, 1928
	addi x30, x0, -1333
	addi x15, x0, -343
	la x4, test_memory+1429
	la x17, test_memory+46
	sh x5, -162(x18)
	addi x14, x0, 1428
	lhu x3, -961(x4)
	addi x31, x0, -959
	slt x5, x1, x31
	add x10, x15, x14
	lhu x13, 1786(x28)
	addi x9, x0, -1048
	lui x20, 518
	lw x12, 846(x17)
	la x27, test_memory+1283
	addi x11, x0, -625
	srlw x19, x30, x11
	mulw x26, x9, x9
	lhu x8, 925(x29)
	addi x26, x0, 396
	mulhu x9, x23, x16
	la x1, test_memory+1576
	ld x5, -680(x1)
	addi x28, x0, 0
	mulhu x11, x28, x28
	addi x21, x6, 0
	addi x18, x0, 232
	bltu x20, x20, crash_forward
	la x30, test_memory-1104
	addi x4, x0, 0
	addi x7, x12, 320
	addi x24, x0, 1906
	ld x15, 2040(x30)
	la x12, test_memory-228
	mulw x22, x18, x18
	addi x9, x0, -324
	sra x13, x26, x26
	bne x28, x4, crash_forward
	addi x14, x0, -1112
	mulh x23, x14, x14
	addi x4, x0, -59
	sraiw x19, x0, 16
	blt x0, x0, crash_backward
	sh x5, -261(x27)
	addi x17, x0, 1251
	addi x3, x0, 237
	addi x2, x0, -1422
	srli x22, x18, 48
	divw x20, x17, x17
	addi x14, x0, -1698
	addi x15, x4, -726
	divu x10, x18, x3
	addi x5, x0, -175
	sll x13, x3, x3
	la x22, test_memory-1886
	bne x24, x24, crash_backward
	addi x17, x0, 917
	sd x11, 756(x12)
	addi x7, x0, 915
	lb x3, 1898(x22)
	addi x8, x0, 706
	mul x16, x24, x2
	addi x23, x14, -857
	addi x31, x0, -939
	div x11, x9, x31
	mulhu x1, x5, x7
	blt x14, x23, crash_backward
	addi x27, x0, 1985
	la x30, test_memory+13
	addi x18, x0, 1145
	addi x13, x0, -1502
	mulhsu x25, x14, x29
	divw x20, x18, x18
	mulh x10, x17, x13
	lh x28, 273(x30)
	remu x29, x8, x27
	la x19, test_memory-968
	lb x26, 1358(x19)
	la x9, test_memory+1349
	addi x16, x0, 1
	lb x2, -371(x9)
	addi x12, x15, 0
	addi x3, x0, -423
	addi x7, x0, 1962
	addi x6, x7, 786
	bge x7, x6, crash_backward
	addi x21, x0, 1
	addi x11, x0, -81
	bltu x1, x1, crash_forward
	la x31, test_memory+376
	addi x29, x0, 1
	addi x14, x12, 0
	la x13, test_memory+838
	sw x26, -350(x13)
	addi x19, x0, 1002
	sllw x26, x3, x19
	sll x16, x16, 63
	la x5, test_memory+2896
	bltu x12, x14, crash_forward
	sll x24, x11, x11
	addi x17, x0, -1
	sll x21, x21, 63
	xor x17, x17, x16
	lb x30, -1990(x5)
	sll x29, x29, 63
	slt x8, x18, x18
	lui x4, 843703
	addi x10, x0, -1
	lb x22, 113(x31)
	addi x12, x0, 519
	mulhsu x3, x25, x10
	and x1, x28, x17
	addi x26, x0, -1723
	or x28, x28, x16
	la x5, test_memory+63
	addi x27, x0, -1
	xor x10, x10, x21
	xor x27, x27, x29
	add x2, x12, x12
	lhu x14, 463(x5)
	bgeu x1, x28, crash_backward
	la x31, test_memory+732
	and x18, x20, x27
	sltu x7, x26, x26
	la x19, test_memory+1309
	addi x4, x0, 1645
	la x8, test_memory-539
	sd x18, 1515(x8)
	or x20, x18, x29
	lbu x11, -1021(x19)
	addi x30, x7, 0
	bgeu x18, x20, crash_forward
	addi x23, x0, 1458
	addi x6, x30, 0
	blt x30, x6, crash_forward
	addi x22, x23, 1028
	sw x23, -44(x31)
	addi x13, x4, 1395
	addi x24, x0, 0
	addi x9, x0, 0
	and x25, x23, x10
	or x15, x9, x21
	beq x25, x15, crash_forward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x1ede11cd05018f55
reg_x1_init:	.dword 0xb96e34a96abed616
reg_x2_init:	.dword 0xffffffff80000005
reg_x3_init:	.dword 0x35fec874a7d0fc4b
reg_x4_init:	.dword 0x0000000000000000
reg_x5_init:	.dword 0x1813053534b78cdf
reg_x6_init:	.dword 0xda7b7f236a8c127c
reg_x7_init:	.dword 0x0800000000000000
reg_x8_init:	.dword 0x5ee2319f1a7f4f87
reg_x9_init:	.dword 0x70efd827be9fc442
reg_x10_init:	.dword 0xffffffffffffffff
reg_x11_init:	.dword 0xffffffffffffff80
reg_x12_init:	.dword 0xffffffffffffff80
reg_x13_init:	.dword 0x0b1aad033f79b5eb
reg_x14_init:	.dword 0xf3bd8bddf6c94794
reg_x15_init:	.dword 0xffffffffffffffff
reg_x16_init:	.dword 0xffffffff80000002
reg_x17_init:	.dword 0x0800000000000004
reg_x18_init:	.dword 0xffffffff80000009
reg_x19_init:	.dword 0x6744095ca3a5e292
reg_x20_init:	.dword 0xbdcf36bccde4968e
reg_x21_init:	.dword 0xffffffffffffffff
reg_x22_init:	.dword 0x50cdcbee42020266
reg_x23_init:	.dword 0xffffffffffffffff
reg_x24_init:	.dword 0x2bba95405ec70d5f
reg_x25_init:	.dword 0x0000000000000000
reg_x26_init:	.dword 0xffffffff80000004
reg_x27_init:	.dword 0x9ac05a37cac56c1b
reg_x28_init:	.dword 0xffffffffffffffff
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0x0800000000000007
reg_x31_init:	.dword 0x573b80fd83a5ed97

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x37af7c307599c32e
reg_x1_output:	.dword 0x1349ee6518da6e07
reg_x2_output:	.dword 0x47bcc4904e4094f4
reg_x3_output:	.dword 0x1acf2700f4a34b6b
reg_x4_output:	.dword 0x640d1c404fe0e999
reg_x5_output:	.dword 0x59a598af98498382
reg_x6_output:	.dword 0x10d72db309fd3016
reg_x7_output:	.dword 0xba772ead9249da73
reg_x8_output:	.dword 0x1a4e4cad5e1ed4eb
reg_x9_output:	.dword 0xe1047d721ede448a
reg_x10_output:	.dword 0xed25912c7c018d2f
reg_x11_output:	.dword 0xfc77b2367e2e7970
reg_x12_output:	.dword 0xb96f3c85e4bfbee8
reg_x13_output:	.dword 0x0c7876b62d1a069c
reg_x14_output:	.dword 0xc82accce15ec9a9c
reg_x15_output:	.dword 0x1ab3cd36bf6c9509
reg_x16_output:	.dword 0xb416627bc73dba27
reg_x17_output:	.dword 0x243728ca6a245629
reg_x18_output:	.dword 0x987e5c4bcd2f58cf
reg_x19_output:	.dword 0x2e2e45d17a7dcc19
reg_x20_output:	.dword 0xff104d66062b7895
reg_x21_output:	.dword 0xac8786c231f76115
reg_x22_output:	.dword 0xfe64b1be176d88cd
reg_x23_output:	.dword 0x5efad92aabb2822d
reg_x24_output:	.dword 0xd84504bce06161f1
reg_x25_output:	.dword 0xc62b66f563bf3139
reg_x26_output:	.dword 0x9eea1e2137d5aab1
reg_x27_output:	.dword 0x7f5c97ebc03a4209
reg_x28_output:	.dword 0x45c8f920db46fa4d
reg_x29_output:	.dword 0x25b7277e15f5b6e1
reg_x30_output:	.dword 0xb34249d3270a4c27
reg_x31_output:	.dword 0xc4a352c241e5f024

// Memory Blocks
	.align 8
test_memory:
	.dword 0x3eeb84d1bb729893, 0xab8962bc3d05a34e
	.dword 0xba6e3d1b3876a6f1, 0x509a16df650dcd27
	.dword 0x0b64fc36a4196cfe, 0x6a54b3d2607e1335
	.dword 0x396af89f61288f66, 0x0698ba760b454871
	.dword 0x07064e5b2909d79d, 0xf66d8b283221093e
	.dword 0xfc6a9deaad89b2ee, 0xb78a7942b8c6a296
	.dword 0xa28c356b1c2a0ed3, 0x2c4e12e83956b886
	.dword 0x59da27f104922687, 0x087ba1010dc05fdb
	.dword 0x2c77f73944b515da, 0x39022381cccf9f1d
	.dword 0x8e35b383d04e4543, 0x97804df08fee8abc
	.dword 0xa70fb5bbfbb0033b, 0x936d4828435f7089
	.dword 0x65ed57db84d1dec8, 0xcb063758f429c667
	.dword 0xb2e84f8dde519757, 0xc19cd3529c5ad041
	.dword 0x10dc8f1547f2b5ce, 0x67e38c02a2d6313e
	.dword 0x5f9ad06c645622e1, 0x3998033bdf01dc33
	.dword 0x29162eaf2d644ea5, 0x82b4deb9e55c1759
	.dword 0x868771ba2d79bd62, 0x6960366317c1873f
	.dword 0xad06f00e940f0dac, 0xa15c22d006147502
	.dword 0x2dc82afc4692cbb4, 0xf613300c2955c3ba
	.dword 0xeb3088fd32bca5db, 0xe9b2b89aaf534937
	.dword 0x53b4d25e7c06d688, 0x8e616cbc9f167dec
	.dword 0x23ff54244b73d73a, 0x0ac089f30179b82b
	.dword 0x6d9acd2e0c93b0e0, 0x40ca86c24cf96692
	.dword 0xf47c89964e1d7d68, 0x260a36b62b39fdc5
	.dword 0xd68a505bb4a6ee95, 0x2251aaa8d1128d5c
	.dword 0x72df0744ec4cee15, 0x5ec85144ca77301f
	.dword 0x655b310017bdaad2, 0x369c1bc5f99dcb70
	.dword 0x443ca98b4145a788, 0xdd19ab03ff6ad208
	.dword 0x634b44d402869e97, 0xf6abc8afa9dafde6
	.dword 0xd8de33a33a984f19, 0x0382b0dce6fa3583
	.dword 0x26d852b5ddc08737, 0x87a7efc217471049
	.dword 0x6af7c82cdef0ffb8, 0x4d4bd7be2465ae46
	.dword 0xa8b79327ef0edcda, 0xaf65d39b1ffbd71c
	.dword 0x51c7f1ae69f0e865, 0xcc9119163dbb943c
	.dword 0x830cc0cfb23ed8fc, 0xd8a37f9f0a40ba53
	.dword 0xb95f3b0e752d3ab5, 0x87147f5bd1b91603
	.dword 0xed42b8f7aab6ccec, 0x05269c7334962fd6
	.dword 0xd59258178fad6954, 0x0125c2881902db6f
	.dword 0x7127ac0e8a09c84e, 0x603154841cc60602
	.dword 0x34d8ddfcb682b67d, 0x1e30f497b7df7805
	.dword 0x482ede266de98f99, 0x3fff4880abc27e27
	.dword 0xee1a8bd11a531284, 0x1ec63e0ca0ddad81
	.dword 0x89f9f77344f0e29a, 0xc93c93dce35e370b
	.dword 0x02ad230d7ef14a4c, 0xec2caa6aac107e50
	.dword 0x978be4d11f0012f0, 0x13a8e14de226e765
	.dword 0x7404d00b4b5c85d1, 0x11d204bc91cb1017
	.dword 0x78c7483f4b25ea8d, 0xa3588f50b0ece863
	.dword 0x3ad9228d11c116a0, 0xbd29c40e2b065e2a
	.dword 0x341a795caa4ee23b, 0x4645e4a374c19024
	.dword 0x83c09636f054965a, 0xdccd07f034dabc15
	.dword 0x827b15f18b34a815, 0xea2454c96f765c3f
	.dword 0x5384ab0fad275535, 0xffeda4f957b72817
	.dword 0xa4132267b947f609, 0xcaa7d488afe6ec3b
	.dword 0xfbb08e04d845187a, 0xe76e4141de406da2
	.dword 0x8441ba4e258eb85d, 0x6cb23e6f7297cc15
	.dword 0x961c516590bf2908, 0xd23180e75b0217dd
	.dword 0xcdd150d4b5b08427, 0x3718c748fa740ebd
	.dword 0x1476b566c279b1d0, 0x6e724289775b3422
	.dword 0x0a85815452ab5dd4, 0x1df382ab18b3b898
	.dword 0x4f0f80a0d3d66e57, 0x0236ebcf4950e480
	.dword 0x6b626fc545eacfa2, 0xc1a8f76bb234f9ff
	.dword 0xe464688dc396a937, 0xcd31c5dfd930c239
	.dword 0x614fb94550bb5025, 0x9727c4274fd239bf
	.dword 0xa9328a0fa88e8a9e, 0xdea069e9f32d1045

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
