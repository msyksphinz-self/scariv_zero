// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x16, x0, 943
	la x3, test_memory+1828
	addi x29, x0, 0
	addi x25, x0, -1100
	addi x8, x0, 1
	la x26, test_memory+1537
	addi x7, x0, 1
	sll x7, x7, 63
	rem x2, x16, x16
	la x1, test_memory-547
	ld x22, -1057(x26)
	addi x21, x0, -1
	addi x18, x0, 615
	sh x0, 1029(x1)
	srl x20, x25, x18
	la x5, test_memory+322
	addi x31, x0, 0
	addi x15, x0, 495
	la x11, test_memory+117
	sb x17, 322(x5)
	mulh x9, x25, x3
	lh x30, -816(x3)
	sll x8, x8, 63
	ld x17, 155(x11)
	addi x13, x0, 777
	addi x14, x0, 30
	addi x4, x14, 23
	sub x27, x15, x13
	addi x6, x0, -1
	addi x13, x0, 1303
	la x5, test_memory+286
	la x18, test_memory+2041
	blt x29, x31, crash_backward
	mulw x3, x11, x11
	sltu x9, x31, x31
	la x23, test_memory-384
	lw x2, -1453(x18)
	addi x25, x0, -692
	bne x18, x18, crash_forward
	la x3, test_memory+1134
	srlw x2, x2, x2
	sb x30, 892(x23)
	la x18, test_memory+2553
	sltu x16, x5, x5
	xor x21, x21, x7
	sh x28, -100(x5)
	and x24, x1, x21
	sh x16, -1008(x3)
	xor x30, x13, x25
	bne x10, x10, crash_forward
	la x26, test_memory-194
	or x12, x23, x7
	lbu x15, 763(x26)
	la x2, test_memory+1405
	srai x31, x8, 40
	addi x3, x0, 1
	la x23, test_memory+127
	lhu x9, -1853(x18)
	addi x11, x0, -1500
	sh x24, -1295(x2)
	sll x3, x3, 63
	addi x5, x0, -292
	la x4, test_memory+1913
	mulhsu x17, x11, x11
	addi x15, x0, 1504
	rem x19, x19, x7
	xor x6, x6, x8
	addiw x29, x16, -901
	subw x26, x5, x15
	addi x25, x0, -1
	and x28, x29, x6
	addi x27, x0, 1843
	xor x25, x25, x3
	addi x20, x0, 90
	and x13, x2, x25
	la x22, test_memory+1418
	sh x14, -1126(x22)
	lhu x14, -1737(x4)
	remu x1, x27, x20
	or x30, x22, x3
	or x10, x13, x8
	lb x16, -74(x23)
	remw x5, x28, x0
	la x30, test_memory-1211
	slli x6, x18, 27
	addi x7, x0, -593
	la x16, test_memory-950
	la x20, test_memory-422
	addi x27, x0, 1
	bltu x0, x0, crash_forward
	addi x14, x0, 994
	addi x19, x0, 924
	la x24, test_memory+1553
	addi x6, x0, -412
	la x11, test_memory-942
	la x26, test_memory+2255
	la x1, test_memory-251
	sraiw x10, x28, 12
	sll x27, x27, 63
	ld x13, 1118(x20)
	sd x31, 859(x1)
	addi x15, x0, -225
	mulh x25, x15, x15
	xor x5, x6, x15
	mul x3, x7, x19
	addi x2, x0, -1
	addi x22, x0, -1098
	ld x4, 1582(x16)
	sb x21, -582(x24)
	addi x28, x0, 0
	mulhsu x23, x22, x22
	xor x2, x2, x27
	sh x27, 1520(x11)
	addi x12, x0, -31
	addi x9, x0, 0
	and x31, x7, x2
	lhu x18, 1787(x30)
	or x21, x2, x27
	blt x28, x9, crash_backward
	addi x7, x27, 0
	addi x22, x7, 0
	sh x13, -1513(x26)
	la x25, test_memory+296
	mulh x29, x14, x12
	xori x23, x15, -1808
	addi x8, x0, -389
	la x5, test_memory-426
	la x11, test_memory-808
	sw x28, 1140(x11)
	sh x22, 1058(x5)
	addi x10, x0, -1739
	remuw x14, x21, x24
	la x18, test_memory-1167
	la x26, test_memory-1220
	bge x21, x31, crash_forward
	sraiw x16, x18, 1
	lwu x4, 1535(x18)
	la x5, test_memory-1455
	la x11, test_memory+303
	la x23, test_memory-826
	remu x13, x10, x10
	la x24, test_memory+2
	sh x3, 1526(x23)
	addi x21, x0, 0
	lw x29, 1720(x26)
	addi x15, x0, -1037
	addi x2, x0, 0
	addi x30, x0, 1
	addi x13, x0, 225
	la x18, test_memory-524
	la x4, test_memory+242
	sll x30, x30, 63
	addi x9, x0, -1
	lw x1, -72(x25)
	addw x16, x19, x29
	mul x29, x13, x13
	ld x12, 1927(x5)
	lhu x31, 1372(x18)
	xor x9, x9, x30
	addi x19, x0, 969
	lwu x14, 518(x4)
	mul x3, x15, x19
	addi x17, x8, -409
	remuw x10, x10, x20
	divw x27, x25, x0
	sb x13, 173(x11)
	sll x16, x2, x3
	la x15, test_memory-1190
	addi x23, x0, -453
	addi x10, x0, -1912
	and x6, x25, x9
	lh x29, 1314(x15)
	div x25, x27, x5
	addi x25, x0, -124
	sraw x14, x23, x23
	srli x3, x9, 52
	la x22, test_memory-947
	srai x4, x20, 10
	blt x21, x2, crash_forward
	lwu x27, 1151(x22)
	la x1, test_memory+2402
	addi x18, x10, -1857
	srai x16, x17, 3
	lwu x28, 990(x24)
	or x20, x6, x30
	bge x20, x6, crash_forward
	addi x3, x0, -1289
	la x19, test_memory-801
	addi x27, x0, 471
	subw x21, x12, x12
	lh x5, -1772(x1)
	slt x28, x17, x17
	addiw x12, x19, 1455
	la x21, test_memory+43
	addi x31, x0, 839
	addi x28, x0, 523
	addi x14, x0, 1790
	addi x23, x3, -110
	divw x20, x27, x27
	remuw x13, x31, x31
	addi x9, x0, 0
	remuw x1, x28, x28
	la x26, test_memory-804
	remu x15, x25, x25
	lwu x8, 1393(x19)
	sh x29, 1398(x26)
	la x2, test_memory+298
	la x12, test_memory+627
	la x13, test_memory+1284
	sh x25, 651(x21)
	addi x22, x0, -1317
	addi x27, x0, -43
	add x20, x26, x28
	sh x30, 58(x2)
	la x31, test_memory+1980
	lb x25, -1203(x31)
	sw x7, -928(x13)
	addi x24, x0, 0
	sraw x26, x27, x27
	addi x6, x22, -351
	addi x19, x0, 1143
	lhu x5, -435(x12)
	bge x23, x3, crash_backward
	or x8, x19, x19
	divu x29, x14, x14
	addi x30, x0, 504
	remu x28, x6, x0
	addi x16, x0, -1787
	addi x19, x0, 1823
	addi x31, x0, 2008
	sraiw x26, x15, 6
	la x1, test_memory+2314
	addi x20, x0, -2029
	sll x4, x30, x16
	la x10, test_memory+1567
	sd x0, -951(x10)
	addi x6, x0, -884
	addi x25, x0, 0
	addi x22, x0, -1047
	mul x29, x19, x19
	sd x6, -1730(x1)
	addi x26, x0, 1938
	la x10, test_memory+1669
	la x27, test_memory+139
	addi x15, x26, 1742
	lwu x5, 681(x27)
	addi x30, x2, -591
	blt x0, x0, crash_forward
	addi x17, x0, 214
	la x2, test_memory+919
	sllw x3, x12, x5
	bne x9, x24, crash_backward
	mulw x23, x31, x31
	addi x21, x20, -1121
	la x13, test_memory+1718
	divuw x14, x6, x22
	la x27, test_memory-805
	lh x29, 1669(x27)
	addi x12, x0, 0
	addi x18, x23, 0
	addi x30, x0, -437
	sd x22, -1421(x10)
	lwu x28, -1214(x13)
	addi x7, x0, 1259
	sd x5, 81(x2)
	mulw x11, x17, x7
	addi x5, x30, -253
	bgeu x21, x20, crash_backward
	addi x8, x18, 0
	addi x19, x0, 1009
	addi x4, x0, -348
	addi x1, x19, 1368
	addi x23, x23, 0
	addi x6, x0, -41
	rem x16, x4, x4
	or x27, x30, x9
	addi x30, x0, -340
	remuw x28, x27, x2
	addi x21, x0, 1924
	la x7, test_memory+2455
	addi x10, x21, 212
	beq x21, x10, crash_forward
	addi x21, x0, 1493
	mulh x20, x30, x30
	addi x5, x0, 293
	mulhsu x13, x2, x30
	subw x2, x6, x5
	andi x19, x16, -1744
	addi x31, x0, 1049
	sra x1, x17, x17
	addi x27, x0, -786
	sll x28, x19, x19
	la x25, test_memory-1003
	la x4, test_memory-1452
	addi x12, x23, 0
	la x17, test_memory+1290
	sltu x22, x31, x31
	mul x16, x21, x27
	addi x19, x0, 1
	sll x19, x19, 63
	la x10, test_memory-1822
	lbu x15, 1154(x25)
	ld x24, -1018(x17)
	sw x16, -1503(x7)
	slliw x14, x28, 24
	addi x27, x0, -1994
	lwu x30, 2004(x4)
	addw x21, x27, x27
	addi x22, x0, 0
	addi x31, x0, 0
	addi x6, x0, 1
	sll x6, x6, 63
	addi x5, x0, -1
	remuw x3, x16, x27
	addi x9, x0, 1
	xor x5, x5, x19
	addi x28, x0, -1
	sd x5, 1894(x10)
	xor x28, x28, x6
	and x20, x26, x5
	and x1, x17, x28
	or x2, x1, x6
	sll x9, x9, 63
	addi x25, x0, -1581
	addi x8, x25, -1465
	addi x12, x0, 1
	addi x31, x0, 1
	addi x7, x0, -910
	la x18, test_memory+430
	bge x2, x1, crash_forward
	ld x23, 82(x18)
	la x24, test_memory+804
	addi x4, x0, -2035
	sll x31, x31, 63
	addi x17, x0, -1
	xor x17, x17, x31
	and x30, x26, x17
	sll x12, x12, 63
	or x15, x20, x31
	and x2, x24, x24
	addi x29, x0, -1
	la x28, test_memory-605
	addi x16, x0, -1
	xor x16, x16, x12
	mulhsu x21, x30, x30
	addi x10, x0, 1317
	mul x14, x10, x10
	sw x12, -380(x24)
	la x8, test_memory+1201
	lw x18, -1173(x8)
	mulhsu x22, x7, x4
	or x13, x26, x19
	addi x1, x0, -300
	addi x23, x0, 488
	xor x29, x29, x9
	and x27, x20, x16
	remuw x6, x7, x7
	slt x25, x1, x23
	addi x8, x28, 0
	and x11, x20, x29
	or x3, x27, x12
	sh x5, 1487(x28)
	slliw x18, x1, 27
	la x15, test_memory-589
	sll x19, x12, x12
	divuw x20, x12, x12
	addi x4, x0, 1789
	addi x6, x0, -1827
	la x18, test_memory+1851
	la x25, test_memory+1194
	lw x31, 601(x15)
	remuw x21, x4, x4
	or x26, x11, x9
	bgeu x27, x3, crash_backward
	sh x12, -598(x25)
	la x15, test_memory+903
	addi x23, x0, 936
	add x22, x26, x31
	sllw x1, x6, x23
	addi x14, x0, 1
	sll x14, x14, 63
	lbu x19, -1256(x18)
	addi x20, x0, -1787
	lb x21, -286(x15)
	addi x12, x0, -1145
	addi x24, x0, -1
	slt x28, x20, x20
	addi x4, x0, 1675
	or x16, x26, x5
	la x13, test_memory+1807
	xor x24, x24, x14
	and x7, x29, x24
	or x30, x7, x14
	mulhu x3, x12, x12
	addi x2, x0, 1320
	mul x27, x4, x4
	addi x26, x0, -1098
	addi x22, x0, 1
	la x16, test_memory+378
	sb x11, -1720(x13)
	sll x22, x22, 63
	la x23, test_memory-981
	ld x18, 1645(x23)
	lhu x28, 164(x16)
	addi x14, x26, -1420
	addi x1, x0, 543
	addi x4, x0, -1
	addi x20, x0, 253
	la x29, test_memory+102
	srlw x10, x2, x2
	beq x26, x14, crash_backward
	divu x19, x1, x20
	xor x4, x4, x22
	addi x5, x8, 0
	and x9, x28, x4
	or x24, x9, x22
	la x17, test_memory+1921
	blt x8, x5, crash_forward
	sh x6, -1791(x17)
	sh x4, 764(x29)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x24, 192(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x8e68879f149bd2e5
reg_x1_init:	.dword 0xffffffffffffffff
reg_x2_init:	.dword 0xffffffffffffffff
reg_x3_init:	.dword 0xffffffffffffffff
reg_x4_init:	.dword 0xffffffffffffff84
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0xffffffffffffff85
reg_x7_init:	.dword 0x0000000000000000
reg_x8_init:	.dword 0xffffffffffffffff
reg_x9_init:	.dword 0xffffffffffffff88
reg_x10_init:	.dword 0xffffffffffffffff
reg_x11_init:	.dword 0x8eca7c2d9d3650fc
reg_x12_init:	.dword 0xffffffffffff8007
reg_x13_init:	.dword 0x077b39c6bf699d5e
reg_x14_init:	.dword 0x720b4ca92457acfb
reg_x15_init:	.dword 0xffffffffffff8003
reg_x16_init:	.dword 0xffffffffffffffff
reg_x17_init:	.dword 0xffffffffffffffff
reg_x18_init:	.dword 0xffffffffffffffff
reg_x19_init:	.dword 0x0000000000000002
reg_x20_init:	.dword 0xfc704178a7fbd47f
reg_x21_init:	.dword 0xffffffffffffff88
reg_x22_init:	.dword 0x9f8a35923830e1d6
reg_x23_init:	.dword 0x3dc75fc6f31893d0
reg_x24_init:	.dword 0xffffffffffffffff
reg_x25_init:	.dword 0xffffffffffffff86
reg_x26_init:	.dword 0x99d57050741a88c4
reg_x27_init:	.dword 0x0000000000000005
reg_x28_init:	.dword 0xffffffffffffff88
reg_x29_init:	.dword 0xe9241becf912cb4e
reg_x30_init:	.dword 0x89148983fe1a0041
reg_x31_init:	.dword 0x0800000000000006

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x718269efcac71bf7
reg_x1_output:	.dword 0xee2f6f4a0e2096ad
reg_x2_output:	.dword 0x43f178bbd43f0e2e
reg_x3_output:	.dword 0x2f7f7c6f5025bb59
reg_x4_output:	.dword 0x3aa0ecfc602bd99d
reg_x5_output:	.dword 0xb9ae4653a50ad8cc
reg_x6_output:	.dword 0x43e7a6843d8ef720
reg_x7_output:	.dword 0x356d6316b8d6aafe
reg_x8_output:	.dword 0x22e6dfe4c822a33e
reg_x9_output:	.dword 0xdd90fa8c1eb4b5ff
reg_x10_output:	.dword 0xadf6b5ee64002955
reg_x11_output:	.dword 0xf85e83614a9a264d
reg_x12_output:	.dword 0xe0d5237482832e17
reg_x13_output:	.dword 0x5c27ae81eee7e265
reg_x14_output:	.dword 0xe2e2755705f2ad34
reg_x15_output:	.dword 0xac1e24be2a23a19c
reg_x16_output:	.dword 0xace27abbdccf9e58
reg_x17_output:	.dword 0xc9f2faa9b82b1c2e
reg_x18_output:	.dword 0xa369f59f47347558
reg_x19_output:	.dword 0x749efec4c4e1a897
reg_x20_output:	.dword 0x27940f8d17aff1a7
reg_x21_output:	.dword 0x52df45dc6d89da21
reg_x22_output:	.dword 0xb713d6abc8b8f10e
reg_x23_output:	.dword 0x7ac399afa701f4be
reg_x24_output:	.dword 0xe37206fdc780399c
reg_x25_output:	.dword 0x8d62add56b334a17
reg_x26_output:	.dword 0xde87a3e767c06eda
reg_x27_output:	.dword 0x80a23edc5c71d3e4
reg_x28_output:	.dword 0x0c4a25eb917ba643
reg_x29_output:	.dword 0x5f3f7fb3ab8a9f7d
reg_x30_output:	.dword 0x700640bd14994ef2
reg_x31_output:	.dword 0x7326794d0214deb1

// Memory Blocks
	.align 8
test_memory:
	.dword 0xa17285754e4e609d, 0x2ded407c9782b1d6
	.dword 0x7cd3651f4c6505c1, 0x91322626d9abff21
	.dword 0xfcfe577b2a18351e, 0x12ea4599325eeb37
	.dword 0xa6a22a02048aee66, 0xe2a015364826c703
	.dword 0xee16bb27912a0e30, 0xd277dd538a3386ca
	.dword 0xdc56a5e041c2ed32, 0xe3ca39672359167c
	.dword 0x80e9a16498083eaf, 0xe183075e67bf1f4b
	.dword 0x0dae993627e1e22e, 0x7c75694d194f1281
	.dword 0xaae0c161147b9c6c, 0xddbbbd4b31778d8e
	.dword 0x85a32b040ad1eb93, 0x9344af9d48b96b60
	.dword 0x76129d0fccbb6aab, 0x791ccb12d6e416f7
	.dword 0x0395b54fec60784f, 0xd1162bb1d72bf338
	.dword 0xf31f95a8f8fa14a4, 0x00663792629eec00
	.dword 0xdb99a1a2ddcc2a87, 0x71eb82096f28847b
	.dword 0x2ced1026d2deb805, 0x524c3d088297f6b7
	.dword 0x5e6d5589ef3c8a0f, 0x533fdcc615303873
	.dword 0x95f0a9ca15b57f6e, 0x535cd19aef72f93d
	.dword 0x89f42f15b28d86f4, 0xc9ed7c2db054edbb
	.dword 0xeafd7c932160ccf3, 0xa8ddbfd11d1afc48
	.dword 0x8b43915cda18cbf3, 0x2c04d72af8051ec2
	.dword 0x53c573cae955349e, 0xcb254f1707e50da1
	.dword 0xeb9500f62766e0ff, 0x65374bcb360c084c
	.dword 0x9d80b07bf82a46eb, 0x4e2f7c3d42dc4ea7
	.dword 0x59af5080b0f21dbf, 0x5eb75fc171001ff0
	.dword 0xc86cfdf5978a2b4b, 0x9571c1f5a51152cb
	.dword 0xe198dd1c81656c0d, 0x7db090e32099da9a
	.dword 0xc517564b9b8a0aa1, 0x062f715c1506ce12
	.dword 0x0ca4daefb600da78, 0xfdb8b5a982acc30b
	.dword 0x2aa176d467b549c8, 0x31d09a69fa959396
	.dword 0xd42db1a28d0dfec3, 0x76dcedb504bce054
	.dword 0xe37584aa8355940a, 0x5ffd8480d0e1e405
	.dword 0x898e68e3488e2864, 0x712c2245fb6a6c5f
	.dword 0x4a19c12f79c1b5aa, 0x5680b6e42b3c0c20
	.dword 0xd62d24e1648c6306, 0x81e116c30e2dda66
	.dword 0xf4164e82d2bd465c, 0x3b31913b4106533e
	.dword 0xbea8b2d363bd4907, 0x108e0936531e2d7a
	.dword 0x751f040da63323c8, 0xf2697413bdfa39c6
	.dword 0x247b25716056a5fa, 0x8cebe2ce13bb9efd
	.dword 0xb8f352fbadd4bc0a, 0x6ac5795d256707b8
	.dword 0x99a38178a248e927, 0x902ef85b98f89528
	.dword 0x2ea63abbbe682835, 0xdd36bceb9043ab25
	.dword 0x7a287a2ab7446806, 0x1f035ad729fae986
	.dword 0xe4404d8041cf16cb, 0x26a334f6ef2de6b3
	.dword 0x27863dccec3470c8, 0x0392b7d79e4f7f77
	.dword 0xddedc4bfa2108646, 0x06991a9c42b0d01a
	.dword 0xf2595227931a2cce, 0x0135ca1e818a2aae
	.dword 0x682aa5b694ef4f93, 0x3cd6e25a6d6c9ea9
	.dword 0xb6d881093371532f, 0x75b35a0bcb8be5b4
	.dword 0xe09ef5e3ded78092, 0x35a9c4965cf9c9c1
	.dword 0x70efd4c09e88ab37, 0xd62ece259de95863
	.dword 0x759cff8b732c8697, 0x3364d61847a17759
	.dword 0x150ea4a5e4785ee2, 0x58284b984c2bae6b
	.dword 0xa873a631cf4228ec, 0xa972b08aa6453a79
	.dword 0xcafab19051a01d65, 0x013066af31e5bdd0
	.dword 0xf306cb240c8a534d, 0xcbc3ab00631021bf
	.dword 0x403a525befd70da6, 0x4a31635d7ed77d69
	.dword 0xcd5fc1f16dc1b06a, 0x2b9aa26b6ecb15dd
	.dword 0x27e7b06c81b790bf, 0x7d7005b92e99cb63
	.dword 0x7427d4ec1a251468, 0x98fa52248fee8818
	.dword 0x25ff142591b0d47f, 0xf8a5f27cd68c83bd
	.dword 0x3d3ed9ac50f9b761, 0x66353c67c7cb70cb
	.dword 0x547a4170f9c835e8, 0x86d79f86d200e6ca
	.dword 0xfbdfd58a9ef23fdf, 0x996222d71b659de2
	.dword 0x48cae43b3c3473b2, 0x17c7d45799da4fb2

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
