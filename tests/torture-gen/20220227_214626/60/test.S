// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x2, x0, 1
	addi x23, x0, -1858
	la x25, test_memory-1181
	addi x26, x0, -1736
	la x27, test_memory+2432
	la x1, test_memory-502
	addi x21, x0, 331
	addi x18, x0, 1
	addi x30, x26, -451
	sll x18, x18, 63
	div x28, x18, x18
	srl x11, x0, x12
	sll x2, x2, 63
	srl x12, x23, x21
	addi x4, x0, -1
	bltu x12, x12, crash_forward
	addi x31, x0, 1
	la x21, test_memory+2449
	sll x31, x31, 63
	addi x10, x0, 124
	lh x7, 1231(x25)
	sll x30, x21, x1
	la x28, test_memory+1527
	ld x6, -1928(x27)
	addi x17, x0, -1
	addi x24, x0, -1420
	xor x4, x4, x18
	sw x4, 1010(x1)
	la x20, test_memory-701
	sd x5, 1565(x20)
	addi x13, x0, -1
	or x3, x10, x24
	sh x30, -711(x28)
	addi x12, x0, -729
	xor x13, x13, x2
	and x14, x5, x13
	and x22, x19, x4
	or x9, x22, x18
	la x20, test_memory+83
	addi x16, x0, -200
	bltu x9, x22, crash_backward
	la x7, test_memory-842
	lw x26, 1614(x7)
	andi x24, x12, -1911
	la x25, test_memory-200
	lwu x6, 660(x25)
	addi x27, x0, 1
	addi x19, x0, -1781
	lwu x11, -1633(x21)
	addi x28, x0, -1589
	addi x22, x0, -942
	addi x23, x12, -1295
	sll x27, x27, 63
	la x4, test_memory+2409
	la x25, test_memory-298
	addi x11, x0, 1909
	remu x7, x28, x22
	xor x17, x17, x31
	slt x21, x23, x9
	ld x6, 1122(x25)
	addi x28, x0, 2046
	and x5, x9, x17
	slliw x6, x20, 4
	lbu x30, 674(x20)
	sltiu x25, x23, -1431
	sra x26, x11, x11
	and x29, x16, x19
	mulhu x21, x31, x25
	la x18, test_memory+1237
	bne x7, x7, crash_forward
	addi x20, x0, -562
	sb x26, -2042(x4)
	la x24, test_memory+733
	addi x7, x0, 1916
	or x8, x5, x31
	la x19, test_memory-1184
	ld x9, -549(x18)
	sh x0, -45(x24)
	rem x22, x28, x7
	addi x25, x0, -479
	addi x26, x0, 1695
	addi x3, x0, -1
	mulhsu x30, x25, x26
	or x15, x14, x2
	lhu x6, 1926(x19)
	addi x21, x20, -1977
	bge x21, x20, crash_backward
	addi x11, x0, -906
	la x12, test_memory+1821
	xor x16, x17, x17
	mulh x23, x11, x11
	xor x3, x3, x27
	and x10, x23, x3
	or x1, x29, x27
	blt x10, x1, crash_forward
	sd x8, -1101(x12)
	bge x15, x14, crash_backward
	addi x15, x0, -1705
	addi x9, x0, 1417
	lui x3, 717319
	la x13, test_memory+1796
	addi x28, x0, 1510
	bltu x0, x0, crash_backward
	addi x27, x0, -395
	div x16, x9, x9
	addi x20, x15, -1738
	addi x24, x0, 188
	remw x17, x28, x27
	srli x3, x24, 11
	addi x16, x0, 1
	addi x29, x0, 1802
	sraiw x28, x1, 1
	addi x7, x0, 1840
	sraw x6, x30, x30
	sllw x21, x24, x24
	la x12, test_memory-1164
	lh x19, -1536(x13)
	la x22, test_memory-775
	lw x25, 847(x22)
	la x4, test_memory+1482
	la x8, test_memory+1269
	lwu x18, -610(x4)
	sll x16, x16, 63
	addi x3, x0, -1
	divuw x10, x7, x7
	la x14, test_memory+245
	slt x9, x21, x25
	lwu x30, 127(x14)
	slti x30, x9, 841
	la x6, test_memory+1172
	sh x23, 1420(x12)
	sraw x23, x25, x25
	addi x1, x29, 1304
	la x20, test_memory+271
	mulw x13, x0, x0
	addi x31, x0, -660
	divuw x2, x31, x31
	sll x19, x22, x22
	la x10, test_memory+932
	addi x11, x0, -10
	lw x24, -264(x6)
	lh x15, -796(x10)
	sllw x26, x8, x8
	addi x21, x0, 632
	addi x23, x0, 138
	sw x23, -397(x8)
	addi x14, x0, 667
	la x2, test_memory+609
	addi x7, x0, -681
	remw x25, x21, x14
	divuw x12, x24, x9
	lhu x9, 549(x20)
	la x13, test_memory+1648
	addi x28, x0, 897
	mulhu x29, x12, x12
	remu x22, x7, x28
	mul x5, x11, x11
	xor x3, x3, x16
	sb x15, -762(x13)
	and x27, x14, x3
	or x17, x12, x16
	sub x30, x23, x23
	lw x1, 271(x2)
	addi x27, x0, 1440
	addi x28, x0, -151
	addi x24, x11, 0
	sllw x31, x30, x30
	addi x10, x0, 1332
	addi x13, x0, -1678
	addi x11, x0, 706
	addi x21, x0, 1
	addi x12, x0, -411
	mulw x8, x28, x10
	addi x15, x0, 424
	remuw x4, x20, x20
	or x3, x13, x12
	rem x26, x12, x15
	addi x20, x0, -327
	addi x9, x24, 0
	add x22, x11, x15
	sll x21, x21, 63
	addi x13, x0, 271
	slt x26, x26, x26
	addi x7, x0, -1987
	rem x3, x19, x19
	addi x23, x0, -1
	addi x18, x22, 0
	subw x2, x27, x27
	la x4, test_memory+1118
	addi x28, x7, -637
	xor x23, x23, x21
	addi x16, x18, 0
	addi x22, x0, -1595
	srli x3, x23, 11
	sw x15, -338(x4)
	or x30, x20, x20
	addi x15, x27, 0
	la x10, test_memory-822
	la x12, test_memory-1276
	and x6, x27, x23
	addi x25, x0, -915
	or x29, x26, x21
	lhu x11, 1748(x12)
	lw x31, 1254(x10)
	remu x19, x13, x22
	addi x8, x15, 0
	la x2, test_memory-1879
	addi x26, x0, 1546
	bltu x0, x0, crash_forward
	addi x5, x0, 0
	slti x12, x24, 1883
	blt x24, x9, crash_forward
	la x6, test_memory-558
	addi x1, x0, 0
	la x7, test_memory-742
	addi x14, x0, -1890
	la x31, test_memory+629
	addi x11, x0, 1
	la x3, test_memory+2071
	sw x30, -1111(x3)
	sll x11, x11, 63
	mulw x17, x25, x14
	la x18, test_memory-308
	addi x20, x0, -1
	blt x15, x8, crash_forward
	la x9, test_memory+1183
	lhu x19, -83(x31)
	la x30, test_memory+1367
	la x4, test_memory+431
	div x16, x26, x26
	sw x1, 846(x7)
	lhu x23, 223(x4)
	ori x4, x19, 806
	addi x24, x0, -1797
	addi x14, x0, -1798
	xor x20, x20, x11
	sd x5, 2015(x2)
	and x21, x1, x20
	or x10, x21, x11
	srl x15, x11, x11
	sub x25, x24, x24
	lhu x12, -735(x9)
	lbu x3, -365(x30)
	addi x13, x0, 1
	addi x8, x14, -722
	sb x20, 857(x18)
	la x17, test_memory-412
	addi x12, x0, -280
	bgeu x21, x10, crash_backward
	la x3, test_memory-1424
	lhu x30, 1854(x3)
	la x4, test_memory+922
	addi x7, x0, -1735
	sll x13, x13, 63
	bne x0, x0, crash_backward
	sll x23, x7, x7
	la x9, test_memory-860
	lw x27, 714(x6)
	addi x24, x0, -1602
	mulh x19, x15, x21
	addi x26, x0, -1452
	la x30, test_memory-635
	la x27, test_memory-1542
	mul x16, x26, x26
	addi x10, x0, 1669
	addi x22, x0, -1
	sll x31, x12, x24
	lwu x21, 1135(x30)
	la x25, test_memory+815
	la x31, test_memory-517
	sb x13, -314(x25)
	addi x7, x0, 1
	la x2, test_memory+315
	add x11, x1, x20
	addi x23, x10, 543
	xor x22, x22, x13
	sraiw x20, x19, 9
	la x21, test_memory+1564
	ld x14, 1982(x27)
	addi x11, x0, -1043
	sw x12, 917(x31)
	addi x26, x0, -1917
	la x1, test_memory+842
	lwu x24, -826(x1)
	la x25, test_memory+1267
	addi x12, x0, 1903
	lb x18, -480(x4)
	remw x19, x12, x12
	and x29, x20, x22
	sh x16, 129(x2)
	bltu x23, x10, crash_forward
	sb x11, -1368(x21)
	sltu x30, x26, x26
	lbu x15, 1065(x9)
	sh x24, -309(x25)
	sll x7, x7, 63
	or x28, x15, x13
	addi x5, x11, -1438
	sb x5, 602(x17)
	addi x16, x26, -1471
	blt x11, x5, crash_forward
	addi x6, x0, -1
	sllw x23, x18, x18
	la x27, test_memory+2396
	bgeu x16, x26, crash_forward
	slli x31, x9, 21
	addi x5, x0, -1799
	slti x4, x7, 553
	add x19, x15, x15
	remw x9, x24, x24
	srli x24, x30, 33
	la x25, test_memory-1481
	sh x23, 1937(x25)
	sd x16, -1668(x27)
	la x1, test_memory+1245
	la x22, test_memory+1506
	sllw x21, x10, x10
	addi x30, x0, 1
	addi x10, x5, -1087
	la x2, test_memory-1130
	sll x30, x30, 63
	ld x17, 1834(x2)
	sllw x18, x2, x6
	mul x24, x23, x28
	addi x29, x0, 1
	div x9, x14, x14
	sll x29, x29, 63
	addi x31, x0, -1
	addi x12, x0, -1
	xor x12, x12, x30
	la x27, test_memory+2025
	lb x28, -641(x22)
	la x25, test_memory-1068
	lhu x26, -1221(x1)
	la x4, test_memory+1419
	addi x1, x0, -1252
	la x18, test_memory+1901
	addi x26, x0, -2042
	and x14, x28, x12
	addi x28, x26, -380
	xor x6, x6, x7
	lbu x21, -724(x4)
	sw x10, 1932(x25)
	addi x10, x1, -390
	or x20, x31, x30
	beq x14, x20, crash_backward
	addi x15, x0, 529
	xor x31, x31, x29
	or x22, x7, x23
	mulw x13, x2, x2
	div x11, x15, x15
	la x9, test_memory+1601
	addi x1, x0, 1
	slt x10, x18, x18
	and x3, x5, x6
	sb x14, -1377(x9)
	or x8, x24, x7
	lh x19, -1257(x27)
	bgeu x28, x26, crash_backward
	addi x14, x0, 1
	sll x14, x14, 63
	sll x1, x1, 63
	addi x20, x0, -1
	and x16, x7, x31
	addi x2, x0, -236
	addi x21, x0, -1
	la x22, test_memory+2539
	la x27, test_memory+1345
	xor x11, x11, x11
	xor x20, x20, x14
	lhu x17, -1677(x18)
	addi x19, x0, -894
	sub x30, x11, x18
	mulw x25, x2, x2
	remw x28, x10, x7
	and x13, x11, x20
	rem x10, x19, x19
	xor x21, x21, x1
	xori x15, x2, 699
	lwu x5, -1863(x22)
	ld x26, -649(x27)
	and x4, x20, x21
	or x12, x5, x14
	or x23, x6, x29
	or x24, x25, x1
	la x18, test_memory+717
	sll x5, x29, x4
	la x26, test_memory+607
	bltu x12, x13, crash_backward
	la x9, test_memory-1671
	mulw x8, x11, x17
	la x31, test_memory+1861
	addi x13, x0, -322
	lwu x22, -1349(x31)
	addi x3, x0, -1599
	addi x28, x0, 1108
	lhu x30, -687(x18)
	add x5, x13, x13
	ld x25, -223(x26)
	addi x19, x0, -1587
	la x12, test_memory-711
	la x6, test_memory-727
	la x29, test_memory+597
	rem x4, x16, x6
	addi x2, x0, 1
	sll x2, x2, 63
	ld x14, 1807(x9)
	la x20, test_memory-1056
	sraw x13, x14, x14
	lwu x1, 1160(x20)
	addi x18, x0, 1731
	addi x27, x28, 1808
	addi x22, x0, -959
	addi x4, x0, -1782
	beq x28, x27, crash_forward
	addi x8, x22, -1452
	addi x16, x0, -1
	addi x10, x0, -1277
	addi x21, x0, -370
	sllw x24, x18, x21
	sh x1, 1671(x6)
	la x26, test_memory-982
	ld x30, 1606(x26)
	sd x2, 1703(x12)
	bge x8, x22, crash_backward
	la x25, test_memory+947
	lh x5, -507(x25)
	sraw x17, x19, x10
	srl x15, x3, x3
	lh x11, 423(x29)
	srl x31, x4, x4
	xor x16, x16, x2
	and x7, x2, x16
	or x23, x5, x2
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x25717031f7361165
reg_x1_init:	.dword 0x8ac83411ec832f9d
reg_x2_init:	.dword 0xffffffff80000006
reg_x3_init:	.dword 0x0000000000000000
reg_x4_init:	.dword 0xffffffffffff8006
reg_x5_init:	.dword 0xffffffffffffffff
reg_x6_init:	.dword 0xffffffff80000001
reg_x7_init:	.dword 0x6b1d508238d53de2
reg_x8_init:	.dword 0xc75364583f0a17e3
reg_x9_init:	.dword 0x393fb7380b6c3fda
reg_x10_init:	.dword 0xcd454f8469152c4f
reg_x11_init:	.dword 0xca9db510201b4b8d
reg_x12_init:	.dword 0x1beb0818e0ce353d
reg_x13_init:	.dword 0x682119d973c040dd
reg_x14_init:	.dword 0xe200421be87d36eb
reg_x15_init:	.dword 0x9bf573f6879cc6ba
reg_x16_init:	.dword 0x13936aec5a759567
reg_x17_init:	.dword 0x87741357b7a041ce
reg_x18_init:	.dword 0xffffffffffffff80
reg_x19_init:	.dword 0xc22d9cd72b7ff3a1
reg_x20_init:	.dword 0xffffffffffffff81
reg_x21_init:	.dword 0xb28ed750cde114d2
reg_x22_init:	.dword 0x0000000000000002
reg_x23_init:	.dword 0x0800000000000002
reg_x24_init:	.dword 0xacfd75a7338d5764
reg_x25_init:	.dword 0x467a2ef098b7d201
reg_x26_init:	.dword 0x0000000000000000
reg_x27_init:	.dword 0x32bf1919bd939c10
reg_x28_init:	.dword 0x0000000000000000
reg_x29_init:	.dword 0xc8c7823f265befae
reg_x30_init:	.dword 0xffffffffffffff84
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x1f5899fbf3f49c43
reg_x1_output:	.dword 0x8fd7811fb7a5a0c5
reg_x2_output:	.dword 0x61049629c58b349e
reg_x3_output:	.dword 0x7211cf70ed08fb54
reg_x4_output:	.dword 0x408ed9ad501eb7ae
reg_x5_output:	.dword 0xbbde66a911cb0995
reg_x6_output:	.dword 0x73d288d073f2009f
reg_x7_output:	.dword 0x44ada4120f04d53a
reg_x8_output:	.dword 0xc61a43f032c47097
reg_x9_output:	.dword 0x483a5fb76b764bbb
reg_x10_output:	.dword 0xf780912af4c6a862
reg_x11_output:	.dword 0xfcb64f3710a6ca9e
reg_x12_output:	.dword 0x3080ad5711eeb851
reg_x13_output:	.dword 0x8cd941dc2dcbabf8
reg_x14_output:	.dword 0xc20ef8366584ea5e
reg_x15_output:	.dword 0xf99f89eb59ec9733
reg_x16_output:	.dword 0xbc4f6fe6d3b08a94
reg_x17_output:	.dword 0xe775273d4ff59a10
reg_x18_output:	.dword 0xcc73ef9e535e51ad
reg_x19_output:	.dword 0x6050870e4be34def
reg_x20_output:	.dword 0xe4b32596a85055fc
reg_x21_output:	.dword 0x2918ed13a0358d4e
reg_x22_output:	.dword 0xbae474470bc1a68d
reg_x23_output:	.dword 0xc9e1d9d2c2997d8f
reg_x24_output:	.dword 0xea5c32d57c05f48a
reg_x25_output:	.dword 0xc746022f0683f0fd
reg_x26_output:	.dword 0xef6700c7df2feee0
reg_x27_output:	.dword 0x8cc1ac4200816510
reg_x28_output:	.dword 0xad7a2100084f3421
reg_x29_output:	.dword 0x0595856f1d9120f0
reg_x30_output:	.dword 0x581a0fe99c80feab
reg_x31_output:	.dword 0x08b845b71b353837

// Memory Blocks
	.align 8
test_memory:
	.dword 0x78d7c8edcb1cef0a, 0x4deeb449873975fb
	.dword 0x2dd86f2c6cf9989a, 0x3386e1614dcf740a
	.dword 0x53624d67f05ab471, 0xd6aca94a31be6277
	.dword 0x0325614223d51e7b, 0xe11ad4c429494355
	.dword 0x0ca4e5a9889300e5, 0x874d6a8c5b569ec2
	.dword 0xd68a90920624d1bf, 0xe78f06377790f327
	.dword 0x800377e43db206dc, 0xc584484181e765bd
	.dword 0x56d1d1b50a26a3fc, 0x4c75b366ca4a7752
	.dword 0x79be03bb1529072c, 0x75c98b3094f8c14c
	.dword 0x2ac4b5fb8f75976d, 0x1e2487d21a6bfeee
	.dword 0x4006dcc7b4f43994, 0x03c17333b036e6d9
	.dword 0xd95bede89bb5af70, 0x78fd034c922898d6
	.dword 0x01b5b5180f454531, 0xb81485b75d12a3d2
	.dword 0xe2887bb0b99d7107, 0x7deb307e96dae829
	.dword 0x536177aa4ed44909, 0xfa932c3bda52da27
	.dword 0xb400b5c0b27ef358, 0xac94ab636ce1e8ca
	.dword 0x72eaf2f45c197484, 0x60bea2da30a90ccd
	.dword 0x68bb19367cb2802d, 0x28f1f7ca5ba1c3e1
	.dword 0x40c2535f59f12fed, 0x921136b8eb9afc3d
	.dword 0xad00ec62e384c475, 0xf14c27d70c1ab459
	.dword 0xbd716dc6066cd4f5, 0x1c9fd497265352f5
	.dword 0xb442b14e9f8a90c1, 0xeed8d280f8c7fb5f
	.dword 0x6134d9fb02d1f731, 0x4deee7463c2b61f6
	.dword 0xe9186833d07c29c8, 0x186e5a1429b8e4e9
	.dword 0xd2addd41a40a3c97, 0x0514862ad4ffed44
	.dword 0xe317a2020bfa28e3, 0x940a82b02415dc2d
	.dword 0x58f724d41305c605, 0x3c81f3c135a3086a
	.dword 0x396962d97eddec91, 0xe12558c8e8839025
	.dword 0xe4a6505e32d227ba, 0xbb0e6c13b4fd02f3
	.dword 0xfc49d491f0f798f5, 0x9b0a67a518162812
	.dword 0xb2844c7ef867f1db, 0xf51d4346f6ae64f2
	.dword 0xfadbc936d55ba853, 0x4fb23fe0dbc687f6
	.dword 0x5a067d4c9e70c8ef, 0xa7f9540e1444fb7b
	.dword 0x7dfa0d86f3a20b96, 0x3cd64decf69ba518
	.dword 0x90d2b8d165880e64, 0x22bfbe342e55f527
	.dword 0xcbf08b72a0b8dacd, 0x8239008b7ef9ea84
	.dword 0x0bd811865fb81908, 0x8173f516f70f0e94
	.dword 0x9c473ca3f02c95aa, 0x7d5c3f5417caad89
	.dword 0xadc670de1c35fd90, 0x58171e26a810cee3
	.dword 0x9e08ecf1c107f402, 0x90203133266db239
	.dword 0xa1ef01bce69de714, 0x6cdcbf6b7da3d438
	.dword 0x562fccee0bad464f, 0x890452e76ea6bfec
	.dword 0x19d76afbb331ff91, 0x29d6bdfb419b303e
	.dword 0xe721d459604b6631, 0x4104dd85b1f945bd
	.dword 0x2309d9e6bfdde866, 0x5fb2ac86a875d4a0
	.dword 0xc566f4ab17d036e8, 0xc84e7cf56c240f0b
	.dword 0x71ebdcc06800c2d7, 0xcc6269ce43910f91
	.dword 0xf9031b8d537ab5dc, 0xa842566f8aaf07fa
	.dword 0x0da60d39a73fc88e, 0x99ca0f27937e1845
	.dword 0x4e1e055e896e9b16, 0x56845f0809bd11f0
	.dword 0x80668afe4de37414, 0xb1cd2efd55ccab76
	.dword 0xc2e2dfb306eb89c4, 0xf20e021fb493e818
	.dword 0x8e884628f781395c, 0x5655634b81dcb7e0
	.dword 0x93c1bbcf8309d0b9, 0xc87f17efe48c13e2
	.dword 0x7e6919cc6af3ce39, 0xe52c2c2488891ac4
	.dword 0x827cd12f971ebaea, 0xef272c01fd5af181
	.dword 0xa9f8b66b28e402e3, 0x10c21e2f52bd6c69
	.dword 0x57ab9001b42a6ff2, 0x708113b791e8c46b
	.dword 0x6a4a5c7e94642a77, 0x203d61232b48dc96
	.dword 0x299d83a7f6f1648f, 0x2c1ad4c39124dbdd
	.dword 0x6cb366f44f601374, 0xfa697e4e38801f1a
	.dword 0xa6c7053a0ea35b22, 0x8c23dbac9689c755
	.dword 0x2840a5ab1ae3903e, 0xd8627f136a806845
	.dword 0x7d21be024431f433, 0xa11b82517e439b16

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
