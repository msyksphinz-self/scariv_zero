// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	blt x21, x21, crash_backward
	la x25, test_memory+1241
	la x10, test_memory-458
	addi x22, x0, -602
	la x11, test_memory+971
	srai x20, x21, 0
	bltu x0, x0, crash_forward
	mulhu x12, x6, x12
	la x4, test_memory+2952
	sb x23, -351(x25)
	addi x29, x7, 0
	addi x2, x0, 1035
	addi x27, x0, -314
	addi x3, x0, 1813
	addi x26, x0, -1238
	lw x1, -2044(x4)
	la x7, test_memory+1800
	addi x31, x29, 0
	addi x21, x0, 239
	addi x16, x0, 1855
	la x20, test_memory+1350
	lw x8, -438(x20)
	addi x6, x0, -673
	sb x5, -1684(x7)
	subw x13, x26, x26
	srl x24, x2, x2
	addi x17, x21, 1810
	sllw x15, x27, x27
	srlw x25, x23, x26
	la x28, test_memory+1719
	beq x21, x17, crash_backward
	addi x8, x0, 185
	sraiw x25, x31, 9
	lbu x9, -963(x11)
	addi x14, x0, 575
	srai x2, x28, 6
	addi x1, x0, 1219
	mulhsu x5, x3, x14
	ori x7, x19, -2042
	lbu x30, -1718(x28)
	addi x23, x0, -2044
	sllw x21, x13, x27
	mulw x4, x1, x1
	addi x20, x0, 1
	add x25, x14, x17
	divu x18, x22, x22
	addi x2, x0, 526
	mulhu x30, x19, x19
	srl x13, x8, x8
	la x15, test_memory+2325
	bltu x0, x0, crash_backward
	sw x2, 826(x10)
	addi x11, x0, -1149
	addi x21, x0, -204
	div x12, x6, x6
	and x19, x16, x23
	addi x1, x0, -1560
	addi x14, x0, 1
	sllw x5, x11, x1
	lbu x24, -1990(x15)
	sra x26, x23, x23
	mulh x4, x21, x21
	sll x20, x20, 63
	la x23, test_memory-838
	blt x25, x25, crash_forward
	la x27, test_memory+365
	addi x25, x0, -1014
	la x26, test_memory+710
	addi x9, x0, -1
	addi x6, x0, 1610
	addi x15, x0, -985
	la x22, test_memory+1379
	lh x4, -481(x22)
	sub x24, x19, x20
	srl x19, x14, x14
	sll x14, x14, 63
	lhu x30, -306(x26)
	slt x8, x6, x6
	sh x25, 29(x27)
	addi x13, x0, -1773
	la x12, test_memory-926
	addi x28, x2, 1690
	sub x30, x31, x14
	addi x7, x0, -1
	addi x21, x0, 1514
	addi x19, x0, 1
	beq x2, x28, crash_forward
	addi x1, x15, -1773
	la x16, test_memory-666
	addw x5, x25, x21
	xor x9, x9, x20
	la x24, test_memory-148
	srl x18, x13, x13
	addi x25, x0, -1685
	remu x30, x8, x8
	xor x7, x7, x14
	la x21, test_memory-1014
	lbu x10, 1629(x23)
	and x29, x10, x9
	addi x6, x0, 1953
	lhu x22, 946(x24)
	addi x2, x0, 1286
	addi x13, x0, -1748
	or x31, x29, x20
	sb x29, 1474(x16)
	and x3, x11, x7
	addi x27, x6, 889
	addi x16, x0, 1435
	or x17, x3, x14
	mul x22, x2, x29
	blt x29, x31, crash_forward
	sra x24, x16, x16
	la x27, test_memory+2258
	sh x17, 1724(x12)
	addi x23, x19, 0
	addi x18, x23, 0
	sb x18, -1318(x27)
	bltu x15, x1, crash_forward
	addi x28, x0, -1545
	sraw x30, x2, x13
	divw x8, x25, x28
	sll x19, x19, 63
	addi x4, x0, -1
	xor x4, x4, x19
	divu x10, x20, x20
	lhu x5, 1630(x21)
	bne x23, x18, crash_forward
	and x11, x14, x4
	or x26, x8, x19
	beq x11, x26, crash_backward
	la x25, test_memory+432
	la x27, test_memory-1479
	addi x9, x0, 1
	addi x6, x0, -558
	addi x24, x0, -909
	addi x4, x0, -1845
	addi x15, x0, 1550
	addi x11, x0, 196
	la x23, test_memory-61
	addi x7, x0, 1
	divu x20, x6, x11
	lh x12, -32(x25)
	addi x31, x24, -1894
	addi x1, x0, -1006
	sll x7, x7, 63
	addi x26, x0, 595
	addi x30, x0, -19
	divw x22, x26, x30
	beq x24, x31, crash_forward
	sll x9, x9, 63
	sh x1, 1937(x27)
	srlw x17, x15, x15
	addi x18, x0, -1698
	addi x2, x1, -774
	addi x8, x0, -1
	addi x21, x0, -674
	divw x28, x4, x18
	addi x24, x0, -242
	addi x6, x24, -1958
	addi x22, x0, 1
	addi x4, x0, 1
	sll x22, x22, 63
	addi x3, x0, -1
	sll x4, x4, 63
	la x26, test_memory+297
	addi x1, x0, -1
	la x27, test_memory+1679
	lbu x30, -1190(x27)
	srliw x2, x21, 9
	sw x3, -249(x26)
	la x11, test_memory-1789
	xor x1, x1, x22
	xor x3, x3, x7
	and x15, x15, x1
	la x25, test_memory-607
	la x13, test_memory+193
	and x10, x21, x3
	or x29, x6, x7
	lb x18, 1843(x11)
	addi x16, x21, -40
	bge x16, x21, crash_backward
	xor x8, x8, x9
	sb x7, 808(x25)
	addi x17, x0, -1
	sw x5, 803(x13)
	bltu x29, x10, crash_forward
	xor x17, x17, x4
	and x19, x6, x8
	and x12, x27, x17
	or x20, x15, x4
	or x28, x15, x22
	or x5, x7, x9
	bgeu x15, x28, crash_forward
	bge x20, x12, crash_backward
	lwu x14, 1053(x23)
	la x27, test_memory-1169
	sra x12, x17, x17
	addi x25, x0, -292
	lwu x1, 1237(x27)
	addi x29, x0, -902
	addi x4, x0, 1
	addi x28, x29, -298
	addi x18, x0, 956
	addi x7, x0, 1
	mulhu x1, x27, x27
	la x31, test_memory+1589
	sll x7, x7, 63
	sll x4, x4, 63
	sh x29, -981(x31)
	addi x10, x0, -1
	xor x10, x10, x4
	srlw x14, x21, x28
	and x30, x10, x10
	addi x2, x0, -921
	addi x11, x0, 1
	or x20, x8, x4
	addi x13, x0, 1135
	sll x11, x11, 63
	addi x15, x0, -1
	divu x22, x2, x13
	addw x12, x22, x22
	la x20, test_memory+728
	xor x15, x15, x11
	la x10, test_memory+2153
	addi x16, x0, 9
	addi x19, x0, -1
	lhu x14, -444(x20)
	la x24, test_memory-1223
	blt x29, x28, crash_forward
	la x8, test_memory-1779
	lb x17, 1227(x24)
	xor x19, x19, x7
	lhu x4, -1985(x10)
	addi x29, x0, 1
	and x23, x25, x19
	la x31, test_memory+110
	lh x1, 766(x31)
	sh x19, 1781(x8)
	la x2, test_memory-1465
	or x6, x18, x7
	addi x17, x0, 1718
	mul x10, x26, x26
	slti x21, x0, -1584
	sll x29, x29, 63
	and x27, x11, x15
	addi x26, x0, 969
	bge x6, x23, crash_forward
	lb x30, 2009(x2)
	mulhu x9, x25, x16
	remw x4, x4, x4
	addi x14, x0, -1
	addi x31, x0, 946
	addi x22, x0, -1546
	addi x8, x17, 1068
	remu x25, x1, x24
	or x5, x12, x11
	srl x10, x26, x26
	xor x30, x1, x27
	divw x7, x10, x20
	remuw x3, x18, x26
	xor x14, x14, x29
	addi x6, x0, 1282
	la x21, test_memory+118
	and x12, x4, x14
	addi x19, x0, 1926
	addi x24, x31, 1742
	sll x1, x25, x25
	sw x16, 222(x21)
	addi x9, x0, -499
	and x16, x19, x9
	addi x23, x0, 572
	or x28, x19, x29
	divuw x2, x6, x23
	addi x13, x0, -1596
	mulhu x20, x22, x13
	beq x12, x28, crash_forward
	la x27, test_memory-1030
	xor x17, x13, x4
	la x22, test_memory+1247
	mul x31, x23, x4
	sll x21, x14, x14
	la x10, test_memory+1270
	addi x7, x0, 1655
	mulh x9, x22, x22
	lw x25, -859(x22)
	addi x1, x0, 1737
	remw x28, x3, x3
	or x11, x11, x25
	lhu x15, 1546(x27)
	div x26, x9, x23
	la x19, test_memory+1458
	addi x4, x0, -686
	sw x8, -702(x10)
	addi x8, x0, 961
	remu x10, x30, x18
	divuw x23, x8, x8
	addi x17, x0, 800
	slti x8, x28, 623
	lh x18, -974(x19)
	addi x28, x0, 1190
	addi x8, x0, -1969
	addi x29, x0, -1898
	addi x26, x0, -1319
	la x21, test_memory+713
	remu x25, x5, x5
	addi x13, x0, 73
	sltu x30, x7, x7
	addi x16, x0, -158
	sb x26, -138(x21)
	addw x3, x1, x4
	la x22, test_memory-141
	lb x15, 441(x22)
	or x2, x17, x3
	addi x24, x0, 1887
	mul x11, x26, x26
	addi x10, x0, -1252
	mulw x9, x28, x28
	la x12, test_memory+2787
	addi x20, x0, 1811
	subw x14, x24, x20
	remuw x23, x8, x10
	srai x27, x28, 35
	sub x6, x13, x13
	srl x31, x17, x17
	mulhu x5, x29, x16
	sd x29, -1899(x12)
	la x7, test_memory+2698
	addi x27, x0, -1269
	addi x15, x0, 1242
	xor x4, x15, x15
	remw x31, x5, x5
	xor x25, x6, x26
	addi x26, x0, 0
	divuw x5, x27, x15
	mul x1, x1, x1
	la x9, test_memory-805
	la x18, test_memory-1598
	mulh x29, x22, x22
	la x22, test_memory-7
	sllw x6, x16, x29
	la x14, test_memory-1082
	la x5, test_memory+793
	sb x28, 1669(x18)
	srli x27, x24, 26
	addi x2, x0, 1
	lb x12, -1951(x7)
	sb x13, 694(x22)
	sh x29, -123(x5)
	mulh x29, x4, x6
	div x6, x10, x2
	addi x15, x0, -858
	sh x28, 1500(x14)
	la x8, test_memory-103
	addi x17, x0, -1049
	xori x10, x1, 536
	sll x2, x2, 63
	addi x20, x0, 1905
	addi x23, x0, 1317
	addi x14, x0, 1663
	addi x6, x0, 1481
	addi x21, x20, 539
	remuw x29, x14, x14
	addi x28, x0, 910
	addw x4, x15, x15
	addi x12, x0, -377
	subw x11, x17, x23
	la x19, test_memory-138
	lhu x30, 1479(x9)
	divw x5, x6, x12
	addi x22, x0, 803
	srl x7, x22, x22
	addi x3, x0, 1523
	divu x27, x11, x11
	addi x12, x0, 1641
	addi x9, x0, -283
	addi x21, x0, -1320
	la x5, test_memory+1776
	addi x7, x0, -79
	remuw x24, x28, x3
	sraw x10, x12, x12
	or x18, x11, x11
	addi x20, x0, 1
	addi x25, x0, -1
	sll x20, x20, 63
	sraw x28, x19, x19
	lbu x16, 501(x19)
	la x14, test_memory-1899
	addi x13, x0, 0
	sra x12, x2, x2
	addi x29, x9, -1150
	xor x25, x25, x2
	la x18, test_memory-219
	sb x28, 722(x8)
	and x31, x28, x25
	addi x28, x0, -799
	lb x3, 979(x18)
	lw x30, -916(x5)
	addi x4, x0, -1
	addi x23, x21, -1743
	xor x4, x4, x20
	la x19, test_memory-1553
	la x6, test_memory+1901
	la x27, test_memory+1560
	sllw x15, x7, x7
	sh x24, 1919(x14)
	addi x15, x0, 123
	addi x30, x0, -1505
	addi x3, x0, -715
	or x1, x10, x2
	and x17, x31, x4
	or x11, x0, x20
	la x5, test_memory+2224
	la x18, test_memory-645
	lhu x13, 1661(x18)
	mulhu x12, x30, x30
	bgeu x23, x21, crash_backward
	sd x23, -704(x27)
	addi x8, x0, 1203
	srlw x7, x3, x8
	addi x24, x28, -1529
	mulhsu x26, x15, x30
	lhu x10, -1602(x5)
	lbu x16, 1752(x19)
	lw x22, -1045(x6)
	blt x17, x11, crash_backward
	addi x21, x0, -1319
	la x10, test_memory+1562
	divu x12, x21, x21
	sb x23, -1378(x10)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffffffffff89
reg_x1_init:	.dword 0xffffffffffffffff
reg_x2_init:	.dword 0xffffffff80000006
reg_x3_init:	.dword 0x90cb43771f6c7414
reg_x4_init:	.dword 0xffffffffffffffff
reg_x5_init:	.dword 0xffffffff80000009
reg_x6_init:	.dword 0xef310d3b707f2464
reg_x7_init:	.dword 0x0800000000000002
reg_x8_init:	.dword 0xdf432cae1177377f
reg_x9_init:	.dword 0x421840592acd89ef
reg_x10_init:	.dword 0x0000000000000000
reg_x11_init:	.dword 0x593db4cae472725a
reg_x12_init:	.dword 0xffffffffffff8003
reg_x13_init:	.dword 0x0000000000000000
reg_x14_init:	.dword 0x0000000000000000
reg_x15_init:	.dword 0x9e26dc7ca1ad7eee
reg_x16_init:	.dword 0x7e02e7a13c1fac71
reg_x17_init:	.dword 0xffffffff80000002
reg_x18_init:	.dword 0x6f2be81af0d2096e
reg_x19_init:	.dword 0xffffffffffffffff
reg_x20_init:	.dword 0x0000000000000000
reg_x21_init:	.dword 0xffffffffffffffff
reg_x22_init:	.dword 0x0000000000000007
reg_x23_init:	.dword 0x4ea3fe5cc905540b
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0x7b795be905134edc
reg_x26_init:	.dword 0x0000000000000000
reg_x27_init:	.dword 0xffffffff80000005
reg_x28_init:	.dword 0x0758b65f9bdbed53
reg_x29_init:	.dword 0x79d7596d8edbc3cf
reg_x30_init:	.dword 0xffffffffffff8006
reg_x31_init:	.dword 0x0000000000000000

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xe3b43f365c1cc6fb
reg_x1_output:	.dword 0x8f81bba05011e016
reg_x2_output:	.dword 0x0e714716b318ef35
reg_x3_output:	.dword 0x07564e8364f3c396
reg_x4_output:	.dword 0x76f94122b7c6b77a
reg_x5_output:	.dword 0xe6f75dafae98ca21
reg_x6_output:	.dword 0x6a5d54454bbe1c3e
reg_x7_output:	.dword 0xab128bc08f9d8a0d
reg_x8_output:	.dword 0xd91aaac0ac5db674
reg_x9_output:	.dword 0x123c5768ae49ccce
reg_x10_output:	.dword 0x732fc68927131b56
reg_x11_output:	.dword 0x267af9ec737d7e53
reg_x12_output:	.dword 0xfa4246cf7f62f466
reg_x13_output:	.dword 0x8ffc38d00672aeb0
reg_x14_output:	.dword 0x7be2f2dab30c13af
reg_x15_output:	.dword 0x42ea1ed3876b89fc
reg_x16_output:	.dword 0xd8871e1d1c910850
reg_x17_output:	.dword 0x311dd0211b6d6a7c
reg_x18_output:	.dword 0xc5abb984af27f73a
reg_x19_output:	.dword 0x18aeedbef9986900
reg_x20_output:	.dword 0xfc07a61250c8bc38
reg_x21_output:	.dword 0x75513c4a19bd0f8d
reg_x22_output:	.dword 0xf2f81ca89c0d972f
reg_x23_output:	.dword 0x9b5981e449c8123b
reg_x24_output:	.dword 0xf1ab3f26841ae9a7
reg_x25_output:	.dword 0xe35dcf6d56b63260
reg_x26_output:	.dword 0x3a3a26b92506c889
reg_x27_output:	.dword 0xcbf4a8f10c40afee
reg_x28_output:	.dword 0x1425036a3381662a
reg_x29_output:	.dword 0x0759c1622694ed19
reg_x30_output:	.dword 0xc7b920fcfb0b9887
reg_x31_output:	.dword 0x73f63d85e170283c

// Memory Blocks
	.align 8
test_memory:
	.dword 0x8c11e4fc2b18ffd2, 0x1c35b231b2226ffd
	.dword 0xaae31a101d4f912d, 0x1af051b86c8a35ae
	.dword 0xf14c1c9309ee89b4, 0xe945fc9cb84c21f6
	.dword 0x00d8bc6357830dc1, 0x604d298f59a10fb0
	.dword 0x60cde7f8e8b0f86a, 0x07b3d894924e5112
	.dword 0xcb2d74b8d23a9f4e, 0x01a0058851faa312
	.dword 0x2bbd988b14da8e91, 0x97004dc143547304
	.dword 0x0715e8a8ee2e8124, 0x9d54bd1313a45a87
	.dword 0x7d7cf1b9b2231949, 0x6302f5fad6b0f5a2
	.dword 0x267ebd2047441d56, 0xb0c82915bf877729
	.dword 0x77d5d78cbc4d3cb8, 0xa10e8fd1d20e9f65
	.dword 0x01c5acdba893a13a, 0x68135e67d77ff8f3
	.dword 0x4d9e4d1e53a0d087, 0xb52561090b3d7fec
	.dword 0xb60eeef1eedba1ed, 0x9513b85754381746
	.dword 0xd56dc31976a44c63, 0xe3676915c37d7079
	.dword 0xa970ed485314d0cd, 0x8a79b322b0ca4965
	.dword 0xe73db6404be7447d, 0x6d2463a384682472
	.dword 0x1b704b1c5b17bffd, 0xa6e8967fc86bdef8
	.dword 0x990f9de8e6eff60b, 0x5c3b9b10dcdcc9e1
	.dword 0x3d863b7aba86b6e4, 0x1370f017e8a2288d
	.dword 0x17f22a7e039de3c5, 0x2ab38af0c68f39f5
	.dword 0xccab27cac26d96ae, 0x97efde0688c43012
	.dword 0x6bffd3fb8b938268, 0x87b352892f1cb97f
	.dword 0x8a1fa6409a49cec9, 0x6f1d295cadcb015d
	.dword 0xef30b874d978f537, 0xb647f753d9c84976
	.dword 0xbeedc06c616c616a, 0xb35230a01fb282a4
	.dword 0xa019ca8d9629da75, 0x659f778191408773
	.dword 0x2adc89a783e7f806, 0x5453a2473becdd05
	.dword 0xc2f35000bc2027ec, 0x6da3ac746b111e36
	.dword 0x5cd005ac027d07d9, 0x85a807405eaa74ff
	.dword 0x7480b01bc5ae1769, 0x8e1efd41b0a1c61f
	.dword 0x77cf5efd29360662, 0x3c451d6992f872f7
	.dword 0xebb392414ad9233d, 0x29d4e134dbe4d5b5
	.dword 0xd52b6d7834a5ade5, 0xa19e021c77f7dbb5
	.dword 0x28244c645be812be, 0xfa38324cf8176223
	.dword 0xc97f8ccbb1f951e8, 0x595c2c9c0faf38e4
	.dword 0xb4b9a18fb5f616c4, 0xe3a94fbba134efb6
	.dword 0x0f86c2fcfa5143b6, 0x164d38a97a38d195
	.dword 0xf719d061871cf62c, 0x65661067cf00b260
	.dword 0x00ff36e3061146df, 0x424f80f2764f72bc
	.dword 0x3dbef18bd8084a58, 0x9b95856c92c65e38
	.dword 0xd315f6a8f91b15b6, 0x6c47899cde7bc7b2
	.dword 0x5fc8a653d903cbad, 0x6d198c98f13487f8
	.dword 0x81150e4e3524f5d2, 0xc6683ac1406442b1
	.dword 0x4ae5171240d6ae15, 0x4a1032ef0bf2957e
	.dword 0xed4dee27739e5c8d, 0x3e57eaec1a01955b
	.dword 0x4ceb41b4a3fe0d7b, 0xd32ee723e0d43e4b
	.dword 0x057a215b64d4a388, 0x9ffc399d3eb9b934
	.dword 0x4000983f2b186a51, 0xdd617c24fecc9c07
	.dword 0x650c54659649cd25, 0xc2f6b9cb64a38823
	.dword 0x0163ef445794360c, 0x8856fb8eb302cafb
	.dword 0x052bab95ee6f590b, 0xfa1c6c5be074e4f5
	.dword 0xc437bc6f95f36fa7, 0x89e648365aaa1a95
	.dword 0x07536990e03728a6, 0xdb720aaf24dd73da
	.dword 0xe2e5a4fe3536501c, 0x6374909eb87fcde8
	.dword 0x8cd0e5cc952c73a5, 0xfe772112b04fe2e6
	.dword 0xcaf55c40fb3f06ee, 0xf1c7918567106c29
	.dword 0xda99d316b106cc7a, 0x7dc9f94cb27bc291
	.dword 0x8070d21ef64086a3, 0xaaeda856c326a133
	.dword 0xbe34d60cfde934dd, 0xe06e5515d8f9ee38
	.dword 0xff2fb1905b8a6142, 0xe925b5b7f405ae04
	.dword 0x45ae6ba444bf424a, 0x8e40f89b60ed849a
	.dword 0x71a42f243c43b4d9, 0xd4f0cfff0951693e
	.dword 0x61d41fa1d16a527e, 0x1a6204fac19b705b

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
