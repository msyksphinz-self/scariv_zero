// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x22, x0, 1393
	la x11, test_memory+2169
	addi x31, x0, 1316
	addi x5, x0, 871
	addi x6, x0, 1
	sub x29, x25, x15
	la x26, test_memory-250
	addi x15, x0, 1877
	blt x7, x7, crash_forward
	and x30, x5, x5
	remuw x20, x22, x15
	addi x13, x0, 316
	lw x10, -1281(x11)
	addw x14, x1, x1
	addi x24, x0, 116
	srlw x20, x10, x10
	addi x7, x24, 1924
	addi x25, x0, 0
	slliw x18, x22, 17
	addi x23, x0, 1527
	addi x28, x0, 1825
	mulhsu x16, x28, x28
	rem x8, x31, x31
	addi x14, x0, -409
	la x7, test_memory+1311
	srlw x17, x13, x13
	addi x18, x0, 209
	la x28, test_memory+1328
	addi x24, x0, 1396
	addi x27, x23, 289
	la x20, test_memory+94
	addi x30, x0, 112
	addi x12, x0, 377
	divuw x22, x18, x24
	sll x6, x6, 63
	la x11, test_memory+193
	addi x4, x0, 0
	lbu x31, -1035(x7)
	or x21, x12, x12
	addi x9, x0, -1
	sh x15, -17(x11)
	la x2, test_memory+1898
	addi x3, x0, 1364
	xor x9, x9, x6
	lb x16, -600(x28)
	remw x5, x14, x3
	sw x17, 402(x20)
	sw x30, 1238(x26)
	sb x18, -882(x2)
	and x1, x30, x9
	addi x29, x0, 167
	or x10, x30, x29
	la x8, test_memory+1354
	sw x1, -582(x8)
	or x19, x1, x6
	bge x19, x1, crash_forward
	addi x25, x0, 1997
	addi x18, x0, -1073
	xor x21, x18, x18
	bltu x21, x21, crash_forward
	xori x29, x17, 285
	addi x27, x0, 1649
	addi x7, x0, -396
	mulh x16, x5, x7
	la x20, test_memory+416
	addi x23, x0, 1271
	addi x3, x0, -931
	divuw x24, x7, x3
	ld x10, 584(x20)
	remw x4, x23, x23
	and x28, x27, x27
	la x18, test_memory+2412
	slli x9, x1, 10
	addi x30, x0, -224
	addi x8, x30, -1892
	sh x16, -1798(x18)
	la x22, test_memory-555
	addi x2, x0, 1283
	add x12, x17, x17
	addi x14, x2, 330
	divuw x19, x19, x19
	addi x6, x0, -270
	la x26, test_memory-1738
	lh x5, 1105(x22)
	la x15, test_memory+816
	addi x11, x25, 1833
	beq x25, x11, crash_backward
	addi x13, x0, -1757
	sw x24, -424(x15)
	srl x17, x26, x6
	beq x30, x8, crash_backward
	bne x0, x0, crash_forward
	addi x1, x0, 353
	sd x24, 1946(x26)
	mul x21, x1, x1
	or x31, x6, x13
	bltu x14, x2, crash_forward
	addi x19, x0, 1
	addi x12, x0, 770
	sraw x2, x24, x11
	div x9, x31, x11
	remw x21, x12, x12
	mulhu x30, x4, x13
	la x1, test_memory+154
	sll x19, x19, 63
	addi x20, x0, -795
	la x25, test_memory+2024
	addi x2, x0, 1487
	addi x26, x0, 415
	sraw x27, x10, x10
	addi x30, x0, 0
	addi x8, x20, -1396
	la x22, test_memory+332
	remu x23, x15, x24
	addi x17, x0, 1
	addi x16, x0, 1237
	mulhsu x13, x26, x16
	addi x15, x0, -1
	lh x10, 764(x1)
	xor x15, x15, x19
	addi x21, x2, 672
	addw x16, x30, x30
	sb x19, -104(x22)
	blt x21, x2, crash_forward
	addi x12, x0, 0
	la x10, test_memory+1126
	addi x22, x0, -952
	and x7, x8, x15
	addi x21, x0, -246
	sh x8, -664(x10)
	la x14, test_memory+130
	la x29, test_memory-758
	addi x3, x0, 838
	addi x24, x0, 168
	sltiu x18, x13, 827
	sb x31, -1981(x25)
	sll x17, x17, 63
	addiw x9, x11, 710
	addi x27, x0, 1
	addi x11, x0, -1
	lw x31, -34(x14)
	divu x4, x3, x24
	addi x1, x0, 658
	sh x30, 856(x29)
	sll x27, x27, 63
	xor x11, x11, x17
	divu x16, x22, x21
	mulw x8, x1, x1
	la x30, test_memory+579
	la x12, test_memory+649
	la x10, test_memory-254
	addi x13, x0, -1
	lbu x18, 500(x10)
	addi x3, x0, 1
	addi x18, x14, 0
	sll x3, x3, 63
	lwu x24, 201(x30)
	xor x13, x13, x27
	addw x25, x14, x14
	lwu x9, 3(x12)
	or x5, x15, x19
	la x16, test_memory-87
	addi x10, x18, 0
	and x6, x1, x11
	or x28, x15, x17
	la x25, test_memory+235
	la x22, test_memory-97
	mulw x2, x3, x11
	sd x24, 521(x22)
	and x23, x9, x13
	sub x20, x9, x9
	addi x4, x0, -1
	xor x4, x4, x3
	lbu x1, 511(x16)
	addi x12, x0, 307
	or x26, x21, x27
	la x22, test_memory-334
	la x29, test_memory+601
	addi x30, x0, 393
	la x18, test_memory-399
	sraw x5, x17, x17
	la x14, test_memory+1559
	la x2, test_memory+1525
	and x31, x22, x4
	addi x10, x0, -616
	addw x24, x30, x30
	lh x16, 501(x18)
	addi x30, x0, -1209
	sllw x9, x12, x10
	or x21, x31, x3
	la x11, test_memory+1124
	lbu x1, -959(x2)
	sw x1, 269(x25)
	sra x5, x30, x30
	sd x10, 558(x22)
	la x19, test_memory+2311
	lbu x20, -1403(x19)
	addi x24, x6, 0
	la x12, test_memory-1226
	sw x16, -1004(x11)
	sh x13, -981(x14)
	la x7, test_memory-288
	lb x10, 1382(x12)
	addi x18, x24, 0
	lh x8, -21(x29)
	blt x24, x18, crash_backward
	addi x17, x0, 1
	sll x17, x17, 63
	lbu x15, 785(x7)
	addi x28, x0, -1
	la x11, test_memory+1910
	la x30, test_memory+1706
	la x22, test_memory+773
	la x1, test_memory+475
	lbu x13, -204(x1)
	sra x18, x17, x17
	la x29, test_memory+1729
	la x21, test_memory+774
	xor x28, x28, x17
	la x7, test_memory+237
	addi x19, x0, 609
	la x24, test_memory-275
	lh x10, -248(x21)
	srlw x4, x8, x8
	sb x15, -1287(x30)
	addi x18, x0, 136
	and x16, x3, x28
	or x6, x29, x17
	sh x5, 229(x22)
	addi x14, x0, 1242
	addi x23, x19, 1225
	blt x23, x19, crash_backward
	la x21, test_memory+2439
	addi x9, x0, 686
	addi x4, x0, 162
	lhu x12, -1548(x11)
	la x20, test_memory-42
	addi x1, x0, 1
	la x31, test_memory-1115
	sll x3, x9, x9
	la x11, test_memory+1543
	lwu x6, -1055(x11)
	sd x5, 1259(x31)
	la x22, test_memory+1843
	lw x27, 1059(x24)
	sll x1, x1, 63
	lw x12, -995(x22)
	lh x10, -1933(x21)
	addi x17, x0, 1345
	remw x30, x18, x4
	addi x26, x0, 1839
	lhu x15, -1485(x29)
	srai x18, x28, 61
	sw x16, -169(x7)
	la x3, test_memory-894
	sltiu x6, x15, 1551
	rem x23, x7, x7
	rem x19, x17, x17
	srlw x22, x5, x5
	divuw x2, x14, x26
	addi x24, x0, 1102
	la x27, test_memory+180
	xori x29, x8, -996
	lh x30, 1490(x3)
	xor x17, x20, x13
	bltu x3, x3, crash_forward
	mulw x21, x0, x0
	addi x22, x0, 1961
	xor x15, x16, x24
	sltiu x7, x8, 706
	la x11, test_memory+620
	addi x23, x0, 1271
	la x10, test_memory+28
	la x26, test_memory+426
	lh x6, -218(x11)
	la x9, test_memory-1030
	addi x25, x0, -1
	la x28, test_memory-315
	sh x17, 376(x10)
	addi x14, x0, 913
	ld x2, -298(x26)
	xor x25, x25, x1
	addi x16, x24, 1445
	addi x26, x0, -698
	slt x3, x26, x31
	la x21, test_memory-578
	addi x18, x23, 1944
	addi x15, x0, -1629
	sw x6, 1046(x21)
	lb x5, 875(x20)
	srlw x11, x15, x15
	addi x6, x0, -1619
	sh x0, 869(x28)
	lbu x12, 319(x27)
	beq x24, x16, crash_forward
	sra x7, x26, x26
	addw x19, x22, x14
	blt x18, x23, crash_forward
	la x31, test_memory+1111
	ld x4, 1126(x9)
	addi x29, x0, -54
	la x10, test_memory+1607
	la x30, test_memory+318
	lh x2, -607(x10)
	and x13, x23, x25
	or x17, x6, x29
	or x8, x13, x1
	sh x18, -1013(x31)
	sw x5, 686(x30)
	bgeu x13, x8, crash_backward
	blt x30, x30, crash_forward
	rem x2, x15, x15
	la x11, test_memory+1808
	la x5, test_memory-754
	addi x1, x0, 1568
	addi x26, x0, 1414
	divu x25, x18, x14
	srai x17, x29, 3
	la x27, test_memory+1956
	addi x24, x0, -320
	srli x14, x22, 41
	la x20, test_memory+2105
	divu x29, x29, x29
	addi x4, x0, -1067
	addi x28, x0, 1
	slliw x18, x8, 15
	xori x17, x7, 929
	lb x12, -1041(x11)
	divuw x19, x22, x22
	remuw x16, x14, x14
	sh x25, -1930(x27)
	la x2, test_memory+888
	mulh x23, x24, x24
	mulh x6, x1, x4
	mulh x8, x26, x26
	ori x31, x1, 587
	lbu x25, -466(x2)
	andi x9, x7, 2043
	sd x1, -1457(x20)
	la x3, test_memory-519
	la x21, test_memory+82
	lbu x7, 1462(x5)
	sll x28, x28, 63
	addi x13, x0, -1
	xor x13, x13, x28
	and x30, x26, x13
	or x10, x30, x28
	sltu x17, x0, x0
	addi x20, x0, 882
	ld x22, 382(x21)
	la x18, test_memory-591
	la x24, test_memory+795
	addi x31, x0, 1852
	la x19, test_memory+2561
	sll x12, x10, x8
	addi x13, x25, 0
	addi x23, x0, 1
	la x9, test_memory-386
	lbu x5, 595(x18)
	sll x23, x23, 63
	addi x28, x0, -1517
	la x8, test_memory+1032
	lhu x15, 521(x3)
	la x6, test_memory+938
	and x11, x20, x28
	lw x7, 53(x24)
	la x2, test_memory-660
	la x5, test_memory+756
	addi x12, x0, 151
	lwu x30, -1545(x19)
	sll x18, x12, x12
	sw x16, -10(x6)
	addi x25, x13, 0
	ld x4, 876(x2)
	la x27, test_memory+922
	lhu x26, -102(x8)
	sw x30, -206(x27)
	addi x1, x0, 1078
	blt x13, x25, crash_backward
	subw x10, x31, x1
	addi x16, x0, -1
	lh x14, 1102(x9)
	xor x16, x16, x23
	lhu x22, 144(x5)
	and x29, x14, x16
	or x17, x29, x23
	la x14, test_memory+610
	la x8, test_memory+1624
	addi x1, x0, 283
	la x2, test_memory+988
	la x31, test_memory-600
	addi x27, x0, -80
	addw x28, x1, x26
	addi x13, x0, -1308
	sh x28, -328(x2)
	sb x11, 613(x31)
	ld x12, -538(x14)
	divuw x11, x1, x27
	addi x3, x0, -1565
	addi x6, x0, -122
	sh x29, -1546(x8)
	sll x21, x8, x4
	la x10, test_memory+2345
	divu x25, x6, x6
	mulhsu x19, x3, x3
	addi x20, x0, 1138
	divw x26, x20, x20
	addi x24, x0, 1
	lbu x22, -1798(x10)
	la x2, test_memory-778
	la x31, test_memory+389
	lwu x21, 1478(x2)
	addi x28, x0, 1694
	subw x12, x28, x28
	sll x24, x24, 63
	addi x15, x0, -1054
	addi x30, x13, -1601
	addi x9, x0, 1
	and x29, x15, x15
	or x1, x7, x7
	addi x7, x0, -1
	sll x9, x9, 63
	mulhu x27, x7, x7
	xor x7, x7, x24
	blt x13, x30, crash_forward
	lbu x6, -268(x31)
	and x4, x17, x7
	addi x5, x0, -1
	or x18, x4, x24
	xor x5, x5, x9
	and x16, x26, x5
	or x23, x8, x9
	bge x23, x16, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x373feabd4cc32bd3
reg_x1_init:	.dword 0x8ffbfd8a202281b7
reg_x2_init:	.dword 0x0800000000000000
reg_x3_init:	.dword 0xffffffffffffffff
reg_x4_init:	.dword 0xffffffff80000005
reg_x5_init:	.dword 0xffffffffffff8005
reg_x6_init:	.dword 0x0000000000000000
reg_x7_init:	.dword 0x87c8612570257c7f
reg_x8_init:	.dword 0x65ae6ed294f29eb4
reg_x9_init:	.dword 0x77171130809ca99a
reg_x10_init:	.dword 0xceee8813bfc766df
reg_x11_init:	.dword 0xffffffffffff8009
reg_x12_init:	.dword 0x0800000000000002
reg_x13_init:	.dword 0x3a8feb3f861f26a7
reg_x14_init:	.dword 0xffffffffffffff80
reg_x15_init:	.dword 0xe2c9c72011a84087
reg_x16_init:	.dword 0xffffffffffffff84
reg_x17_init:	.dword 0x1c5406663f97e849
reg_x18_init:	.dword 0xd3e460071cf0149b
reg_x19_init:	.dword 0x67f3ffcb1af8789a
reg_x20_init:	.dword 0x0f8587130cbfe33c
reg_x21_init:	.dword 0xffffffffffffff89
reg_x22_init:	.dword 0xffffffff80000009
reg_x23_init:	.dword 0xd3e0d6040e59fec3
reg_x24_init:	.dword 0xfff38e2dc9841993
reg_x25_init:	.dword 0x894a4cdf29a4796d
reg_x26_init:	.dword 0xebbfd2ece44dd973
reg_x27_init:	.dword 0x7d93f6d6e5aa322b
reg_x28_init:	.dword 0xffffffffffffff83
reg_x29_init:	.dword 0xe835d8a4afd5b1d5
reg_x30_init:	.dword 0x0000000000000000
reg_x31_init:	.dword 0xded71dcb5eaa2a88

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x2dcfc7cbf1cae099
reg_x1_output:	.dword 0xa43890144081c7de
reg_x2_output:	.dword 0x4e20e8905e0a7389
reg_x3_output:	.dword 0x3feea4ce2280a5b6
reg_x4_output:	.dword 0xbfc3052d35874245
reg_x5_output:	.dword 0x89c88e1d49eb3867
reg_x6_output:	.dword 0x2464f7225740bbee
reg_x7_output:	.dword 0x9b460ead3428e868
reg_x8_output:	.dword 0x002dd8433aaccb53
reg_x9_output:	.dword 0xaed46c96514687ea
reg_x10_output:	.dword 0x9ca9cf740b331e5e
reg_x11_output:	.dword 0x0c6e15bc75d12972
reg_x12_output:	.dword 0x483065b46ed0f0d1
reg_x13_output:	.dword 0xbb65a6784d6f4ba7
reg_x14_output:	.dword 0xfdeca75d02224e32
reg_x15_output:	.dword 0x08883676e2c06e6d
reg_x16_output:	.dword 0xe66f95a8c668ff04
reg_x17_output:	.dword 0x5c1d0fe188f86531
reg_x18_output:	.dword 0x1839ac77f2f89537
reg_x19_output:	.dword 0x8b0734bf352cfa86
reg_x20_output:	.dword 0x8330804f05f24be0
reg_x21_output:	.dword 0x13af569625a1b8f1
reg_x22_output:	.dword 0x3dc1b8a2b7b2ae2c
reg_x23_output:	.dword 0xc8a324572dc6ed00
reg_x24_output:	.dword 0x3ec4ea57f3fe3992
reg_x25_output:	.dword 0xa241127a0b5e34a0
reg_x26_output:	.dword 0x7042168403196f47
reg_x27_output:	.dword 0x8c9601684d882fb0
reg_x28_output:	.dword 0x7d5ad1771ecc08f7
reg_x29_output:	.dword 0x69046618e6a425d1
reg_x30_output:	.dword 0x94f055ff431644b1
reg_x31_output:	.dword 0x6aa2d8fce723b57f

// Memory Blocks
	.align 8
test_memory:
	.dword 0xe38108e6cb5a7c22, 0xdaba2f1fd701e065
	.dword 0xd55c30c17a2c7b05, 0xfea98187feae08ec
	.dword 0x5ef2e5e4b71b48da, 0xbbf8c6e0d430b514
	.dword 0xeff97eb8e1e159d5, 0x08c8e35be7592a87
	.dword 0x377cfc3090b25b19, 0xb05a52d29d2037eb
	.dword 0x1f443a98d71d0e25, 0x5351d12ff05dbf77
	.dword 0x0c0cea926f6ae78e, 0x53f4a50f39b3d6c8
	.dword 0x6ab09658e8ce64ee, 0xf60c70a1bb6b8ff5
	.dword 0x503e374f1c4c4e1c, 0xeabcacd4b52cbfe0
	.dword 0xa8d91fb4e05b559d, 0xb89232b2083b55cf
	.dword 0x56f63cb5b2f8cc59, 0x81b77704bc7a183a
	.dword 0x369cf4aa42a85c91, 0x0bbe5c42da1bdae6
	.dword 0x36e12597fbc00010, 0x381abea738e98232
	.dword 0x6b2007fd17c0a5a0, 0x50771e9cdd9467b0
	.dword 0xdde1f9cae38f39bf, 0x48bf0d63d4f1f3f7
	.dword 0x1cdf75b3be690692, 0xe8513feddd7681b6
	.dword 0x78c7baa6a1a99f1a, 0x56856c099612de0c
	.dword 0x204be79a3027c9a5, 0xdad053c3e7f8fa17
	.dword 0xecd98f8a6e521d86, 0x7092a30b5c01a1cb
	.dword 0x849c09bf618b4807, 0xb04583947db64c04
	.dword 0x810c025428d12c9e, 0x3d820afe229f57dd
	.dword 0x77c90ef659b9545f, 0x818ee736c5a84b42
	.dword 0xfcf14beaee8060b2, 0xbef1ed1d5970e6c3
	.dword 0x26e7455633917545, 0x22396d684a7b22ab
	.dword 0x73b6b0b96fc5cd43, 0x290b73c580936951
	.dword 0xa44cbaba79ebefc6, 0xb8c7544736d1a2ad
	.dword 0xa9c0ed28c3293789, 0x5be82afa8066e52d
	.dword 0xd937f14137bfa1e1, 0x0f1d31d85f54dfc9
	.dword 0x83b9b22c91ed18ed, 0xa6f710e0de695154
	.dword 0xcce8a3cda438ad0c, 0x63578c84aaa92115
	.dword 0x362031babcd5718f, 0xa0c3364406fbec96
	.dword 0x175c9a888a09f0af, 0x878b039790a21ebb
	.dword 0xfcaebb4b03066ac1, 0x07bdef12610ce415
	.dword 0x2a228f5c688354a7, 0xad3107c27b509078
	.dword 0xf927685ac824c989, 0xd2ee92dbc5df49ca
	.dword 0x35f52275d436e3c5, 0x4f432396cdc30c1e
	.dword 0x7959d8ead2223123, 0xd3a9cd58446b5b00
	.dword 0xd80fdecbcc36b64d, 0x4c46d40f35943412
	.dword 0x4c740001ba5f357d, 0x8bb27ee0cd1116d7
	.dword 0x66704e929035ac78, 0x67cbf106b5a035ce
	.dword 0xfff00026d90d3dba, 0x25662cf57f9724c2
	.dword 0xa6751fc70314f8f2, 0x191fa5bd897b9860
	.dword 0xd4b117e7a4fa36b0, 0xcdd702b5dab00b09
	.dword 0xf58d58a7cca87b5c, 0xc335f9579a855ae9
	.dword 0xfd219e55dd30156a, 0x0af56169f97fb548
	.dword 0x6fe99c383cbbeacb, 0x300be75ec0ae6320
	.dword 0x3d640f87551229a6, 0x0a2b00fb60db4aee
	.dword 0x6d617ebe68a2d047, 0x7004083d72503bcd
	.dword 0x56e92912e6e24057, 0x4e09a0779b3d55bf
	.dword 0xc0feea451bdd514d, 0x0bffc9c1d7ad234e
	.dword 0xc0fd1697e3d79624, 0x93ef469207a83853
	.dword 0x83e1931cfb9bca4e, 0xcf3737a46ff36a15
	.dword 0x101dae37543199e7, 0x44c2121fccf0f495
	.dword 0xd86c7c58ac2b392e, 0x4c1153f996de2127
	.dword 0x162bbd147cf07f30, 0x46259a9ad82c4244
	.dword 0xfeef8c4fde9477c5, 0xa57effc1434d189e
	.dword 0x35c963d96c1da0c0, 0x8bcbe0a32a37f575
	.dword 0x493f311cebf84661, 0x149a7358486e2e29
	.dword 0x9b778332bfcdb30e, 0x5ac3ce787d9ab50f
	.dword 0xf6ec151f0b722642, 0x188d47033c51eb87
	.dword 0x0f4438547746c6c5, 0xcae748817b34014d
	.dword 0xc80ce3793e8c041d, 0x3cff0b6ae8057510
	.dword 0xda1c697060f41b44, 0xb4cacdc949768a40
	.dword 0x20cc1c92c78cb29a, 0xe98e721ace8bc82c

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
