// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x6, x0, 899
	remuw x10, x16, x16
	addi x12, x0, -701
	addi x22, x0, -830
	la x19, test_memory+1554
	la x9, test_memory-755
	addi x26, x0, 1740
	addi x21, x0, 1173
	la x3, test_memory+581
	divuw x2, x6, x6
	bne x5, x5, crash_forward
	la x31, test_memory-45
	lwu x28, 1691(x9)
	addi x4, x21, 731
	sra x15, x26, x26
	addi x13, x12, -1873
	rem x7, x6, x6
	addi x11, x0, 1
	la x30, test_memory+1333
	addi x6, x0, 1
	sd x2, 621(x31)
	srliw x15, x21, 15
	remw x1, x15, x0
	bltu x12, x13, crash_forward
	la x26, test_memory+2066
	addi x5, x0, 717
	la x29, test_memory+1283
	sd x11, -635(x29)
	sll x6, x6, 63
	addi x9, x0, -1
	addi x12, x0, -1022
	addi x13, x12, -312
	addi x1, x0, 598
	bltu x4, x21, crash_backward
	xor x9, x9, x6
	lh x24, -1104(x19)
	mulw x4, x1, x26
	sll x11, x11, 63
	blt x12, x13, crash_forward
	addi x24, x0, 93
	div x4, x26, x26
	addiw x7, x7, -124
	addi x31, x1, 1592
	la x8, test_memory-174
	addi x18, x0, -1
	xor x18, x18, x11
	la x29, test_memory+1057
	sd x7, 254(x8)
	and x28, x13, x9
	sw x0, 199(x3)
	addi x21, x24, 1848
	or x10, x3, x6
	and x25, x16, x18
	lwu x16, -157(x29)
	sb x17, -460(x30)
	sll x19, x10, x10
	sll x12, x8, x8
	la x8, test_memory+1053
	or x23, x22, x11
	lbu x7, -474(x8)
	addi x16, x0, 1
	remu x17, x22, x5
	la x29, test_memory-21
	sh x21, 635(x29)
	addi x20, x0, 1952
	sll x15, x24, x24
	sll x16, x16, 63
	addi x14, x0, 430
	addi x4, x0, -1
	xor x4, x4, x16
	and x13, x5, x4
	or x3, x22, x16
	addi x29, x0, -1650
	sll x27, x20, x14
	addi x15, x0, -805
	blt x28, x10, crash_forward
	addi x5, x0, 825
	addi x30, x0, -211
	bltu x31, x1, crash_forward
	mulw x17, x29, x29
	la x7, test_memory+1813
	addi x22, x0, 469
	addw x21, x5, x22
	srl x12, x15, x15
	addi x19, x30, -946
	lb x2, -1645(x26)
	sd x13, -1109(x7)
	blt x30, x19, crash_backward
	addi x24, x0, 842
	mulw x8, x24, x24
	mulhu x21, x27, x27
	mulh x8, x23, x23
	addi x25, x0, 1896
	addi x19, x0, 1
	remw x28, x0, x0
	div x30, x24, x24
	addi x15, x0, -1202
	addi x1, x0, 1
	la x16, test_memory-656
	divu x23, x15, x15
	addi x5, x0, 1
	la x31, test_memory+2298
	la x11, test_memory-272
	sll x1, x1, 63
	addi x9, x0, -1
	ld x29, 1008(x11)
	sll x19, x19, 63
	la x7, test_memory+2736
	addi x17, x0, -180
	addi x29, x0, 1
	la x14, test_memory+324
	xor x9, x9, x1
	sllw x30, x25, x25
	lwu x4, -1812(x7)
	sh x10, -176(x14)
	remuw x27, x25, x25
	lh x6, -1580(x31)
	addi x20, x0, -1
	sll x29, x29, 63
	divw x8, x27, x27
	addi x11, x0, -1
	addi x21, x17, -1850
	xor x11, x11, x29
	mul x31, x3, x30
	and x28, x1, x11
	or x23, x28, x29
	addi x6, x0, -998
	bltu x23, x28, crash_backward
	la x24, test_memory-1667
	sd x5, 1931(x24)
	lw x3, 800(x16)
	addi x8, x0, 1756
	la x15, test_memory-838
	sh x27, 990(x15)
	addi x30, x0, 1
	la x15, test_memory+1374
	divu x4, x16, x9
	and x13, x18, x9
	sll x5, x5, 63
	la x11, test_memory+926
	or x12, x13, x1
	la x28, test_memory+1488
	sh x31, -864(x28)
	sll x30, x30, 63
	la x7, test_memory-906
	addiw x31, x26, 1664
	addi x17, x0, -449
	addi x24, x0, -1
	xor x24, x24, x30
	addi x2, x0, -1
	xor x20, x20, x19
	la x21, test_memory+745
	lhu x27, 1114(x7)
	div x25, x6, x6
	remu x14, x8, x17
	xor x2, x2, x5
	and x26, x22, x20
	and x18, x3, x2
	and x16, x25, x24
	bltu x12, x13, crash_forward
	or x10, x18, x5
	or x29, x15, x30
	mulw x13, x10, x10
	sb x18, -182(x21)
	addi x1, x0, 432
	la x4, test_memory+623
	or x22, x27, x19
	lw x23, -578(x15)
	addi x9, x0, -245
	sll x25, x23, x2
	addi x14, x0, 1
	sw x5, -130(x11)
	la x13, test_memory-1590
	sll x14, x14, 63
	la x2, test_memory+843
	or x3, x15, x15
	subw x11, x5, x21
	lwu x12, -11(x4)
	lh x5, 1984(x13)
	srl x28, x25, x14
	slt x31, x9, x9
	addi x29, x0, -740
	addi x24, x0, 369
	xori x23, x7, -1518
	addi x30, x0, 382
	bge x22, x26, crash_backward
	addi x7, x0, -1
	subw x25, x30, x30
	add x21, x29, x24
	addi x27, x0, -1248
	xor x7, x7, x14
	and x6, x24, x7
	la x8, test_memory+2141
	or x17, x25, x14
	sb x9, -1315(x8)
	lh x10, -19(x2)
	bge x17, x6, crash_backward
	sltu x18, x1, x27
	la x16, test_memory+2128
	sd x29, -1976(x16)
	la x19, test_memory-1203
	addw x14, x24, x24
	la x21, test_memory+512
	addi x13, x0, 1
	div x4, x12, x25
	mul x29, x18, x28
	addi x6, x0, 639
	addi x31, x0, -1836
	la x23, test_memory+193
	addi x25, x0, -1738
	mul x20, x25, x25
	addi x18, x0, 1421
	sw x6, 627(x23)
	sll x13, x13, 63
	addi x10, x0, 1909
	la x24, test_memory-1674
	la x9, test_memory+1631
	lui x17, 238359
	lh x28, 2025(x19)
	addi x7, x0, -1
	add x26, x31, x31
	sw x17, 1698(x24)
	sw x3, -643(x9)
	addi x2, x0, -171
	addi x27, x0, 0
	xor x7, x7, x13
	xori x30, x3, -848
	addi x15, x0, 0
	addi x11, x0, 1370
	sraw x12, x18, x2
	and x3, x10, x11
	lh x5, -50(x21)
	addi x1, x0, -932
	xor x8, x6, x1
	and x16, x15, x7
	la x29, test_memory+1029
	la x25, test_memory+2134
	blt x0, x0, crash_backward
	addi x12, x0, -739
	la x28, test_memory-1522
	la x30, test_memory-1054
	la x23, test_memory+1781
	la x5, test_memory-818
	divuw x1, x12, x12
	srl x4, x27, x4
	sw x12, -1009(x23)
	la x20, test_memory+1874
	or x22, x16, x13
	lwu x26, -869(x29)
	and x12, x4, x4
	addi x14, x0, 1
	la x26, test_memory+2507
	la x19, test_memory+2086
	lhu x17, 1552(x28)
	la x11, test_memory+33
	lw x23, -2031(x26)
	sraiw x16, x19, 31
	lh x21, 1496(x30)
	la x8, test_memory+1143
	slt x7, x11, x28
	la x1, test_memory+2630
	sll x14, x14, 63
	lwu x24, 1126(x5)
	la x10, test_memory+954
	addi x31, x0, -1
	la x13, test_memory+1078
	lwu x2, -1818(x19)
	sd x17, 407(x11)
	sw x4, -646(x13)
	addi x15, x7, -1440
	la x28, test_memory+527
	ld x9, -1918(x25)
	blt x0, x0, crash_forward
	addi x27, x0, 1
	xor x31, x31, x14
	sh x6, -1662(x1)
	xor x6, x19, x19
	sb x6, -683(x10)
	and x18, x22, x31
	la x23, test_memory+2119
	lui x30, 523453
	lw x16, 97(x28)
	or x3, x16, x14
	slliw x24, x8, 6
	addi x17, x0, 1519
	sd x31, -2039(x23)
	xor x5, x17, x17
	sll x27, x27, 63
	bge x3, x18, crash_backward
	sw x18, -1654(x20)
	addi x7, x0, 1
	addi x29, x0, -1
	ld x4, -175(x8)
	sll x7, x7, 63
	addi x21, x0, -1
	xor x21, x21, x7
	xor x29, x29, x27
	srl x15, x10, x10
	and x11, x18, x21
	addi x10, x0, -119
	and x22, x15, x29
	addi x1, x0, 0
	or x13, x11, x7
	or x12, x9, x27
	blt x0, x0, crash_forward
	addi x16, x0, 0
	srl x28, x22, x7
	la x5, test_memory+2892
	addi x3, x0, 17
	blt x22, x12, crash_backward
	and x15, x12, x12
	addi x20, x0, -1221
	addi x6, x0, 1732
	addi x17, x0, 1846
	addi x16, x0, -62
	addi x27, x0, 554
	sb x15, -2001(x5)
	addi x12, x16, -1614
	div x26, x10, x10
	addi x9, x0, 1356
	la x4, test_memory-450
	sb x21, 1246(x4)
	addi x18, x3, 1195
	sll x8, x17, x9
	addi x31, x0, -1267
	sraw x23, x27, x27
	addi x10, x0, 0
	la x4, test_memory+905
	la x12, test_memory-1542
	addi x22, x0, 1472
	addi x5, x0, 0
	blt x10, x5, crash_forward
	addi x13, x0, -608
	remw x11, x13, x13
	addi x15, x0, 1967
	lhu x7, -585(x4)
	addi x30, x0, 287
	la x21, test_memory+843
	addi x28, x0, 1065
	addi x23, x0, -984
	la x2, test_memory+662
	addi x5, x0, 1
	mul x24, x22, x28
	addw x29, x15, x15
	rem x14, x20, x6
	divuw x11, x20, x23
	xor x4, x1, x1
	add x28, x31, x31
	la x17, test_memory+1859
	la x20, test_memory-887
	lhu x22, 1219(x20)
	slti x6, x3, 536
	div x1, x27, x30
	addi x19, x0, 725
	sw x6, -582(x2)
	lbu x9, -1505(x17)
	addi x26, x23, -1702
	addi x29, x0, 1
	la x14, test_memory-269
	sh x22, -475(x21)
	lwu x16, 1910(x12)
	la x3, test_memory-822
	rem x9, x28, x8
	la x7, test_memory-1308
	sd x13, 1652(x7)
	addi x2, x0, 0
	lw x11, 942(x3)
	sll x29, x29, 63
	la x27, test_memory+1177
	la x12, test_memory+96
	sll x25, x31, x19
	la x17, test_memory+1185
	lb x28, -186(x27)
	addi x6, x0, 0
	sd x11, 589(x14)
	la x25, test_memory-235
	addi x31, x0, 1622
	addi x7, x0, 1120
	mulw x20, x22, x31
	addi x9, x0, 931
	sub x28, x31, x9
	addi x27, x0, -1524
	la x30, test_memory-1013
	sll x5, x5, 63
	addi x8, x0, -1
	xor x20, x21, x12
	la x26, test_memory+2124
	addi x11, x0, -1015
	sb x11, -32(x12)
	addi x28, x0, -1638
	addi x15, x0, -1
	la x1, test_memory+825
	ld x19, 635(x25)
	sh x24, 1923(x30)
	xor x8, x8, x5
	addi x9, x0, -1240
	lh x22, -277(x17)
	addi x14, x27, -1067
	addi x4, x0, -192
	rem x31, x28, x9
	sllw x3, x7, x11
	addi x16, x0, -1707
	and x13, x9, x8
	or x10, x9, x5
	or x21, x4, x16
	xor x15, x15, x29
	and x24, x21, x15
	lhu x23, -1350(x26)
	or x18, x24, x29
	sw x24, -53(x1)
	andi x20, x11, 1498
	subw x27, x13, x13
	la x17, test_memory+1126
	addi x3, x0, -1194
	addi x2, x0, -907
	la x22, test_memory-105
	la x30, test_memory+2468
	div x13, x10, x5
	lw x12, 549(x22)
	addi x24, x0, 0
	sllw x29, x1, x12
	la x26, test_memory+520
	rem x21, x12, x12
	addi x8, x0, 0
	srlw x14, x11, x11
	addi x31, x0, 232
	subw x16, x2, x2
	sd x11, 208(x26)
	addi x5, x0, -699
	addi x25, x0, 1
	lh x19, -998(x17)
	addi x16, x0, 1
	la x9, test_memory+1071
	addi x10, x0, 314
	sh x29, -1948(x30)
	sll x25, x25, 63
	addi x18, x0, -1
	xor x18, x18, x25
	addi x4, x0, 64
	sd x23, -423(x9)
	addi x15, x5, -1171
	sll x16, x16, 63
	and x11, x13, x18
	slt x6, x10, x4
	addi x7, x3, -1915
	la x28, test_memory+2343
	bne x24, x8, crash_forward
	bge x15, x5, crash_backward
	or x23, x11, x25
	sd x16, -1487(x28)
	addi x14, x0, -1
	xor x14, x14, x16
	divu x1, x31, x31
	and x21, x3, x14
	or x27, x21, x16
	bgeu x21, x27, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x1ce8fe84ad9c2e98
reg_x1_init:	.dword 0x3b4c118f9e017f3e
reg_x2_init:	.dword 0xffffffffffff8003
reg_x3_init:	.dword 0x0c59d4a07c36cc37
reg_x4_init:	.dword 0x0084c0ec29bf70e5
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0x6def93576724fdd2
reg_x7_init:	.dword 0xffffffff80000001
reg_x8_init:	.dword 0x13fe9d5e35c79cb2
reg_x9_init:	.dword 0x54e75eb2bf0fe813
reg_x10_init:	.dword 0xffffffff80000005
reg_x11_init:	.dword 0xd7b0cabbe75551fd
reg_x12_init:	.dword 0x00ec4f4094d1d449
reg_x13_init:	.dword 0xffffffffffff8003
reg_x14_init:	.dword 0xffffffffffffffff
reg_x15_init:	.dword 0x5202476590cd8ef4
reg_x16_init:	.dword 0x3e9917abaab44f00
reg_x17_init:	.dword 0x0000000000000000
reg_x18_init:	.dword 0x0908ad01005fe5cc
reg_x19_init:	.dword 0x9d0c9540a3705b0e
reg_x20_init:	.dword 0xffffffffffffffff
reg_x21_init:	.dword 0x0000000000000000
reg_x22_init:	.dword 0xd396580f80281711
reg_x23_init:	.dword 0x6e9332e92beaaf5c
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0x0800000000000002
reg_x26_init:	.dword 0x5a5bebd48341ffd7
reg_x27_init:	.dword 0x54d9b2ac4263f75a
reg_x28_init:	.dword 0x0000000000000003
reg_x29_init:	.dword 0x0000000000000000
reg_x30_init:	.dword 0xffffffffffffffff
reg_x31_init:	.dword 0xffffffffffffff80

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x31519216e2faba02
reg_x1_output:	.dword 0x073d243f4a1b2323
reg_x2_output:	.dword 0x222e3b9e07048db5
reg_x3_output:	.dword 0xd0ee36166879b702
reg_x4_output:	.dword 0x544f9f390a439bdb
reg_x5_output:	.dword 0xbb251cb31064141e
reg_x6_output:	.dword 0x51b080a49266b584
reg_x7_output:	.dword 0xbeb4ff83a44620b3
reg_x8_output:	.dword 0xeab5d635b6b719a7
reg_x9_output:	.dword 0x2db1ae814285d4ec
reg_x10_output:	.dword 0xc657130c13dac545
reg_x11_output:	.dword 0xca5c197dd4d781aa
reg_x12_output:	.dword 0xd5446082b9a921cd
reg_x13_output:	.dword 0x9b8e68bea0c93f84
reg_x14_output:	.dword 0xf2b27aef5831b5c2
reg_x15_output:	.dword 0x2a788ad08fe7ca0e
reg_x16_output:	.dword 0xd3bb258950eabb9a
reg_x17_output:	.dword 0x81374b96f33f4b5e
reg_x18_output:	.dword 0x11bc69a30ff7c2e9
reg_x19_output:	.dword 0x67dd48a1a11edbcb
reg_x20_output:	.dword 0x3c1015229dd6bfbe
reg_x21_output:	.dword 0xcf2656c58d2db9f8
reg_x22_output:	.dword 0xc5182c2da5c42c4d
reg_x23_output:	.dword 0xba832ce93e4d7f10
reg_x24_output:	.dword 0x953442230f0d20cd
reg_x25_output:	.dword 0x07b4681e2bb4d352
reg_x26_output:	.dword 0x8efeedc9b99085a3
reg_x27_output:	.dword 0x36093cf1376266d0
reg_x28_output:	.dword 0x4a71cccc4e1ec3c0
reg_x29_output:	.dword 0x6bc76a0457c03272
reg_x30_output:	.dword 0x6381ca6664799746
reg_x31_output:	.dword 0xe2873fda794b4541

// Memory Blocks
	.align 8
test_memory:
	.dword 0x83ac9d5968abe871, 0x24a7d1f1a394a1e2
	.dword 0x980bb124b28bceb4, 0xfbaca5172f33f05f
	.dword 0xae0fee749ab72222, 0x0a976ef6148d082d
	.dword 0xab4d16dc127d3f0f, 0x1565baf109d5966a
	.dword 0x67f2a7c2562edff7, 0x41038831c9d86465
	.dword 0xbafb7897d577319e, 0xd2813500b8c80263
	.dword 0x51fc8851e1ef8577, 0x626c4b5a794adaa0
	.dword 0x000eae163b514649, 0x2f1002ba6e06f093
	.dword 0xbed6213130c0130f, 0x5f5b8b38ab93d076
	.dword 0x55660c49f1e0241f, 0x1d7975dd581d7305
	.dword 0x59ed9fd95f0b5e8f, 0x8504ce2bb96b1985
	.dword 0x9fff57d96039b9d4, 0x5a7db9025ba96607
	.dword 0xa51a68ba9c57dbab, 0x5968aca56b8733ed
	.dword 0xeb29879d91110e3b, 0xe9a09615f928f4ad
	.dword 0x9c2981bd23bff47b, 0x1c157fa8c76e94d5
	.dword 0x2e5d5728118ba0d1, 0xa0b68cd738442d4e
	.dword 0xe49cccb74cecf1fb, 0xc3df5f53037604e4
	.dword 0xfda5a939a4325a32, 0x868e3959a604a605
	.dword 0xaf2711f4ad56748c, 0x4329714ed47e0cc8
	.dword 0xd8c1ba4b39e00ca1, 0x8df00a85efad3131
	.dword 0xd7aedab7b7c87c71, 0xb59a875f484171b3
	.dword 0x686b23043ccf8485, 0x636e48976823a1f5
	.dword 0xdfe21bb546720253, 0xdb570dda2746c1d8
	.dword 0xbc69aac3dc2b28e6, 0x99bf6b9ad21ea0b9
	.dword 0x17a4af9401fe1fbe, 0xef1a4a2869c6f0f3
	.dword 0x885eea1eb0c02bf4, 0x7d9cc1f81d898fa7
	.dword 0xa5e3a171a679c7a1, 0x75c8e946a31b04be
	.dword 0x7073bd5ac5b74b80, 0x3f5f66e462d07f2f
	.dword 0x2b97475ebd080ed2, 0x1f56de496782d17d
	.dword 0xb25186f0ca752181, 0xedd588ec4b063283
	.dword 0x69fe2ce17fa70488, 0x321a90d39856c673
	.dword 0xda114211f5040491, 0xf30a006e4016341c
	.dword 0xac5acd7042871adf, 0x42e75ba032f6ca6a
	.dword 0xbe0a651fe6a9786e, 0x60f8361e3474fa33
	.dword 0xb4be1ef7ecb71f58, 0x2d895afbb7082830
	.dword 0xafab942fb6892e79, 0x616659848e001b48
	.dword 0x92a8ec59c026c356, 0x5a7c8b4a78d48b14
	.dword 0xaac7238f2077963a, 0x895fe77cc400929f
	.dword 0x198dffe9ef41b4a1, 0x5ff9377f3cdc0b6d
	.dword 0x4ffd6a39b85dfdda, 0xa60a80b58c8114be
	.dword 0xa47f1df244a545e7, 0xf5afb7a449ec4b13
	.dword 0xa22ee463ecd242a7, 0xd5cf1035096a73f1
	.dword 0x738ecf2e6fb2a736, 0x03cd7f56b74ea1e4
	.dword 0xd22025f395c41194, 0x661141d0421814c6
	.dword 0x36b0fb4f5effae84, 0x4f257c4b1cdf5a41
	.dword 0xdeb99d03c661b7b6, 0xfaef48b35a567291
	.dword 0x492453786fe83027, 0xe595c4c2f31ffd8e
	.dword 0x738d24629b9682c8, 0xfbc3f5dd63fdb3e9
	.dword 0xb7ae8cc420c1e75d, 0xf704961ae196b0b5
	.dword 0x3a8b6613cac4b1a8, 0x1c651ea35c9a4f29
	.dword 0x6b356abe6174eec6, 0x388ea33ef20ca0a4
	.dword 0xc9130dccc69cf4d8, 0x2058532ce4d5bef0
	.dword 0xb87e99e6947ac8e4, 0x48c0b3321f7d7eca
	.dword 0x6bc3cb796a357efe, 0xa277e4f4839146a2
	.dword 0x25205a32d085f8a2, 0xccf68f88ffca0d9e
	.dword 0x57bf25b63cc2a564, 0xc0c23d4ad2e4c6e4
	.dword 0x68ecf98bf95429ca, 0x293942ed577fbd18
	.dword 0x33411c578a931078, 0x094d83d2c973a223
	.dword 0x92631e4dd46ce98e, 0xc536a79d3f475736
	.dword 0x7aba9ae3c2317c4d, 0xea9995046ec9b10e
	.dword 0xbbece1c954ceef00, 0xca2c45e922ccbc79
	.dword 0x02d7bb15bece0919, 0x36ba48aaadb24718
	.dword 0xeef7bac2f6cdf399, 0x26df82b84931b065
	.dword 0xbb1bd75aeb511bb5, 0xfe140865a3bb46f7

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
