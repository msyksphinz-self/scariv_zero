// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x18, x0, 1
	addi x30, x0, -1584
	addi x17, x0, 1936
	sll x18, x18, 63
	mul x14, x20, x20
	la x24, test_memory+219
	la x3, test_memory+386
	addi x7, x0, 32
	lh x9, 293(x24)
	addi x13, x0, 1752
	la x11, test_memory+385
	la x23, test_memory+1335
	bne x0, x0, crash_forward
	addi x31, x0, -1
	la x10, test_memory-789
	lhu x4, 534(x3)
	addi x28, x0, -903
	la x6, test_memory+2208
	la x22, test_memory+1268
	sllw x27, x7, x28
	sw x26, -1360(x6)
	srlw x20, x30, x13
	la x5, test_memory-597
	sd x13, -415(x23)
	la x16, test_memory-1402
	ld x19, 1637(x10)
	xor x31, x31, x18
	lwu x29, 1129(x5)
	addi x12, x0, 1473
	and x1, x17, x12
	and x26, x27, x31
	or x15, x12, x18
	sw x1, -1052(x22)
	lbu x21, -163(x11)
	sd x20, 1930(x16)
	or x4, x15, x10
	la x15, test_memory-1478
	addi x29, x0, -485
	addi x9, x0, 1268
	addi x8, x0, 1
	la x26, test_memory-399
	addi x22, x0, -1489
	addi x7, x0, 1715
	lhu x27, 1534(x15)
	sll x8, x8, 63
	addi x21, x0, -1
	addi x11, x0, 1
	addi x1, x0, 208
	la x23, test_memory+694
	remuw x17, x29, x1
	sw x4, -538(x23)
	lwu x12, 1375(x26)
	divuw x5, x31, x31
	la x27, test_memory-592
	addi x13, x9, 1863
	addi x18, x0, 1070
	sub x20, x7, x7
	sll x11, x11, 63
	addi x16, x0, -1
	xor x16, x16, x11
	xor x21, x21, x8
	add x2, x22, x18
	addi x24, x0, 1781
	mulhu x10, x29, x29
	sraiw x29, x17, 4
	addi x31, x24, 420
	and x30, x16, x21
	and x19, x2, x16
	or x6, x22, x11
	xor x7, x26, x25
	bgeu x9, x13, crash_forward
	addi x17, x0, 1523
	blt x19, x6, crash_backward
	addw x3, x0, x0
	sub x25, x12, x6
	addi x20, x0, -909
	or x28, x5, x8
	bge x28, x30, crash_forward
	bgeu x24, x31, crash_forward
	remw x12, x17, x20
	lbu x15, 1517(x27)
	addi x4, x0, -212
	slliw x23, x10, 10
	addi x1, x0, 50
	slt x26, x4, x1
	divu x5, x21, x21
	addi x23, x0, 359
	mulhsu x17, x6, x12
	la x11, test_memory+1301
	la x3, test_memory+1140
	la x21, test_memory+1037
	addi x25, x23, 1876
	sraw x8, x29, x29
	slt x5, x30, x30
	mul x24, x7, x9
	add x2, x10, x28
	sllw x10, x0, x0
	addi x12, x0, 240
	addi x19, x0, 1666
	addi x28, x0, 1055
	addi x6, x0, 66
	addi x29, x0, 1
	la x1, test_memory+310
	sh x23, -960(x3)
	mulh x17, x12, x19
	la x22, test_memory+81
	sll x29, x29, 63
	addi x8, x11, 0
	addi x15, x0, -1
	addi x5, x8, 0
	or x18, x28, x6
	la x27, test_memory+2824
	bne x8, x5, crash_backward
	la x9, test_memory+1026
	lbu x26, -384(x11)
	xor x15, x15, x29
	lhu x16, 149(x22)
	lh x4, -636(x9)
	la x13, test_memory+2295
	and x31, x25, x15
	sh x16, -1495(x13)
	or x7, x30, x29
	la x14, test_memory+2015
	sh x17, -23(x21)
	lb x30, -2021(x27)
	lbu x20, -306(x1)
	sb x4, -2015(x14)
	sltu x10, x9, x17
	la x14, test_memory+2613
	addi x7, x0, 1
	sll x7, x7, 63
	blt x0, x0, crash_forward
	add x13, x30, x30
	mulhsu x23, x18, x18
	la x24, test_memory-989
	la x1, test_memory-369
	lb x9, 501(x1)
	la x25, test_memory+661
	srl x28, x26, x26
	sd x30, -1829(x14)
	la x4, test_memory+340
	la x26, test_memory+2429
	sw x10, 251(x25)
	addi x18, x0, -316
	la x16, test_memory+1813
	addi x25, x0, 835
	addi x31, x0, 150
	addi x3, x31, 1283
	lhu x22, -1445(x26)
	lhu x29, 526(x4)
	addi x27, x0, -1
	addi x10, x0, 1600
	subw x15, x18, x18
	sraw x20, x10, x10
	addw x9, x27, x21
	la x28, test_memory-1803
	sw x20, 1445(x24)
	blt x3, x31, crash_backward
	la x1, test_memory-362
	lw x12, -1805(x16)
	mulhu x8, x25, x25
	sw x2, 534(x1)
	lh x23, 1977(x28)
	la x3, test_memory+2241
	mulh x11, x5, x5
	remu x24, x6, x0
	add x4, x9, x25
	addi x8, x0, 421
	ori x1, x17, 753
	addi x13, x0, 1853
	addi x6, x0, -745
	addi x10, x0, 343
	subw x16, x10, x10
	sltiu x9, x17, -534
	bne x0, x0, crash_forward
	srlw x1, x18, x18
	addi x26, x0, -515
	divuw x25, x6, x6
	addi x17, x0, -1926
	xor x27, x27, x7
	la x24, test_memory-497
	divuw x30, x4, x4
	lb x28, -1933(x3)
	subw x1, x23, x22
	la x30, test_memory+39
	and x23, x8, x8
	lh x15, 673(x24)
	and x5, x15, x27
	addi x31, x26, -1678
	la x16, test_memory+367
	addi x21, x0, 319
	bgeu x31, x26, crash_forward
	mulh x14, x13, x17
	sraw x19, x6, x21
	la x22, test_memory+1641
	la x20, test_memory+2049
	addi x4, x0, -1390
	lb x18, -806(x22)
	la x25, test_memory-1174
	sw x2, 1990(x25)
	la x12, test_memory+2831
	or x2, x31, x7
	lb x10, 784(x30)
	blt x5, x2, crash_backward
	sw x9, -1213(x20)
	lhu x29, -1923(x12)
	remuw x11, x4, x4
	sh x19, 537(x16)
	remu x15, x31, x22
	addi x17, x0, -652
	addi x8, x17, -698
	ori x29, x1, -1081
	la x7, test_memory+883
	mulw x10, x8, x8
	sra x16, x30, x30
	sltu x4, x20, x20
	addi x23, x0, 0
	addi x27, x0, 0
	la x6, test_memory+1874
	la x15, test_memory+791
	addi x14, x0, 540
	addi x1, x0, 1
	addi x2, x0, 1827
	sraw x11, x12, x22
	lhu x9, -1462(x6)
	xor x13, x6, x6
	sb x10, 112(x7)
	addi x16, x0, 605
	div x21, x14, x14
	la x4, test_memory+172
	mulw x22, x1, x30
	sd x31, 676(x4)
	sll x1, x1, 63
	mulh x5, x29, x22
	lwu x29, 61(x15)
	bltu x23, x27, crash_backward
	addi x30, x0, 1167
	divu x25, x2, x30
	slliw x26, x3, 20
	addi x28, x0, 1941
	addi x24, x0, -469
	addi x10, x16, 1106
	addi x19, x0, -1
	bltu x10, x16, crash_forward
	xor x19, x19, x1
	addi x31, x0, 1207
	xor x20, x31, x31
	and x12, x20, x19
	or x3, x5, x1
	srai x11, x7, 62
	sub x29, x8, x8
	la x16, test_memory+432
	lb x31, -383(x16)
	mul x22, x27, x5
	la x14, test_memory+2350
	la x15, test_memory+2224
	subw x18, x28, x24
	divw x21, x24, x24
	la x4, test_memory-33
	la x26, test_memory+2246
	la x30, test_memory+2763
	la x27, test_memory-851
	addi x18, x0, 1
	addi x8, x0, 407
	addi x9, x0, 1477
	sd x13, -1931(x30)
	addi x6, x0, 1723
	addi x13, x6, 242
	divw x25, x9, x9
	la x17, test_memory-1582
	bltu x13, x6, crash_backward
	sd x13, 1723(x27)
	srliw x21, x7, 31
	addi x25, x0, 1611
	la x7, test_memory+956
	lbu x5, -1700(x15)
	ld x10, -1870(x14)
	addi x16, x0, 1906
	sraw x22, x8, x16
	sll x18, x18, 63
	la x21, test_memory+1921
	la x31, test_memory+544
	lwu x13, -1801(x21)
	sb x11, -544(x31)
	mulhsu x20, x10, x10
	sraiw x6, x24, 4
	divw x9, x16, x14
	addi x24, x0, -1
	bltu x3, x12, crash_forward
	xor x24, x24, x18
	and x11, x10, x24
	sh x9, -432(x7)
	ld x23, 497(x4)
	divw x2, x22, x15
	addi x20, x0, 1554
	sw x9, -1762(x26)
	srlw x28, x3, x13
	addiw x19, x21, 1689
	addw x9, x7, x7
	la x19, test_memory-2016
	addi x28, x0, 866
	addi x3, x0, 1
	addi x7, x20, 1285
	addi x15, x0, 1
	addi x13, x0, 1131
	addw x12, x2, x2
	remw x26, x28, x28
	or x29, x27, x18
	addi x4, x0, -34
	rem x2, x11, x11
	lbu x14, 2045(x19)
	blt x11, x29, crash_backward
	addi x8, x4, -402
	addi x27, x0, -1765
	remuw x30, x25, x27
	and x22, x13, x13
	sll x15, x15, 63
	addi x16, x0, -1
	xor x16, x16, x15
	mulw x25, x1, x23
	and x5, x27, x16
	la x28, test_memory+2771
	la x18, test_memory+1758
	remw x23, x2, x15
	sb x5, 1842(x17)
	slt x26, x0, x6
	bltu x12, x12, crash_backward
	lb x2, -1174(x18)
	sllw x12, x21, x26
	la x11, test_memory-206
	or x21, x5, x15
	sd x12, -1763(x28)
	la x14, test_memory+1136
	addi x29, x0, 169
	la x22, test_memory+1096
	sh x23, -440(x14)
	lbu x24, 1053(x11)
	la x9, test_memory+1105
	addi x13, x0, -1965
	lwu x30, -504(x22)
	ld x10, -505(x9)
	bltu x4, x8, crash_backward
	xor x27, x29, x13
	addi x12, x0, 1
	sll x12, x12, 63
	bne x17, x17, crash_forward
	sll x3, x3, 63
	bge x20, x7, crash_forward
	addi x2, x0, -1123
	bne x0, x0, crash_backward
	addi x7, x0, 1245
	la x5, test_memory+1082
	la x19, test_memory+706
	addi x31, x0, -1
	addi x20, x0, 1966
	xor x31, x31, x3
	addi x10, x7, 1500
	srlw x29, x21, x21
	and x1, x24, x31
	la x9, test_memory+2000
	sw x30, 2(x19)
	lb x27, -1746(x9)
	addi x17, x0, 62
	addi x16, x0, -702
	addi x30, x0, 1
	addi x23, x0, 1
	remuw x13, x20, x20
	or x6, x1, x3
	sll x23, x23, 63
	sll x30, x30, 63
	beq x1, x6, crash_forward
	divu x4, x16, x16
	remw x15, x22, x22
	addi x28, x0, -1
	xor x28, x28, x12
	and x25, x13, x28
	or x24, x25, x12
	addi x20, x0, -1714
	sraw x14, x2, x17
	addi x4, x0, 1351
	addi x11, x0, -1
	la x14, test_memory-291
	addi x9, x0, -384
	lh x22, -824(x5)
	la x3, test_memory-1299
	addi x19, x0, 1961
	sll x7, x18, x31
	lb x1, 1081(x14)
	xori x31, x0, -1349
	or x13, x20, x9
	addi x29, x0, -1
	addi x5, x0, 542
	addi x27, x19, 1534
	mulw x17, x18, x18
	xor x29, x29, x30
	and x21, x0, x29
	mulhu x2, x4, x4
	xor x11, x11, x23
	la x1, test_memory-1834
	addi x10, x0, -1604
	sraw x13, x31, x31
	addi x15, x0, 48
	or x22, x5, x5
	addi x16, x15, 428
	mulh x31, x2, x21
	and x26, x10, x11
	bgeu x15, x16, crash_forward
	or x8, x21, x30
	or x18, x26, x23
	lbu x6, 1682(x3)
	addi x7, x10, -1033
	lhu x9, 2036(x1)
	bgeu x26, x18, crash_forward
	la x7, test_memory-1300
	slti x23, x6, 1559
	la x18, test_memory+2587
	la x14, test_memory-575
	la x25, test_memory+216
	lh x17, -2043(x18)
	sll x20, x11, x16
	addi x9, x0, 680
	sh x16, 1812(x7)
	addi x13, x9, 1160
	slli x27, x28, 12
	beq x9, x13, crash_backward
	sb x19, 335(x25)
	sb x13, 745(x14)
	xor x31, x6, x4
	la x3, test_memory-1147
	la x5, test_memory+1290
	lw x22, 1803(x3)
	sb x8, -633(x5)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x6, 48(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x0000000000000000
reg_x1_init:	.dword 0x0000000000000000
reg_x2_init:	.dword 0x0000000000000000
reg_x3_init:	.dword 0xffffffff80000005
reg_x4_init:	.dword 0x42adf2aca2b2fd5e
reg_x5_init:	.dword 0xffffffffffffff88
reg_x6_init:	.dword 0x0000000000000004
reg_x7_init:	.dword 0xffffffffffffffff
reg_x8_init:	.dword 0x0000000000000000
reg_x9_init:	.dword 0x1703ab1195394fb7
reg_x10_init:	.dword 0x271cc21adc9519d9
reg_x11_init:	.dword 0xb930041516f13193
reg_x12_init:	.dword 0xffffffffffff8006
reg_x13_init:	.dword 0x91356a37f594796b
reg_x14_init:	.dword 0xffffffffffffffff
reg_x15_init:	.dword 0x647b66cd780f9afb
reg_x16_init:	.dword 0x1f529bf64158d8c2
reg_x17_init:	.dword 0x7f6e0637f200fb7c
reg_x18_init:	.dword 0x92902e90a45f47d5
reg_x19_init:	.dword 0x0000000000000007
reg_x20_init:	.dword 0xf372f0b8b3c706ba
reg_x21_init:	.dword 0xffffffffffffff83
reg_x22_init:	.dword 0x400476e103c85f63
reg_x23_init:	.dword 0x19cd8817d888d3ae
reg_x24_init:	.dword 0x5d5cc5624aab8eb2
reg_x25_init:	.dword 0xe27db757100fb041
reg_x26_init:	.dword 0x0d6190618ca068b1
reg_x27_init:	.dword 0x0000000000000006
reg_x28_init:	.dword 0xffffffffffffffff
reg_x29_init:	.dword 0xffffffffffffff83
reg_x30_init:	.dword 0x0800000000000007
reg_x31_init:	.dword 0x53163e0fbb0e7f74

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x8cfaa96197f4406d
reg_x1_output:	.dword 0x48f8594571efe114
reg_x2_output:	.dword 0x5424d8280fc1c911
reg_x3_output:	.dword 0xacc13c57330e6acc
reg_x4_output:	.dword 0x9421d3fd0dfc41d5
reg_x5_output:	.dword 0xc5d70d3f9ee8852d
reg_x6_output:	.dword 0xcd31b89e19b746f7
reg_x7_output:	.dword 0xbda6039e30893aeb
reg_x8_output:	.dword 0x6c9b0d10d506bf40
reg_x9_output:	.dword 0x5aa5496ea1db8fee
reg_x10_output:	.dword 0x2a91651c9c2fd269
reg_x11_output:	.dword 0xa1bdbb9ed5df7855
reg_x12_output:	.dword 0x886025fc188861bb
reg_x13_output:	.dword 0x95039fe25e88bbbe
reg_x14_output:	.dword 0x8b30624ee742e6f4
reg_x15_output:	.dword 0x94f563c2c29248c4
reg_x16_output:	.dword 0xc9bc01509fdedd71
reg_x17_output:	.dword 0x41feb8fd4334bcc8
reg_x18_output:	.dword 0xb9afa54ec6d41989
reg_x19_output:	.dword 0x0820a3092b5723f4
reg_x20_output:	.dword 0xafa005570191b236
reg_x21_output:	.dword 0xe39449f805bd357d
reg_x22_output:	.dword 0x018eae2e874f60fa
reg_x23_output:	.dword 0xa447a68256269027
reg_x24_output:	.dword 0x2b455e87c8ba7bff
reg_x25_output:	.dword 0x8c705b5e3e86bb0e
reg_x26_output:	.dword 0x248e72737d75ee80
reg_x27_output:	.dword 0xbd624fd37db5eea2
reg_x28_output:	.dword 0x6ec4121433f6d368
reg_x29_output:	.dword 0x729cdf8e5c76e9f3
reg_x30_output:	.dword 0xd09717938cbd9638
reg_x31_output:	.dword 0x96dab3b5d8ae582e

// Memory Blocks
	.align 8
test_memory:
	.dword 0x8f89e05bff85be2d, 0x271d993ce16c8a66
	.dword 0xf5aa7d7f5604c7a1, 0x0d70e878f9328998
	.dword 0x8adaf7777e72afb1, 0x65b251f192e7c4e8
	.dword 0x02ad99136e9d161f, 0x535a247cf985e031
	.dword 0x15c675b020f0197a, 0xdd3960894ed466bc
	.dword 0x5f129ea63dee517c, 0x6cb52cb7f2e6664e
	.dword 0xa538bc0568438bb2, 0x266c7fb080a83667
	.dword 0x6eadfc80e6342e62, 0x03ae13340bebefc9
	.dword 0x461590aa32e565a8, 0x5bf1f46dc7475837
	.dword 0x0c40255eeb187ee1, 0xfceb458e03fe467e
	.dword 0x308411843db6164d, 0x6bfc04973860c2b8
	.dword 0xae7e2af21f2bfaef, 0xee1deb7681b466cf
	.dword 0x7cd676aeb16aecb8, 0x48f0bd58d234c340
	.dword 0x5aa3285dbf7f98e4, 0x39cf9536922ecc21
	.dword 0x03b7a4f8959478a2, 0x93d409b218f79264
	.dword 0x1ed47cbb8ae075fa, 0x1cc73a24b7becd5d
	.dword 0x3e8890640ce07aeb, 0x386e18f69141f881
	.dword 0x0de2d59910784ed3, 0x6a9f872f9e6d096f
	.dword 0xf0176ea850796613, 0xb868154dc5420234
	.dword 0x9d32097467d487f2, 0x10687d590d30e3ca
	.dword 0x791ab9ae7aa56ec1, 0x8fd92a34c69dc4e2
	.dword 0xd4d1c2430295c640, 0xb56e6035f2eb10e3
	.dword 0xff1a021653072c40, 0x32fddaf8ab3a3331
	.dword 0xf910f7ef4e4a1789, 0xfb7ff4717e7532b2
	.dword 0xf7ae91b27921c8fd, 0xa213a9405758018d
	.dword 0x34163ad36b33aafd, 0xf14e0e4709588534
	.dword 0x3d45de097c02c30a, 0x75930b8003b89aa4
	.dword 0x4d46ce4152fe19af, 0x42be700a3cfd9aeb
	.dword 0x8dcfcad4a8333c9f, 0x9241b38552bd23ea
	.dword 0xab8692fd68a43f19, 0x944bf89f4267295c
	.dword 0x3702bc849752dc93, 0x69d724ef73b19216
	.dword 0xb69ac1bf9108a196, 0x3fce2200fcc9e590
	.dword 0xbf1f7abbd6fe3ee7, 0xca2d9bb0c7b5cda3
	.dword 0x2b3975b5a2026ae7, 0x5a41cfbc47937094
	.dword 0x8c5ee2d04ee2f53c, 0xc2394292b7f6e750
	.dword 0x1c9007002be0f0af, 0x836d6d72f0b253f9
	.dword 0xe8736a4b68231757, 0x113fb9b0f12a5ca1
	.dword 0x2d4a35335fa7ccf7, 0x817a5d59b0310e54
	.dword 0x40c8716e5a6a63a4, 0xea09ecfb047d6c5b
	.dword 0x016421d81a8586ab, 0x13ddb6bbae762fbf
	.dword 0x2f6965a96d56efb0, 0x910a3ab2826a7b0c
	.dword 0x09511ae9ed46ca1a, 0xba2a547642bb8656
	.dword 0xabbab4246f1768ae, 0x81b0e9f200268780
	.dword 0x8e41355b4cc8317a, 0x64a6337a738e5abb
	.dword 0xbd6e8c3a1b60e3f3, 0x5468f1221c98af4d
	.dword 0x568fb78ef6a89d61, 0x25bd214e6b6abc93
	.dword 0x2f5f71f7b01e3f7b, 0x93f70c84860dc348
	.dword 0x50a453ddfbbe1d4d, 0x04aaba8983c3df07
	.dword 0x0b3aa0a3777b1261, 0x0e3524ad3619ec0e
	.dword 0x71d13316d00f681e, 0x02f5b95dc10b8544
	.dword 0x1a243d2ea12c2d6a, 0xf1640501955a5e7d
	.dword 0x5df7cef83653e497, 0x3f9694089a8a7efb
	.dword 0x41bf58c85f17ab7b, 0x348d623ffd092037
	.dword 0x7bfe9cb6db3c41e0, 0xe3e36b62b11c34e1
	.dword 0x5843c34cdbbe921f, 0x5eb030f61894dc26
	.dword 0xd261877bfb05a006, 0x2f9b4953a81f4530
	.dword 0xf58badd04b0a0202, 0xbdb14c06fdaec6f2
	.dword 0x66673ae47a19487a, 0x8aaaaf59ac2d3025
	.dword 0xda431d17085df778, 0x834a6b2d6d80938d
	.dword 0xdfc53d806fbaf68e, 0xfc837507536b1480
	.dword 0xc1a32c1e6f139af7, 0x0b71697095fc77a8
	.dword 0xe1bcdb544007affb, 0xca21f6816b857c07
	.dword 0xd5631e92dcbd2198, 0xc4f1dbb3d679403b
	.dword 0xe1fae05808c72d5e, 0x45199300f9a93803

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
