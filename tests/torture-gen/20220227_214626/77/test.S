// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x15, x0, 1
	la x14, test_memory+1592
	addi x25, x0, 1110
	addi x27, x0, -741
	addi x19, x0, 1463
	sll x15, x15, 63
	la x9, test_memory+607
	la x29, test_memory+494
	lw x24, 350(x29)
	addi x22, x31, 0
	la x30, test_memory+1586
	lwu x13, -1068(x14)
	addi x20, x25, 497
	addi x31, x0, 361
	remw x2, x28, x23
	addi x21, x0, 1229
	addi x16, x0, -17
	subw x5, x31, x31
	mul x1, x21, x16
	addi x23, x0, -1
	addi x7, x0, 1724
	xor x23, x23, x15
	xor x12, x27, x27
	addi x13, x0, -291
	lb x8, 365(x9)
	la x27, test_memory-1097
	rem x5, x13, x13
	addi x4, x19, 1654
	sub x31, x2, x2
	addi x28, x0, -106
	xor x11, x4, x4
	blt x4, x19, crash_forward
	lhu x16, 1611(x27)
	la x8, test_memory-1286
	sllw x3, x15, x15
	addi x29, x0, -44
	addi x21, x0, -1133
	lhu x25, 1670(x8)
	divuw x24, x7, x29
	addi x5, x0, -973
	addi x12, x0, -723
	mulw x1, x5, x5
	addi x10, x22, 0
	sraw x17, x28, x28
	lhu x6, -1214(x30)
	addi x2, x0, 1844
	blt x22, x10, crash_forward
	slt x14, x12, x2
	and x26, x15, x23
	or x18, x26, x15
	addi x20, x0, 1281
	remu x13, x21, x20
	sllw x26, x17, x17
	addi x7, x0, 1
	la x18, test_memory-1672
	sll x7, x7, 63
	la x27, test_memory+1929
	addi x1, x0, -1373
	addi x28, x1, -1909
	la x14, test_memory+1329
	lw x19, 1944(x18)
	addi x17, x0, 231
	sw x25, -1053(x14)
	addi x20, x0, -1
	xor x20, x20, x7
	beq x1, x28, crash_forward
	and x24, x23, x20
	srliw x12, x20, 21
	la x26, test_memory+2060
	la x30, test_memory+1692
	xor x18, x12, x12
	addi x4, x0, 1
	divw x28, x25, x30
	or x31, x24, x7
	lbu x2, -1557(x26)
	sll x4, x4, 63
	lh x13, -1237(x27)
	sllw x23, x6, x29
	mulh x15, x17, x17
	la x21, test_memory+1632
	addi x27, x0, 369
	remw x3, x15, x15
	addi x9, x0, 0
	sraw x18, x1, x1
	lw x22, -1316(x21)
	rem x18, x19, x19
	addi x8, x0, 0
	addi x16, x0, 906
	addi x3, x0, 8
	blt x24, x31, crash_forward
	la x21, test_memory+617
	rem x22, x3, x3
	addi x2, x0, 352
	addi x5, x0, 0
	addi x11, x0, 0
	addi x10, x0, -1
	xor x10, x10, x4
	div x29, x16, x16
	addw x13, x27, x2
	lh x25, -680(x30)
	sd x3, -217(x21)
	addi x14, x0, 882
	addi x12, x0, 527
	bltu x5, x11, crash_forward
	addi x22, x0, 1
	addi x17, x15, 0
	la x18, test_memory+915
	addi x23, x17, 0
	addi x28, x0, -165
	and x6, x3, x10
	sll x15, x31, x21
	addi x21, x0, -1814
	or x19, x6, x4
	blt x17, x23, crash_backward
	la x24, test_memory+2731
	la x2, test_memory+463
	mulhu x25, x21, x21
	sll x11, x7, x7
	sll x22, x22, 63
	sw x27, 125(x2)
	srl x26, x12, x28
	addi x27, x0, 263
	srli x30, x9, 39
	ld x20, -1779(x24)
	addi x15, x0, 509
	sraw x1, x14, x14
	la x25, test_memory+714
	addi x23, x0, -781
	addi x9, x0, 1830
	addi x13, x0, 354
	sll x5, x27, x13
	sll x12, x1, x1
	mulh x28, x17, x13
	or x2, x15, x15
	addi x4, x19, -2024
	la x26, test_memory+2788
	addi x11, x0, -725
	la x24, test_memory-92
	xor x31, x11, x4
	addi x2, x0, -283
	la x30, test_memory-1605
	addi x8, x0, -28
	lh x7, 7(x18)
	addi x3, x0, -1
	la x1, test_memory+2313
	addi x19, x0, -967
	mulw x31, x19, x19
	la x14, test_memory-945
	sd x11, -1873(x1)
	sd x7, 220(x24)
	sw x21, 2005(x30)
	or x28, x2, x2
	lbu x17, -580(x25)
	ld x27, 1337(x14)
	sll x28, x0, x9
	la x31, test_memory+2953
	xor x10, x11, x8
	sllw x21, x23, x9
	remw x2, x26, x21
	lb x20, -1953(x26)
	xori x27, x27, 745
	xor x14, x3, x3
	addi x24, x0, -884
	addi x25, x0, 1527
	sd x3, -2017(x31)
	addi x26, x0, 1
	addi x17, x0, -602
	addi x7, x0, 1545
	srai x21, x11, 13
	mul x13, x18, x0
	srl x6, x21, x6
	xor x27, x8, x12
	blt x10, x10, crash_backward
	sll x26, x26, 63
	divw x18, x25, x7
	sub x28, x24, x17
	xor x3, x3, x22
	la x27, test_memory-92
	and x29, x13, x3
	la x25, test_memory+2530
	sltu x2, x22, x4
	addi x31, x0, 0
	mulw x9, x15, x15
	addi x12, x0, -1472
	la x15, test_memory-618
	addi x14, x23, 0
	or x16, x29, x22
	lh x13, 906(x27)
	addi x30, x30, 0
	addi x21, x0, 0
	addi x8, x14, 0
	lhu x28, -2004(x25)
	la x25, test_memory+728
	addi x1, x30, 0
	addi x2, x0, 313
	addi x18, x4, 0
	addi x24, x18, 0
	addi x9, x2, 1896
	addi x13, x0, -452
	mulhsu x7, x27, x13
	rem x28, x13, x13
	la x6, test_memory-168
	divuw x17, x31, x31
	remuw x14, x14, x15
	blt x30, x1, crash_backward
	lh x4, 830(x15)
	addi x11, x0, -1
	xor x11, x11, x26
	lhu x23, 582(x6)
	mulhu x5, x19, x12
	addi x8, x0, -713
	lwu x21, -348(x25)
	and x10, x30, x11
	addi x27, x0, 581
	beq x2, x9, crash_backward
	or x20, x28, x26
	xor x31, x8, x27
	addi x10, x0, -948
	la x25, test_memory+1971
	and x15, x10, x10
	addw x9, x10, x12
	la x31, test_memory+2072
	la x1, test_memory+2202
	la x6, test_memory+317
	addi x12, x11, -1539
	sd x9, -1754(x1)
	subw x18, x26, x26
	la x16, test_memory+2353
	addi x17, x0, 865
	la x2, test_memory+1167
	addw x11, x17, x17
	addi x10, x6, 0
	sd x7, -1635(x25)
	addi x26, x0, 1880
	sub x27, x22, x22
	lw x19, -163(x2)
	sw x21, 699(x6)
	mulw x20, x17, x17
	sllw x29, x8, x12
	sh x9, -1563(x16)
	addi x12, x0, -173
	sd x30, -1224(x31)
	addi x28, x0, -1646
	addi x23, x26, 1382
	blt x23, x26, crash_forward
	addi x20, x0, -1488
	addi x13, x0, -1553
	la x3, test_memory+1557
	addi x1, x12, -1348
	remu x30, x28, x28
	la x11, test_memory-44
	lh x8, -1283(x3)
	la x26, test_memory+670
	la x16, test_memory-1370
	sb x15, 92(x26)
	addi x21, x0, 0
	addi x19, x0, 1
	addi x24, x0, 1665
	sll x19, x19, 63
	la x25, test_memory-878
	la x9, test_memory+217
	divw x2, x20, x20
	addi x15, x10, 0
	sll x7, x13, x24
	addi x4, x0, -920
	addi x3, x0, -1565
	addi x17, x0, -1
	addi x5, x0, 0
	lw x31, 1738(x16)
	la x1, test_memory-900
	lb x6, 1688(x25)
	sd x17, 388(x11)
	blt x10, x15, crash_forward
	la x30, test_memory-199
	addi x22, x0, 979
	sll x14, x4, x22
	bne x21, x5, crash_backward
	sd x22, 1180(x1)
	xor x17, x17, x19
	lw x12, 1059(x30)
	sb x0, 154(x9)
	addi x28, x3, -200
	addi x23, x0, 0
	addi x29, x0, 0
	bltu x23, x29, crash_backward
	and x27, x28, x17
	or x18, x27, x19
	addi x26, x0, 1113
	addi x21, x0, 1
	addi x11, x0, 90
	sll x21, x21, 63
	addi x31, x0, 1283
	addi x30, x0, 1800
	la x20, test_memory-1364
	lwu x28, 1636(x20)
	addi x16, x0, -553
	addi x28, x0, -1684
	addi x24, x0, 1401
	add x3, x16, x16
	sra x1, x11, x24
	bgeu x27, x18, crash_forward
	addi x6, x0, -1092
	lui x12, 329093
	addi x7, x0, -834
	divu x19, x2, x2
	addi x2, x0, -1
	addi x25, x0, 793
	and x15, x31, x31
	divuw x4, x26, x30
	sraw x20, x28, x28
	divw x29, x25, x25
	divuw x9, x6, x6
	sllw x27, x9, x5
	addi x1, x0, 1
	la x13, test_memory-609
	addi x12, x0, -431
	addi x5, x0, 44
	sll x1, x1, 63
	lw x23, 1269(x13)
	or x10, x7, x7
	addi x3, x0, -1
	addi x14, x5, 1139
	addi x18, x12, -1554
	xor x3, x3, x1
	rem x16, x19, x19
	subw x15, x26, x26
	addi x13, x0, -490
	slt x10, x13, x13
	mulhsu x9, x12, x20
	addi x30, x0, 1
	la x20, test_memory+2212
	xor x2, x2, x21
	remuw x29, x5, x5
	addi x23, x0, -954
	bge x5, x14, crash_backward
	divuw x27, x13, x13
	addi x31, x23, -179
	addi x11, x0, 1777
	la x15, test_memory+80
	beq x23, x31, crash_backward
	and x8, x29, x2
	la x19, test_memory+1368
	la x4, test_memory-709
	sd x30, 168(x15)
	lhu x7, -1840(x20)
	la x16, test_memory+272
	addi x6, x11, 918
	lb x9, 41(x16)
	beq x11, x6, crash_backward
	sw x2, 713(x4)
	or x22, x22, x21
	and x24, x22, x3
	sll x30, x30, 63
	or x17, x9, x1
	lbu x25, -1365(x19)
	bltu x17, x24, crash_forward
	la x28, test_memory+1432
	remw x14, x7, x7
	addi x11, x0, -1584
	la x31, test_memory-841
	addi x10, x7, -1365
	add x29, x19, x19
	remw x23, x22, x22
	addi x13, x17, 0
	addi x20, x0, 1
	addi x18, x0, -1
	addi x17, x0, 1
	la x27, test_memory+1634
	addi x25, x13, 0
	sw x6, -800(x28)
	sw x11, 1853(x31)
	sltu x15, x11, x11
	sra x7, x5, x15
	la x16, test_memory+1803
	xor x18, x18, x30
	sll x20, x20, 63
	lb x3, -1186(x27)
	and x26, x0, x18
	sh x25, -1059(x16)
	addi x6, x0, -1
	sll x17, x17, 63
	addi x24, x0, -1
	xor x24, x24, x17
	and x14, x30, x24
	or x4, x4, x17
	or x12, x26, x30
	xor x6, x6, x20
	and x5, x25, x6
	or x9, x5, x20
	la x29, test_memory+517
	la x7, test_memory+187
	divu x21, x3, x5
	la x23, test_memory-1543
	addi x28, x0, 755
	addiw x12, x20, -1099
	lh x1, -207(x29)
	srli x3, x30, 24
	addi x2, x28, 1773
	addi x4, x0, 1
	la x26, test_memory+877
	la x17, test_memory+89
	lwu x15, 1567(x23)
	addi x13, x0, 1630
	blt x5, x9, crash_forward
	sll x4, x4, 63
	addi x27, x0, 1822
	lui x25, 26290
	la x22, test_memory+1097
	addi x31, x0, -1
	addi x30, x0, -76
	la x20, test_memory+1169
	addi x10, x13, 1086
	mul x8, x27, x30
	sb x11, -853(x26)
	addi x29, x0, 1
	xor x31, x31, x4
	ld x16, 69(x7)
	and x11, x9, x31
	lh x24, -965(x22)
	sll x29, x29, 63
	addi x14, x0, -1
	la x25, test_memory+1331
	lbu x18, 334(x17)
	or x19, x11, x4
	xor x14, x14, x29
	lbu x9, -1136(x20)
	addi x1, x0, 926
	addi x12, x0, 547
	and x3, x7, x14
	or x21, x3, x29
	sh x12, -1293(x25)
	bgeu x3, x21, crash_forward
	xor x28, x1, x12
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x21, 168(x1)
	sd x24, 192(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x5b22bd16167eb7a8
reg_x1_init:	.dword 0x0000000000000000
reg_x2_init:	.dword 0x4a6b2273e99a7f74
reg_x3_init:	.dword 0xf53525fe1dd2e9e1
reg_x4_init:	.dword 0x349e0c33c73ac6e2
reg_x5_init:	.dword 0xb114fc3457299558
reg_x6_init:	.dword 0xffffffffffffffff
reg_x7_init:	.dword 0xffffffffffffffff
reg_x8_init:	.dword 0xfaf3939747be3216
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0x6f8e3b1758cd55d4
reg_x11_init:	.dword 0x721bb1eed87f7232
reg_x12_init:	.dword 0xb5db9c64f1522503
reg_x13_init:	.dword 0x5110bc77237058ad
reg_x14_init:	.dword 0x05a12871be199e74
reg_x15_init:	.dword 0x595c5d6763fe0983
reg_x16_init:	.dword 0xab2dbb620bccc7c8
reg_x17_init:	.dword 0x97f8bdda305e53ae
reg_x18_init:	.dword 0xffffffffffffffff
reg_x19_init:	.dword 0xffffffff80000000
reg_x20_init:	.dword 0xffffffffffff8003
reg_x21_init:	.dword 0x7da5ea2039bca72a
reg_x22_init:	.dword 0x18fd36c0fb8bc170
reg_x23_init:	.dword 0x60b848050f877eee
reg_x24_init:	.dword 0xffffffffffffff87
reg_x25_init:	.dword 0xb4084f2f935b25e4
reg_x26_init:	.dword 0x3c965c1f1fbc13ce
reg_x27_init:	.dword 0xffffffff80000007
reg_x28_init:	.dword 0xae3c97ae53a8df74
reg_x29_init:	.dword 0x7e4a0e4c52346117
reg_x30_init:	.dword 0x9d4d5d46d8075785
reg_x31_init:	.dword 0x0fd7c605e5a311cb

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x60b5be6d2bc05e0a
reg_x1_output:	.dword 0x8b3883eea22e2e1b
reg_x2_output:	.dword 0x3b6d7f1c3b11115f
reg_x3_output:	.dword 0x05af9d912267aae5
reg_x4_output:	.dword 0xce6b16eed96461ee
reg_x5_output:	.dword 0x94ef4bbe16b08a67
reg_x6_output:	.dword 0x2f43c6f113a8bf0c
reg_x7_output:	.dword 0xa4813a66bb1f33d7
reg_x8_output:	.dword 0x12f9fbe4a6240bb6
reg_x9_output:	.dword 0x1c6317551ec53a90
reg_x10_output:	.dword 0xcbef4c551932c51e
reg_x11_output:	.dword 0x54b49059a7175235
reg_x12_output:	.dword 0xebafc3e993f48d66
reg_x13_output:	.dword 0xb28a80c80f9de11c
reg_x14_output:	.dword 0x70d60ffdd6f01eaa
reg_x15_output:	.dword 0x2bc302269031d4e8
reg_x16_output:	.dword 0xf52d616f58d4ea44
reg_x17_output:	.dword 0x453d5420c21f9d77
reg_x18_output:	.dword 0xad2f17b60520e84a
reg_x19_output:	.dword 0xfd93cfc0edc471ff
reg_x20_output:	.dword 0xb547893773d55b5b
reg_x21_output:	.dword 0x5da559dc2cd84473
reg_x22_output:	.dword 0x342e7cda72cd8c9b
reg_x23_output:	.dword 0xab1f08cf73d9072a
reg_x24_output:	.dword 0x295528d880f6c3fb
reg_x25_output:	.dword 0xff0df16a353228c2
reg_x26_output:	.dword 0x4c34cadb09d900bd
reg_x27_output:	.dword 0x068c4f2b25056a42
reg_x28_output:	.dword 0x7a662d4228d43637
reg_x29_output:	.dword 0x251c7bae4b28737e
reg_x30_output:	.dword 0xb81badc0e76e10d6
reg_x31_output:	.dword 0xf27769644c3cc9bf

// Memory Blocks
	.align 8
test_memory:
	.dword 0x6e1c992ff5488765, 0xf7bb9582c8fe0ca2
	.dword 0x22f9f0a2f319bc8f, 0xad44a53d2e3c9d40
	.dword 0x8821ebb78881f4a2, 0x8a432232feb9138f
	.dword 0x07f8cc2f9724a395, 0xacaf0a2bd4772607
	.dword 0x9572d6c03035d74c, 0x62a726014764e788
	.dword 0xe91485293cfd8219, 0x08fa5bdaed9d7f7a
	.dword 0x87fb458592e66986, 0x14b770a0845cc036
	.dword 0x68e25ae3f8c6bd51, 0x3a72ecab622b3fa4
	.dword 0x1e3cb317416c9ab7, 0xf4ba17bae120d624
	.dword 0x84b5c5cb5f58fff5, 0xd725402be595a7b1
	.dword 0xcff8d0d94b37f40b, 0x43eac16ad0781b43
	.dword 0xbdbf05dada4ce6c2, 0x11f77da67f006475
	.dword 0xde1a7d018ff68cf0, 0x40a8bec3c9e08368
	.dword 0x78fd0125edddbcfa, 0xf78eb293be99dee6
	.dword 0x3157091e6d970f9b, 0x335df6486c8fdcca
	.dword 0x3f1c7250ccb748e2, 0xc8a9e52417011c9e
	.dword 0xe841d08c95d6cd81, 0xe8689e7153873884
	.dword 0xce9e67164600a843, 0x5cdcf6b79c57305a
	.dword 0x12cc1f024acde3de, 0x0691c82c147ae319
	.dword 0x23e00ec292363ceb, 0x2bd556673cde3a7d
	.dword 0x1e6b6704fe2b7031, 0x58dab9589990ecea
	.dword 0xb3ddd8b9c3a4a929, 0x7692837c6147f98e
	.dword 0xe35fc8725313d4be, 0x71ab174c443842c2
	.dword 0x17cbe2eea796dc53, 0x0d3c5ff5c515eab5
	.dword 0x18d4e6f7ced30d0a, 0x04a9e14f0d9a564b
	.dword 0x50ddb86cb5892f43, 0x5981530741acfa42
	.dword 0x32d7109b18d51263, 0xf3cb3b1e27695696
	.dword 0x9cd75fd141f390d6, 0xa8a63b9638fec427
	.dword 0x5256b43286965056, 0x535d0769760cf898
	.dword 0x8d41b9cc8a7cc26c, 0x2bb232bd46ea6479
	.dword 0xfcb427ead47e2937, 0x981c52549b6fcfa7
	.dword 0xb45c2fa759a8a46b, 0xc7601e4ae2b6d7f2
	.dword 0xc58dbfc258d58a9c, 0xb99d8bfc2fef3601
	.dword 0xc425b1b6f05392bc, 0x98c01341a448ec72
	.dword 0xf2ca340cb24b91e2, 0x529192e8352fc545
	.dword 0x6d1705eb9b8cd14c, 0x06b28859f2f6c17a
	.dword 0x681957f2efba40a7, 0xafb18e9bc4d85ef7
	.dword 0xa3686647dda2088d, 0x53a7587cfe1ad8af
	.dword 0xd4651ff0731d414e, 0x4d5b9a0b7b75c501
	.dword 0x32fc6f5f596dd1f2, 0xe64a954901c8b65d
	.dword 0x30ecf8525decbb7e, 0x7b2a3e1f2608c22d
	.dword 0xb34a5edcbf3b5476, 0xeb092991044511f1
	.dword 0x1f056bbf294e38a3, 0xbc10bc32c700e2ac
	.dword 0xfde1a1fcd2d0f116, 0x83974bdc6b23967e
	.dword 0x96b619ad28cd986c, 0x00c628991da5bc92
	.dword 0x4360b4124273ff52, 0x74e2c0e5012c3339
	.dword 0xa5affce91a90154b, 0x098955167930c857
	.dword 0xbbf94d026ef799b0, 0x271aee194869fbfd
	.dword 0xb3560210943358f8, 0x13878b60c719c957
	.dword 0xb9dbdfc575287a39, 0xd6b8bc1c3e0599c8
	.dword 0xdbd1ee1a0fcaa0ef, 0x757017a77a57c653
	.dword 0x952468eac127e6fb, 0x08b0494407cd4b3c
	.dword 0x796f94c998abf2ed, 0xf5fea30a1f9891ee
	.dword 0x82228d133487ae85, 0xaf366c1c5d8c751f
	.dword 0xe0b85f3d9bff6176, 0x76865e1d30b0e331
	.dword 0xe41707757039346e, 0xefc405e2e294c2db
	.dword 0xa90922662d426052, 0x02c7fb69ffc6fe08
	.dword 0x17c0685923a18dce, 0x2641250a0e1ad6ff
	.dword 0x989c45842331290c, 0x769c79ec60f9ebc3
	.dword 0x0251239e5a64adc2, 0x9481f7b9b3488bbc
	.dword 0x704238b0cdc82f72, 0xb13ebf950f874396
	.dword 0xeaa8ef33a2b9a1ed, 0x287f8e4bb426c368
	.dword 0x60423b57aa4fa618, 0xbd3e03c8a9b18319
	.dword 0x43eb71a18e59def2, 0xe6f66dcdecc0c8ff

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
