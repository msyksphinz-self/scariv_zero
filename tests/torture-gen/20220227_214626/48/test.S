// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x5, x0, 1
	mul x22, x18, x22
	rem x20, x3, x3
	rem x26, x8, x3
	sllw x12, x17, x17
	slti x9, x22, 299
	la x31, test_memory-459
	sllw x11, x2, x13
	la x28, test_memory-399
	la x27, test_memory+1249
	mul x3, x5, x5
	addi x9, x0, 1022
	lhu x1, -1065(x27)
	sll x5, x5, 63
	addi x24, x13, 0
	addi x18, x0, 1
	ld x2, 551(x28)
	mulhsu x7, x11, x12
	addi x12, x0, 1
	la x6, test_memory+1526
	addi x22, x24, 0
	sd x7, -1190(x6)
	add x29, x9, x9
	addi x19, x0, -1
	lh x13, 1281(x31)
	sra x7, x7, x7
	addi x2, x0, -401
	divu x16, x23, x27
	addi x17, x0, -1793
	addi x21, x0, 529
	sll x12, x12, 63
	xor x19, x19, x5
	addi x26, x0, -1
	remuw x25, x17, x21
	addi x1, x0, -321
	la x9, test_memory+2526
	mulhu x15, x29, x29
	remw x3, x2, x2
	sraw x17, x15, x19
	la x21, test_memory-1240
	remu x13, x22, x11
	and x8, x24, x19
	addi x27, x0, 1276
	or x23, x8, x5
	la x2, test_memory+2220
	la x7, test_memory-993
	addi x29, x27, 1796
	blt x24, x22, crash_backward
	addi x25, x0, 1571
	remu x15, x25, x25
	xor x26, x26, x12
	addi x20, x0, 936
	and x14, x28, x26
	la x17, test_memory-765
	sh x10, 1355(x17)
	addi x5, x0, -884
	and x19, x5, x5
	addi x13, x0, 453
	addi x8, x0, 1682
	div x31, x3, x3
	lhu x28, -1826(x9)
	sllw x6, x1, x20
	lbu x3, -1634(x2)
	la x31, test_memory+704
	lh x29, -674(x31)
	or x11, x14, x12
	beq x14, x11, crash_forward
	la x24, test_memory+2289
	lhu x16, 1330(x21)
	addi x6, x18, 0
	addi x11, x0, 1583
	sb x4, 1082(x7)
	la x2, test_memory+1927
	addi x9, x10, 0
	sltiu x12, x19, 1726
	addi x29, x9, 0
	sraw x19, x11, x11
	la x22, test_memory+2450
	la x5, test_memory+526
	lui x16, 730249
	sll x18, x18, 63
	la x15, test_memory+3029
	addi x26, x0, 1
	sll x26, x26, 63
	addi x20, x0, -1
	sub x25, x13, x8
	addi x4, x0, -1
	addi x19, x0, 1
	or x31, x9, x9
	sw x4, -2013(x15)
	xor x20, x20, x26
	lh x27, 492(x5)
	and x1, x17, x20
	sb x28, -1307(x2)
	la x21, test_memory-1851
	sd x27, 2035(x21)
	sll x19, x19, 63
	addi x14, x0, 1571
	sllw x28, x14, x14
	xor x4, x4, x18
	mulhu x16, x10, x10
	and x30, x1, x4
	or x10, x30, x18
	or x17, x1, x26
	addi x7, x0, -1
	bgeu x30, x10, crash_forward
	sb x4, -1966(x22)
	xor x7, x7, x19
	and x11, x11, x7
	lb x23, -1806(x24)
	addi x3, x6, 0
	or x12, x23, x19
	bge x12, x11, crash_backward
	srli x16, x14, 61
	addi x28, x0, 1929
	addi x21, x0, 873
	add x7, x28, x28
	la x18, test_memory+1326
	la x6, test_memory+1872
	la x22, test_memory+2207
	slli x4, x29, 32
	sd x7, -1070(x18)
	la x27, test_memory+535
	addi x11, x0, -1268
	sltu x20, x11, x11
	addi x31, x0, 1266
	addi x30, x21, 138
	la x26, test_memory+664
	la x19, test_memory+1464
	la x23, test_memory-461
	beq x21, x30, crash_backward
	la x13, test_memory-358
	ld x15, -1080(x6)
	addi x3, x0, -2013
	lhu x10, -1(x27)
	addi x12, x31, 1179
	sd x1, 701(x23)
	sd x14, 950(x13)
	lbu x1, -1714(x22)
	or x5, x1, x31
	addi x17, x3, -904
	la x23, test_memory-125
	la x7, test_memory+1974
	bltu x3, x17, crash_forward
	slli x21, x29, 20
	la x20, test_memory+2160
	lh x8, -872(x19)
	addi x2, x0, 1219
	mul x1, x25, x29
	addi x29, x0, 461
	sw x11, -136(x26)
	la x18, test_memory+55
	la x27, test_memory+2152
	addi x6, x0, 1
	addi x17, x0, 0
	addi x21, x0, -1413
	lbu x13, -1411(x27)
	addi x1, x0, 307
	lh x30, 839(x23)
	lwu x15, 25(x18)
	la x22, test_memory-1255
	la x31, test_memory+2192
	ori x5, x21, -433
	lwu x8, 1611(x22)
	addw x19, x23, x9
	addi x9, x0, 2024
	addi x12, x4, 1143
	remw x14, x2, x29
	sll x6, x6, 63
	addi x24, x0, 607
	lh x16, -1408(x20)
	lh x10, -1710(x31)
	addi x3, x0, 0
	subw x26, x21, x1
	addi x11, x0, -1
	sd x30, -1358(x7)
	xor x11, x11, x6
	and x4, x11, x11
	blt x17, x3, crash_forward
	or x28, x4, x6
	bge x28, x4, crash_forward
	subw x25, x9, x24
	addi x1, x0, -1636
	la x18, test_memory+741
	addi x20, x0, -894
	addi x28, x0, 25
	addi x2, x0, 1088
	addi x29, x0, 1020
	addw x25, x1, x1
	divuw x17, x8, x18
	la x12, test_memory-520
	addi x11, x0, -28
	la x19, test_memory-1093
	divw x3, x2, x11
	addi x10, x0, -2030
	sh x10, 1535(x19)
	lhu x6, -297(x18)
	la x7, test_memory-796
	addi x15, x0, -1894
	and x31, x20, x20
	addi x17, x0, -391
	la x23, test_memory-1056
	la x22, test_memory+1195
	mulw x13, x10, x10
	div x18, x9, x20
	la x9, test_memory+1547
	sub x8, x15, x15
	andi x24, x6, 951
	remw x19, x18, x5
	la x31, test_memory-1184
	sllw x1, x17, x17
	mulh x13, x8, x13
	remuw x27, x28, x29
	addi x5, x0, 1
	lb x8, 1315(x31)
	lhu x21, 606(x12)
	mul x11, x0, x0
	la x6, test_memory+2549
	la x3, test_memory+1804
	sb x2, -1801(x3)
	sw x2, 880(x7)
	la x18, test_memory+1514
	la x19, test_memory+594
	lw x16, -215(x22)
	addw x2, x5, x5
	addi x20, x0, 1443
	la x11, test_memory+570
	addi x2, x0, 1
	sw x29, -567(x9)
	lhu x15, 300(x19)
	addi x31, x0, 16
	addi x16, x0, 142
	divw x7, x31, x31
	sb x5, 281(x11)
	mulw x1, x3, x3
	sll x2, x2, 63
	sw x13, -1074(x18)
	addi x24, x20, 2030
	addi x13, x0, 1038
	sd x30, 1120(x23)
	la x4, test_memory-506
	beq x20, x24, crash_forward
	addi x28, x0, -1
	lb x14, 1368(x4)
	addi x3, x0, 205
	la x21, test_memory+619
	sub x12, x3, x3
	xor x28, x28, x2
	sd x29, 109(x21)
	and x27, x1, x28
	addi x9, x0, -183
	divuw x8, x30, x31
	mulh x22, x16, x9
	or x29, x27, x2
	sll x5, x5, 63
	addi x25, x0, -1
	mulhsu x17, x13, x13
	la x4, test_memory-876
	subw x9, x0, x0
	or x7, x12, x12
	la x19, test_memory-192
	subw x14, x29, x29
	la x31, test_memory+1724
	lh x10, -1873(x6)
	la x18, test_memory-682
	sh x20, -1396(x31)
	la x13, test_memory+1456
	xor x25, x25, x5
	sb x24, 1057(x19)
	la x22, test_memory+361
	la x15, test_memory+852
	and x30, x8, x25
	sd x10, 1386(x18)
	addi x16, x0, 1
	addi x14, x0, 1473
	srl x1, x12, x25
	addi x20, x0, 1744
	or x26, x30, x5
	la x19, test_memory+1716
	sh x26, -347(x22)
	sll x16, x16, 63
	addi x28, x0, 1
	lwu x8, -1384(x19)
	blt x30, x26, crash_forward
	sll x28, x28, 63
	ld x3, 1204(x4)
	srl x11, x20, x20
	addi x18, x14, 248
	la x1, test_memory+817
	srl x9, x23, x23
	bge x14, x18, crash_forward
	addi x23, x0, -1
	sd x28, -105(x1)
	lh x17, -1444(x13)
	addi x1, x0, -46
	addi x8, x0, 1266
	divw x30, x1, x1
	divu x25, x2, x2
	subw x14, x18, x12
	slli x26, x0, 58
	addi x6, x0, -1
	la x18, test_memory-642
	slli x12, x9, 45
	lb x9, 1396(x18)
	la x30, test_memory+1532
	addi x14, x0, -27
	la x7, test_memory-741
	sw x27, -696(x15)
	addi x17, x0, -860
	xori x20, x31, 1068
	lwu x25, -612(x30)
	la x1, test_memory+402
	remw x31, x20, x12
	la x19, test_memory+296
	lw x12, -110(x1)
	la x2, test_memory-116
	addi x13, x0, 766
	la x5, test_memory-816
	xor x23, x23, x16
	sw x27, -44(x19)
	xor x11, x8, x8
	mulh x22, x17, x13
	la x1, test_memory+1156
	xor x6, x6, x28
	remw x11, x4, x22
	addi x4, x0, 852
	sh x25, -536(x1)
	mulhsu x3, x4, x4
	and x27, x26, x6
	addi x31, x0, 0
	and x24, x25, x23
	remu x26, x14, x12
	addi x18, x0, -868
	rem x9, x14, x18
	sllw x20, x3, x3
	addi x17, x0, 821
	addi x22, x0, -285
	sb x0, 249(x2)
	sraw x26, x7, x7
	sw x28, 1056(x5)
	addi x15, x0, 0
	or x29, x27, x28
	la x11, test_memory+1463
	la x8, test_memory-767
	lw x19, 1183(x8)
	sub x14, x0, x11
	addi x12, x0, -1887
	addi x19, x0, 1908
	addi x3, x0, -1480
	bgeu x27, x29, crash_backward
	slt x13, x28, x28
	addi x25, x17, 29
	sraw x8, x19, x19
	lw x10, 869(x7)
	addi x1, x3, -1745
	addi x26, x0, 1
	ld x4, -871(x11)
	slt x30, x22, x12
	sll x26, x26, 63
	addi x5, x0, -1
	la x14, test_memory-763
	or x21, x24, x16
	blt x24, x21, crash_backward
	lwu x9, 1747(x14)
	xor x5, x5, x26
	and x18, x3, x5
	or x20, x18, x26
	div x5, x26, x20
	addi x12, x0, 320
	addi x29, x0, -1640
	addi x20, x0, 930
	mulhu x10, x29, x29
	la x30, test_memory-1017
	addi x13, x0, 0
	slliw x2, x19, 1
	divw x19, x4, x4
	addi x14, x0, 1
	sll x14, x14, 63
	addi x21, x0, 1
	sub x23, x12, x20
	la x7, test_memory+247
	addi x3, x0, -1
	xor x3, x3, x14
	la x2, test_memory-1519
	addi x31, x0, 428
	addi x4, x0, 1
	mulhsu x18, x31, x31
	remuw x25, x31, x31
	rem x10, x19, x27
	lwu x9, 1767(x2)
	sll x4, x4, 63
	sll x21, x21, 63
	mulhsu x29, x12, x13
	and x24, x29, x3
	la x5, test_memory+1585
	addi x26, x0, -1
	addi x6, x0, 0
	la x17, test_memory+577
	sh x31, -1361(x5)
	la x20, test_memory-848
	addi x22, x0, -1
	ld x11, 1857(x30)
	xor x22, x22, x4
	lb x28, 320(x7)
	xor x26, x26, x21
	and x8, x19, x26
	and x15, x15, x22
	or x16, x9, x21
	sb x12, 269(x17)
	addi x25, x0, -458
	la x6, test_memory-1056
	lbu x23, 1685(x20)
	or x1, x19, x14
	la x13, test_memory-133
	or x27, x19, x4
	lwu x12, 1092(x6)
	addi x29, x0, 1
	addi x17, x0, 746
	blt x24, x1, crash_backward
	addi x20, x0, 0
	addi x23, x0, 0
	addi x2, x0, 1554
	sll x29, x29, 63
	addi x1, x0, 1526
	addi x14, x0, 1324
	la x15, test_memory+1503
	addi x28, x0, -1665
	addi x4, x0, -729
	mulh x31, x2, x28
	lbu x10, 689(x13)
	addi x18, x0, -1
	lh x22, -1361(x15)
	xor x18, x18, x29
	xor x12, x1, x4
	addi x11, x0, 1280
	addi x19, x0, -1187
	addi x6, x0, -891
	blt x20, x23, crash_backward
	la x26, test_memory+2316
	la x8, test_memory+929
	la x2, test_memory-456
	ld x3, -1892(x26)
	addw x30, x17, x11
	lbu x15, 1383(x2)
	and x5, x21, x18
	divw x4, x3, x3
	or x7, x5, x29
	addi x27, x6, -1807
	addi x24, x14, 763
	subw x9, x25, x19
	blt x6, x27, crash_forward
	la x22, test_memory-1009
	ld x21, -657(x8)
	la x10, test_memory+747
	sw x14, 61(x10)
	lh x23, 1817(x22)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x3fee61b01aee4d8e
reg_x1_init:	.dword 0x0000000000000000
reg_x2_init:	.dword 0xf16619645aad533a
reg_x3_init:	.dword 0x18dc9fdbe7b65646
reg_x4_init:	.dword 0xffffffffffffffff
reg_x5_init:	.dword 0xe2187b2933c4635d
reg_x6_init:	.dword 0x0000000000000009
reg_x7_init:	.dword 0x2fdd843606240ddc
reg_x8_init:	.dword 0x0000000000000000
reg_x9_init:	.dword 0x0000000000000002
reg_x10_init:	.dword 0x8c127cd19df91b34
reg_x11_init:	.dword 0xf408030e48471017
reg_x12_init:	.dword 0xffffffff80000004
reg_x13_init:	.dword 0xffffffff80000001
reg_x14_init:	.dword 0x43767accdf7a9c02
reg_x15_init:	.dword 0xffffffffffff8001
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0xffffffffffff8009
reg_x18_init:	.dword 0xffffffffffff8005
reg_x19_init:	.dword 0x8429dbf975cb4962
reg_x20_init:	.dword 0x76f39726020f8a40
reg_x21_init:	.dword 0x03b367cf91bea914
reg_x22_init:	.dword 0x0000000000000000
reg_x23_init:	.dword 0x9999ab1f1fc33ded
reg_x24_init:	.dword 0x7d0716559d0c3433
reg_x25_init:	.dword 0xffffffffffff8000
reg_x26_init:	.dword 0xffffffffffffff80
reg_x27_init:	.dword 0x21c83f2e966d5a4d
reg_x28_init:	.dword 0xffffffffffffff85
reg_x29_init:	.dword 0xeacc3568bf42f25b
reg_x30_init:	.dword 0x452578948ce14344
reg_x31_init:	.dword 0xebd8fea72be1734a

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x82ea77e0d32c738c
reg_x1_output:	.dword 0x133642267f447a87
reg_x2_output:	.dword 0xb53cfb01c46dcd6b
reg_x3_output:	.dword 0xc2b6dc33f8ad9c11
reg_x4_output:	.dword 0x00c918c9b36030d3
reg_x5_output:	.dword 0x5f8184b681603942
reg_x6_output:	.dword 0x707691945926c082
reg_x7_output:	.dword 0xe4012c9224bc7856
reg_x8_output:	.dword 0xeac08a2190770918
reg_x9_output:	.dword 0x101905e8e98ace3e
reg_x10_output:	.dword 0x14d981e659d9f40e
reg_x11_output:	.dword 0x24032e06c59d2cb5
reg_x12_output:	.dword 0xb021e97d6c1475e5
reg_x13_output:	.dword 0x19559180d30c7d94
reg_x14_output:	.dword 0x0b931d7ac0b06ba2
reg_x15_output:	.dword 0x2f2e6e9be881ff65
reg_x16_output:	.dword 0x7498c96caf315b79
reg_x17_output:	.dword 0xa2bc19eaa4e15737
reg_x18_output:	.dword 0x41eef71b1a080cc7
reg_x19_output:	.dword 0x5a69e93beea16bb0
reg_x20_output:	.dword 0x2fbb4e0d5a132b45
reg_x21_output:	.dword 0x4a3668b5556f5d68
reg_x22_output:	.dword 0x227c474fd7aa697a
reg_x23_output:	.dword 0xf9553e38c2983074
reg_x24_output:	.dword 0xded159792e14d671
reg_x25_output:	.dword 0x06815f0f576afb40
reg_x26_output:	.dword 0xf2cb60e9d7225aac
reg_x27_output:	.dword 0xe78a7bc5398eaea1
reg_x28_output:	.dword 0x92a4c8536bab9058
reg_x29_output:	.dword 0xa3f2c651a963cb29
reg_x30_output:	.dword 0xeab5357ab23a6ac1
reg_x31_output:	.dword 0x90207679f73b97bd

// Memory Blocks
	.align 8
test_memory:
	.dword 0xcb6cbe3fe2516107, 0x58f8b07676b3ad65
	.dword 0x465ee9db87ee1012, 0x24efb1d3351dec63
	.dword 0x052602695b3f87c2, 0x79f4689a15ca2e86
	.dword 0xc86b7aa5ab57b76b, 0xa55bd8afbe884abf
	.dword 0x8eea6bfadb22ad80, 0xe652f37ef50e3df4
	.dword 0x9e0d70ba0d659e8d, 0xcaa3c5d64c578d14
	.dword 0xc8195ea6d232e76a, 0x6305200d34d0346b
	.dword 0x5aeaa5ba455f7ead, 0xedfa1c6d2c6eb836
	.dword 0xa663572215598960, 0xb8b927ce42062a7a
	.dword 0xcf04188cd38706f3, 0x82e8707fca523a10
	.dword 0xf80a87a6664ec874, 0x1677df6dc2cc9f04
	.dword 0xcd13d1de985d26fc, 0xcebeff803f7c7820
	.dword 0x2dea847063d92d6c, 0xeb8777408ae56dc3
	.dword 0x9412d89d82562959, 0x1c12f8c18b45adf6
	.dword 0x9919003ff698d744, 0x25b5cbbd1baf15c0
	.dword 0x72d9367e23069e0e, 0xc78d55fc73791bb9
	.dword 0xf03198dbb2088daa, 0x836c45fb684e4fdc
	.dword 0x690a0c7634131514, 0x298c43cc57f184a1
	.dword 0xa09eb38d2c9ea381, 0x732f4c3a3403f54b
	.dword 0xfcbdb741136ca8d7, 0x8e591a3174d6fd7e
	.dword 0xe87169a00537a95e, 0xcc6b425d65e93614
	.dword 0x389c03dde5a458b8, 0x24f4e51028580b30
	.dword 0xf59a84e62734f00e, 0x87b11a681a8c1f92
	.dword 0xca5874115c5f338c, 0x0abd7cafd1f8112c
	.dword 0x4f968c33e1f8db0e, 0x7ec47506112672f6
	.dword 0x85c292e01635521b, 0x606d2e3dcacd0ffe
	.dword 0xa0dedfe393ab0311, 0x271d52064f68cbc2
	.dword 0x24dc59162c85a1a2, 0xa336f449c746b3c1
	.dword 0x8db1e651fa6e287e, 0x2bbf50d97c14164f
	.dword 0xf9a8a1c2cb087e51, 0x5b013f47ac58b2a9
	.dword 0xa6044860ba71f5f0, 0xc58881167ddb5648
	.dword 0x6aa3aeb89c2b1dce, 0x8d014e1083227b79
	.dword 0xa8ad3df44a8a92b4, 0xb359c2f76147bd2d
	.dword 0x7f17bd116c7dc9b1, 0x4839165ebf6e340d
	.dword 0x3e1fea744438054e, 0xbdbab7d9659910d1
	.dword 0x74bfa9a4a6beea06, 0x0f99bd547ea107d2
	.dword 0x0943c950074765f4, 0xc3db42c055dc61dd
	.dword 0x5469a593314cdfce, 0xdbcc9ff3bdf6c649
	.dword 0x6d3e2a78bc77e111, 0x6a1498d000b3124b
	.dword 0xbf8bfabfc508af7d, 0xece4eba5c822d188
	.dword 0xaf3ebee205cd89c4, 0xa44be1d4b6842beb
	.dword 0xbcfde0520cf37b7d, 0xaa7bc6b743b05cb8
	.dword 0x2ba13506167bfc5e, 0x80d868bc331206e1
	.dword 0x1f465f34bd10ceaa, 0x5ef908d65cbbfa98
	.dword 0x2df5e5617f92d0e8, 0xcacf5c183cae4025
	.dword 0x3b3346985657b6d5, 0xb10a83997de07bf8
	.dword 0x9bc38ef5b9d5dd9b, 0x54d71e9d90860001
	.dword 0x09aa306d7cbcaf41, 0x5c8bdaf6ed711e3f
	.dword 0x0a1423c8586b4965, 0xffe427a968c09097
	.dword 0x7be595eb9b9e5b29, 0xd260edcd6d5b09e6
	.dword 0x061ea560db496e6b, 0xdb8173b7066a4459
	.dword 0xbd8ff410141f1038, 0x1504ce58ad4820fb
	.dword 0x51a0114e4b8e8c81, 0x0f8684e92e65ac8f
	.dword 0x5c6f00185835310f, 0x5dcf4ac1f7dd1d9f
	.dword 0x93b55da0272c4bb4, 0x995cf38775dd1fd4
	.dword 0xd190ec08247c57c2, 0xd533058e052d0088
	.dword 0x8748856ba4910ec1, 0x49378e798fee9099
	.dword 0xb42dbb258211505b, 0xee761e2945bbcf80
	.dword 0x0062a54c0239159b, 0xd5dd0bd08b8bb3a1
	.dword 0xf2aea67d5902e356, 0xc5a769654aaaa3e4
	.dword 0x39f527dd69516fe9, 0x4fe8493c15c87683
	.dword 0xca8d915d23217024, 0x34d239f428e70925
	.dword 0xbdec023ee5d6bf85, 0xb7a01c946211c62c
	.dword 0xdbfe8dd8be3757a8, 0x33b2b8efd677ab4b

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
