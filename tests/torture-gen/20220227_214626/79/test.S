// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	and x28, x1, x1
	addi x18, x0, -1882
	addi x2, x0, 1
	la x21, test_memory+990
	sra x1, x18, x18
	addi x15, x0, -1244
	sll x2, x2, 63
	la x13, test_memory+2757
	addi x11, x0, 561
	addi x12, x0, -1
	lw x6, -1901(x13)
	srlw x29, x11, x11
	bltu x0, x0, crash_backward
	addi x19, x0, 1398
	addi x17, x0, 1
	ori x30, x22, 1689
	addi x1, x0, 1
	srl x25, x15, x19
	addi x3, x0, -1006
	xor x12, x12, x2
	rem x6, x26, x26
	ld x31, -182(x21)
	addi x7, x3, -145
	sll x17, x17, 63
	addi x20, x13, 0
	addi x21, x0, 758
	addi x4, x0, 2004
	addi x29, x0, 1
	addi x6, x21, 1450
	sraw x15, x7, x19
	and x16, x1, x12
	addi x8, x0, -1
	sll x1, x1, 63
	bge x21, x6, crash_backward
	addi x28, x0, -1
	xor x8, x8, x17
	and x10, x2, x8
	addi x23, x20, 0
	sll x29, x29, 63
	or x22, x26, x2
	sraw x13, x4, x4
	xor x28, x28, x1
	addi x26, x0, 1
	addi x30, x0, -1
	and x24, x20, x28
	or x18, x24, x1
	la x3, test_memory+167
	la x4, test_memory-1157
	sd x11, 1309(x4)
	sll x26, x26, 63
	addi x13, x0, 1042
	addi x18, x0, 241
	addi x5, x0, -1
	la x23, test_memory-1002
	xor x5, x5, x26
	lh x12, 677(x3)
	addi x22, x0, 225
	or x14, x29, x17
	addi x31, x0, -1030
	srl x12, x28, x0
	addi x21, x22, 373
	and x9, x6, x5
	mulw x6, x13, x13
	xor x30, x30, x29
	addi x11, x31, -933
	slli x24, x5, 0
	addi x28, x0, 752
	and x25, x8, x30
	la x3, test_memory-12
	addi x16, x0, 1
	or x19, x12, x29
	addi x14, x0, -757
	bge x19, x25, crash_backward
	bltu x21, x22, crash_forward
	addi x30, x0, 1454
	sub x22, x19, x17
	lbu x20, 1008(x23)
	or x27, x9, x26
	addi x17, x0, 1
	sb x31, 311(x3)
	bgeu x9, x27, crash_backward
	sll x17, x17, 63
	addi x8, x0, -1
	sll x16, x16, 63
	blt x31, x11, crash_backward
	la x24, test_memory+1058
	la x11, test_memory+862
	mulw x4, x18, x28
	addi x15, x0, -1
	xor x8, x8, x17
	addi x26, x0, -1249
	addi x10, x0, 1774
	divu x27, x1, x3
	divu x12, x26, x26
	mulhu x5, x26, x26
	sraw x13, x14, x10
	addi x31, x0, 1218
	divu x4, x31, x21
	lb x23, -257(x11)
	addi x28, x0, -1495
	sd x0, -258(x24)
	la x9, test_memory+1497
	addi x18, x0, 1207
	lhu x22, -621(x9)
	la x20, test_memory+1127
	lb x19, -1005(x20)
	addi x25, x0, -1345
	and x1, x8, x8
	or x6, x1, x17
	mul x26, x21, x21
	xor x15, x15, x16
	and x7, x1, x15
	or x2, x14, x16
	la x13, test_memory+2787
	blt x7, x2, crash_forward
	srl x29, x30, x25
	la x26, test_memory+1359
	lhu x22, -1121(x26)
	la x11, test_memory+2397
	addi x8, x0, -726
	lw x4, -1505(x11)
	mulhsu x1, x20, x20
	addi x21, x0, 1551
	div x27, x18, x18
	addi x19, x8, -202
	remw x26, x3, x7
	sraw x3, x31, x21
	la x30, test_memory+797
	addi x12, x0, -1921
	la x9, test_memory-847
	addi x7, x0, 1
	mul x10, x28, x12
	addi x23, x21, 0
	addi x6, x23, 0
	la x5, test_memory+1419
	bltu x23, x6, crash_backward
	sll x7, x7, 63
	sw x14, 1691(x9)
	addi x25, x0, -1800
	addi x15, x0, -1
	xor x15, x15, x7
	bge x19, x8, crash_forward
	lbu x14, -730(x5)
	lbu x20, -1979(x13)
	and x16, x2, x15
	sw x6, -177(x30)
	or x29, x5, x7
	sraw x24, x27, x12
	and x17, x1, x1
	slt x6, x14, x22
	addi x14, x0, -1482
	la x23, test_memory+1120
	remu x5, x22, x22
	sllw x19, x5, x5
	addi x21, x0, 0
	addi x2, x0, -1383
	addi x12, x0, -870
	addi x8, x0, 1
	mulhsu x27, x25, x2
	sll x8, x8, 63
	addi x4, x0, 1
	addi x13, x0, 0
	addi x31, x0, 0
	addi x26, x0, 562
	addi x20, x0, -1
	lhu x6, -620(x23)
	addi x28, x0, -728
	sll x4, x4, 63
	addw x30, x12, x28
	srlw x9, x26, x26
	addi x22, x0, -1
	addi x24, x0, 0
	bltu x21, x13, crash_forward
	bltu x31, x24, crash_forward
	srl x10, x20, x2
	xor x22, x22, x4
	and x11, x1, x22
	or x18, x11, x4
	xor x20, x20, x8
	and x17, x13, x20
	addi x1, x14, -1181
	or x3, x17, x8
	bltu x3, x17, crash_backward
	blt x11, x18, crash_forward
	la x23, test_memory-808
	divw x24, x2, x16
	and x21, x15, x23
	la x22, test_memory-381
	sb x13, 1378(x22)
	slt x10, x26, x27
	lh x4, 1234(x23)
	andi x1, x9, -1166
	la x14, test_memory+1414
	sb x15, -749(x14)
	la x7, test_memory-9
	la x3, test_memory+583
	and x13, x28, x28
	addi x27, x0, 473
	addi x8, x0, 10
	add x29, x8, x8
	lb x19, 266(x3)
	addi x21, x0, 617
	sraw x13, x23, x23
	addi x11, x0, 0
	remuw x19, x10, x16
	addi x29, x0, 1
	addw x8, x27, x27
	divuw x28, x8, x8
	addi x30, x0, 1
	addi x2, x0, 0
	sll x29, x29, 63
	addi x3, x0, -1
	sd x12, 617(x7)
	addi x24, x0, 980
	la x1, test_memory+2496
	addi x26, x0, 1524
	addi x22, x0, 1151
	la x5, test_memory+1387
	blt x11, x2, crash_backward
	la x31, test_memory+484
	xor x3, x3, x29
	or x8, x7, x7
	bne x25, x25, crash_backward
	la x9, test_memory+1384
	addi x10, x0, -462
	and x23, x15, x3
	la x20, test_memory-1233
	addi x2, x0, -63
	sll x30, x30, 63
	sw x15, -588(x9)
	ld x6, 308(x31)
	addi x8, x0, 549
	la x28, test_memory+1523
	sw x2, -1043(x28)
	mulh x16, x27, x24
	addi x19, x0, -1276
	addw x14, x22, x10
	or x4, x4, x29
	la x10, test_memory-594
	addi x15, x0, -1
	sra x7, x19, x19
	remw x17, x21, x26
	la x27, test_memory+1592
	lw x14, -1304(x27)
	sw x1, 2045(x20)
	xor x15, x15, x30
	add x11, x2, x8
	sltiu x6, x19, 758
	bltu x4, x23, crash_backward
	addi x6, x0, 1180
	addi x16, x0, -205
	addi x3, x0, -1017
	addi x29, x0, 1247
	and x25, x25, x15
	addi x11, x29, 1585
	srl x22, x1, x11
	la x23, test_memory+224
	or x12, x25, x30
	addi x14, x0, -1939
	srlw x27, x14, x14
	lwu x13, -2016(x1)
	mulhsu x24, x16, x16
	lbu x18, -575(x5)
	beq x29, x11, crash_forward
	la x31, test_memory-1162
	lw x9, 1162(x31)
	bltu x12, x25, crash_forward
	sw x13, 818(x10)
	divu x26, x15, x15
	sra x4, x3, x3
	addi x19, x0, 668
	la x21, test_memory+767
	la x31, test_memory-904
	la x12, test_memory-650
	addi x11, x0, -1332
	lw x2, -703(x21)
	la x26, test_memory-1390
	subw x16, x7, x31
	addi x17, x0, -1196
	addi x28, x11, -1620
	xor x7, x19, x17
	addi x4, x0, 1475
	addi x3, x0, 0
	sh x6, 916(x12)
	addi x29, x0, 146
	addi x30, x0, 506
	sh x0, 176(x23)
	addi x8, x6, 1317
	la x25, test_memory-403
	addi x1, x0, 0
	remu x27, x30, x0
	addi x24, x0, 167
	lb x15, 1996(x26)
	sltu x13, x29, x30
	addi x14, x0, 0
	lhu x20, 775(x25)
	addi x9, x0, 0
	addi x13, x0, -487
	mulh x5, x4, x4
	divuw x29, x5, x5
	blt x11, x28, crash_backward
	mulhsu x10, x24, x24
	addi x17, x0, 1
	lbu x18, 1027(x31)
	addi x15, x0, 1255
	addi x7, x0, 1
	la x16, test_memory+1734
	la x22, test_memory+96
	blt x8, x6, crash_backward
	sd x24, 8(x22)
	sra x3, x6, x6
	sll x7, x7, 63
	addi x19, x0, -1
	la x5, test_memory-733
	lb x25, -1475(x16)
	bne x23, x23, crash_forward
	la x28, test_memory+2267
	sh x14, -1797(x28)
	xor x19, x19, x7
	and x12, x26, x19
	lhu x8, 1483(x5)
	addi x23, x0, -709
	mulhsu x20, x13, x15
	addi x9, x0, 1774
	addi x1, x0, -668
	sll x17, x17, 63
	addi x15, x0, 1632
	sll x25, x15, x15
	or x21, x12, x7
	remu x31, x9, x9
	addi x28, x0, 736
	addi x26, x0, -1
	divw x5, x28, x28
	addi x11, x0, -1828
	addi x22, x0, 1636
	mulw x20, x20, x20
	xor x26, x26, x17
	addi x20, x0, 1559
	addi x9, x0, 1538
	addi x27, x23, -795
	blt x23, x27, crash_forward
	addi x15, x0, 13
	addi x14, x1, -501
	srl x31, x9, x15
	sra x29, x11, x22
	addi x28, x20, 705
	and x2, x18, x26
	la x23, test_memory-784
	addi x24, x0, 1161
	or x30, x1, x17
	sw x11, 1168(x23)
	la x29, test_memory+399
	sltu x11, x2, x11
	bltu x21, x12, crash_forward
	lb x27, 149(x29)
	addi x3, x0, -1868
	addi x31, x0, 1
	addi x17, x0, 1
	addi x18, x0, 708
	addi x16, x9, 0
	addi x12, x0, 0
	sll x31, x31, 63
	addi x29, x0, 1159
	addi x28, x0, -1097
	addi x10, x24, 109
	la x25, test_memory+1908
	srl x19, x29, x28
	addi x14, x0, 0
	addi x6, x0, -1766
	rem x4, x18, x6
	addi x13, x3, -85
	addi x9, x0, -1
	xor x9, x9, x31
	beq x3, x13, crash_backward
	la x28, test_memory+342
	bne x12, x14, crash_backward
	and x15, x12, x9
	addi x8, x16, 0
	la x11, test_memory+695
	blt x16, x8, crash_forward
	la x24, test_memory+1425
	addi x6, x0, 2011
	sw x22, -1133(x24)
	lwu x23, -475(x11)
	sll x17, x17, 63
	divuw x1, x29, x29
	or x22, x31, x31
	lwu x5, -1876(x25)
	addi x26, x0, -1
	addi x7, x21, 1115
	addi x21, x0, 1177
	la x19, test_memory+2016
	subw x10, x6, x6
	lb x4, -1765(x19)
	xor x26, x26, x17
	and x2, x12, x26
	addi x20, x0, 747
	or x30, x2, x17
	la x18, test_memory+232
	lbu x29, -122(x28)
	sw x30, -12(x18)
	sra x27, x21, x20
	bgeu x2, x30, crash_forward
	addi x22, x0, -886
	addi x20, x0, 1
	addi x29, x0, -977
	srl x30, x0, x0
	sll x20, x20, 63
	addi x14, x0, 1608
	addi x23, x0, -13
	addi x3, x0, -657
	addi x8, x0, -1
	addi x18, x0, -1091
	addi x27, x0, 917
	addi x26, x0, 1
	xor x8, x8, x20
	la x17, test_memory+614
	addi x25, x0, -793
	sll x26, x26, 63
	lb x15, 273(x17)
	remuw x5, x23, x3
	addi x31, x29, -796
	addi x30, x0, -1262
	blt x29, x31, crash_backward
	div x7, x14, x27
	addi x2, x0, -1
	addi x24, x22, -112
	sraw x28, x7, x7
	and x10, x18, x8
	addi x23, x0, -558
	la x31, test_memory-1336
	addi x1, x0, 1
	addi x15, x0, 519
	addi x3, x15, 1226
	addi x17, x30, -387
	lwu x7, 2040(x31)
	la x28, test_memory-261
	xor x2, x2, x26
	sd x1, 853(x28)
	and x13, x7, x2
	addi x12, x25, -1532
	bge x12, x25, crash_forward
	addi x11, x0, 1185
	blt x3, x15, crash_backward
	addi x5, x23, -714
	la x29, test_memory+1638
	sll x1, x1, 63
	sll x28, x25, x19
	la x31, test_memory+2213
	or x6, x18, x11
	addi x21, x0, -1
	sh x17, -1983(x31)
	xor x21, x21, x1
	and x19, x12, x21
	lw x14, -778(x29)
	addi x12, x0, 1136
	addi x24, x0, 998
	or x4, x22, x20
	or x25, x3, x27
	la x3, test_memory+1527
	rem x7, x12, x24
	or x9, x27, x26
	or x16, x2, x1
	beq x23, x5, crash_backward
	addi x8, x0, 757
	or x27, x10, x10
	addi x7, x0, 485
	bne x18, x18, crash_backward
	addi x10, x0, 293
	mul x14, x8, x17
	addi x22, x0, 110
	addi x17, x22, 3
	sraw x20, x10, x10
	sd x5, -1399(x3)
	bge x22, x17, crash_forward
	blt x13, x9, crash_forward
	la x15, test_memory-1014
	addi x28, x0, -1474
	divuw x4, x8, x8
	lb x11, 1932(x15)
	addi x24, x0, 1
	remuw x29, x7, x28
	mulh x31, x2, x2
	sll x24, x24, 63
	la x6, test_memory-1541
	addi x18, x0, -1
	xor x18, x18, x24
	and x12, x9, x18
	or x25, x18, x24
	bltu x25, x12, crash_backward
	lwu x30, 1729(x6)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x0000000000000000
reg_x1_init:	.dword 0x161db4b2acea7940
reg_x2_init:	.dword 0x0d0773eccfdef295
reg_x3_init:	.dword 0x0eca53a5830510c2
reg_x4_init:	.dword 0x0000000000000000
reg_x5_init:	.dword 0xffffffffffffff88
reg_x6_init:	.dword 0x0000000000000005
reg_x7_init:	.dword 0xa5cb0aeef13b6cdd
reg_x8_init:	.dword 0xb1907317d139b82b
reg_x9_init:	.dword 0x6e8f81b383f0f6b4
reg_x10_init:	.dword 0x63b4147269030d0c
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0xffffffff80000008
reg_x13_init:	.dword 0x7b1914b9d86ce868
reg_x14_init:	.dword 0xffffffffffff8000
reg_x15_init:	.dword 0x1bf95b2a2ce04a40
reg_x16_init:	.dword 0xbdcd36bcadd13673
reg_x17_init:	.dword 0x4d9aed29478819b3
reg_x18_init:	.dword 0xffffffffffffff85
reg_x19_init:	.dword 0xffffffffffffff86
reg_x20_init:	.dword 0xe937802ccb282cca
reg_x21_init:	.dword 0x12e8cb925a740c53
reg_x22_init:	.dword 0x9741cfcd561ceccb
reg_x23_init:	.dword 0xffffffff80000008
reg_x24_init:	.dword 0x0800000000000008
reg_x25_init:	.dword 0xe8e9514d76926bb2
reg_x26_init:	.dword 0x0000000000000000
reg_x27_init:	.dword 0x5515eb3cc68a098a
reg_x28_init:	.dword 0xffffffff80000002
reg_x29_init:	.dword 0xab4204c00ba789d6
reg_x30_init:	.dword 0x15aeb33104c3b255
reg_x31_init:	.dword 0xa28c1b765ee482aa

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x4afa9a46e1490829
reg_x1_output:	.dword 0x84d77a77179843b1
reg_x2_output:	.dword 0xef13dc622b55676a
reg_x3_output:	.dword 0x31166bec2bbec97e
reg_x4_output:	.dword 0xcd05506d94185735
reg_x5_output:	.dword 0xc4da3d6551b9a01a
reg_x6_output:	.dword 0xd3d07f416edbe0aa
reg_x7_output:	.dword 0xad73eb77f7833633
reg_x8_output:	.dword 0xd86e607ea987a1cc
reg_x9_output:	.dword 0x32fce9697020f691
reg_x10_output:	.dword 0xfb6b722c61b5cf85
reg_x11_output:	.dword 0x25c894e27cd543c3
reg_x12_output:	.dword 0x2e753581cb87d3ed
reg_x13_output:	.dword 0x0bccb0e3720309fa
reg_x14_output:	.dword 0x948225053c300ccb
reg_x15_output:	.dword 0x78221bf72c9e0b34
reg_x16_output:	.dword 0x503a77d4157a6e5b
reg_x17_output:	.dword 0x1b1e35a7dd11499c
reg_x18_output:	.dword 0xb7d9464033f60e51
reg_x19_output:	.dword 0x9c98a732c7373430
reg_x20_output:	.dword 0x6922e3a26afddb1d
reg_x21_output:	.dword 0x2af8837f029579a4
reg_x22_output:	.dword 0x0486816818ff0371
reg_x23_output:	.dword 0xc3def24aacc8a585
reg_x24_output:	.dword 0x694e6f71473fd1ff
reg_x25_output:	.dword 0xf5f4daa6f029eba2
reg_x26_output:	.dword 0xb7238d9b73520187
reg_x27_output:	.dword 0x49c440a56c7bc5a7
reg_x28_output:	.dword 0x805dc298a987cd10
reg_x29_output:	.dword 0xa8dd4a4e8d104709
reg_x30_output:	.dword 0xf5e48c091f734075
reg_x31_output:	.dword 0x3a121fdae1a64b29

// Memory Blocks
	.align 8
test_memory:
	.dword 0x35fffbc4e7eb8d23, 0xee941b1cc368e1b3
	.dword 0xacabb6778f8c671f, 0xc96ffa3c304e9d48
	.dword 0xd302c7739d5fae4e, 0x188e09a87acca85c
	.dword 0xdd745dc2c7a1e7f0, 0xef36794afcabc460
	.dword 0xaadec67a9c964c6d, 0x356950fd980b9722
	.dword 0xbaaf3855e3676d54, 0x405cb83e4b82ea74
	.dword 0x1afa4480cd5db7a0, 0xce6b851f2c11c20c
	.dword 0x3a6a00b47485563c, 0x46e9467f93846baa
	.dword 0xc21c3e821e7138c8, 0x93f03d7f7a34ed7f
	.dword 0x125c63f25061429d, 0xd490fa2eaa0a76cd
	.dword 0x87c9b94d41ede60e, 0x78128f87846cb6ca
	.dword 0x3634403974bbaff1, 0x3a6d929f5fdb3dca
	.dword 0x88876805bedd875d, 0x961b59165a374c9c
	.dword 0x02bb334682b4a5b4, 0xe2f62ad4d4d0b633
	.dword 0xe139a2a3fe898ae3, 0xcc7e5af97d2cb788
	.dword 0x39af78edf00971e8, 0x86a37c0bc387e9bf
	.dword 0xa11cac7460880994, 0x1e7023764c82b288
	.dword 0xd36a1994769d7592, 0x16e9f0344879d6c8
	.dword 0xdf0f4a940cb4dba7, 0xc95ec8c68f031377
	.dword 0x74ac68b27aa0013a, 0x8673846df21fe0cb
	.dword 0x0c29aa792e88bd17, 0x79d77395e136c396
	.dword 0x082ed35617e1416f, 0xc8c37b913a05d0eb
	.dword 0x22da986981808223, 0x32a2b98603c74808
	.dword 0x94cafea047283b41, 0xbeade0a7e0eb666f
	.dword 0x3f0506019a865bce, 0x4821c7a9c458da55
	.dword 0xea5b3648149bd8c5, 0x484cd9720a577740
	.dword 0x80d7e0b2268f2c5f, 0x49365d0b815f10eb
	.dword 0x28a92b1730910595, 0x605dc8e15e3ea06c
	.dword 0xd95a383c6addebe2, 0xce3f952817ae1798
	.dword 0x750601693c4fdb4d, 0xf830419ae99f86a6
	.dword 0x84e5b538af9f1ca6, 0xedf5826e5eca7811
	.dword 0x6c65afb214a1de0f, 0x4690c87bf136a6c3
	.dword 0x85095f93e1ce4fbe, 0x872d98c33739726f
	.dword 0x0117acf5043b4900, 0x5f5967126babb63e
	.dword 0x608eb50ca597b980, 0xa5d1e7ff9453e5ad
	.dword 0x7c76ef4e38516ac9, 0x34920e2062da93b5
	.dword 0xcd9b0fb846a7d608, 0x08952671d95dc82b
	.dword 0x4e2b3a6a09f01216, 0x954ac81b0e19c769
	.dword 0xaf275c7b701b1db6, 0x342d8b5857e4302e
	.dword 0x2bd5be09aee00a1a, 0x5999bbb011a093c2
	.dword 0xfc48219359ffc9ac, 0x90207968bba3ec5d
	.dword 0xc5430483ad30a70a, 0xae66fe3bf16e95c9
	.dword 0xbcffd50f269ba851, 0xc068f94ab67aac46
	.dword 0xfa7c3141fcb6629d, 0x5ef036527056f5ad
	.dword 0x459583547de801d0, 0xce83041d4d24b8d7
	.dword 0x12518f401a108893, 0x0d2e0e394611273f
	.dword 0x3ea9c59711f58c9a, 0xbba59dedbbc93ce5
	.dword 0xe9386f926f07f32b, 0x8585766c51713a75
	.dword 0xd58408659b2a71e0, 0xc535c04307971da8
	.dword 0x719657dc5c58d7aa, 0xbd6eb8182e29bbea
	.dword 0xa5522220078c6219, 0xfbbc1494f8f4633d
	.dword 0x27d380d7e139a2db, 0x97fc57a0dfb9255c
	.dword 0x875439780c88b982, 0xcbe77ed168023123
	.dword 0x4dcea4d45530e58a, 0x3e6bc71d1564de2d
	.dword 0x7d2efbf606ecb499, 0xc06677d67b774ebe
	.dword 0xda8c1e30e90c5108, 0xb629e8d76563cbe3
	.dword 0x55de247618ffb4a2, 0x12a137f9b8133fd8
	.dword 0x0c3a55e4ac0ac3aa, 0x60f561cdbf9a72a9
	.dword 0x830151a5c2f19422, 0x979eb185852bed1b
	.dword 0x73e581f9a28b654a, 0x3f08bc33428aa5cc
	.dword 0xd17d2c8bc60f0b66, 0x359e5b351917dc98
	.dword 0x2374b40d13d3d3c4, 0x1e7659ee8f58c83e
	.dword 0x5daadefeff6e24fd, 0x5630cab89676fa43
	.dword 0x5fca37ce94bf5f7a, 0x5e203719b4089d15

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
