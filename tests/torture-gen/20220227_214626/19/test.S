// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x15, x0, -2046
	srlw x7, x11, x26
	addi x31, x0, 0
	srl x2, x13, x13
	remu x12, x25, x25
	addi x6, x0, 1596
	la x5, test_memory+2207
	addi x2, x0, 1419
	divu x4, x15, x15
	addi x17, x0, -833
	addi x19, x0, -42
	addi x7, x0, -376
	addi x20, x0, 1
	sh x31, -1541(x5)
	addi x24, x0, 913
	sll x20, x20, 63
	addi x28, x0, -685
	addi x14, x0, 0
	la x8, test_memory+808
	addi x26, x0, -1
	bne x31, x14, crash_forward
	sltu x12, x2, x7
	addi x18, x0, 1181
	xor x26, x26, x20
	slt x31, x12, x9
	addi x16, x0, 1659
	remuw x25, x6, x6
	and x9, x27, x26
	addi x11, x16, 290
	la x30, test_memory-644
	or x3, x9, x20
	la x13, test_memory-16
	lbu x1, 659(x30)
	sllw x27, x24, x18
	addi x2, x0, 1
	addi x22, x19, -1803
	sll x2, x2, 63
	addi x31, x0, 928
	addi x21, x0, 2037
	div x10, x28, x21
	bge x22, x19, crash_forward
	addi x15, x0, -1264
	remu x23, x17, x17
	la x3, test_memory+714
	addi x7, x0, -1164
	la x22, test_memory+525
	lhu x9, 132(x3)
	addi x27, x0, 1166
	addi x16, x17, 0
	addi x20, x0, -1
	rem x14, x31, x27
	addi x21, x16, 0
	addi x9, x0, -265
	add x26, x15, x7
	lbu x29, -371(x8)
	sh x4, 450(x13)
	xor x20, x20, x2
	addi x17, x0, 1
	la x27, test_memory+1334
	addi x3, x0, 1516
	sll x14, x9, x9
	addi x12, x0, 1
	sll x12, x12, 63
	and x5, x14, x20
	div x11, x3, x3
	sll x17, x17, 63
	sraiw x11, x19, 24
	addi x10, x0, -1
	addi x6, x0, -1
	xori x14, x23, -1673
	addi x8, x0, 1
	sltiu x1, x11, -159
	xor x6, x6, x12
	sub x1, x23, x27
	xor x10, x10, x17
	sll x8, x8, 63
	addi x31, x0, 1156
	lwu x23, 471(x22)
	sub x3, x31, x31
	sw x12, -582(x27)
	addi x26, x0, -1
	xor x26, x26, x8
	la x24, test_memory+1914
	lh x29, -1226(x24)
	bne x16, x21, crash_forward
	and x25, x29, x26
	la x23, test_memory+2342
	lbu x11, -1859(x23)
	or x4, x5, x2
	la x1, test_memory+1335
	and x30, x9, x6
	sllw x13, x9, x18
	addi x9, x27, 0
	bge x4, x5, crash_forward
	lwu x22, -763(x1)
	srliw x3, x16, 4
	or x18, x21, x12
	or x7, x10, x8
	la x24, test_memory+2136
	lbu x16, -1402(x24)
	addi x15, x9, 0
	bgeu x25, x7, crash_backward
	and x19, x5, x10
	subw x31, x10, x21
	addi x27, x0, -1123
	addi x14, x27, -2015
	or x28, x12, x17
	addi x30, x0, -356
	la x3, test_memory+2668
	addiw x12, x31, -766
	rem x7, x8, x8
	srlw x9, x30, x30
	addi x1, x0, 264
	bgeu x19, x28, crash_forward
	addi x13, x0, 261
	sraw x25, x1, x13
	addi x19, x0, 1
	slli x13, x2, 38
	addi x2, x0, 956
	addi x24, x0, 1
	remu x30, x24, x24
	sll x19, x19, 63
	la x16, test_memory+714
	addi x10, x0, 1413
	addi x11, x0, 1607
	xor x22, x2, x11
	mulhu x28, x18, x18
	la x17, test_memory+2187
	la x8, test_memory+2532
	lh x5, -1954(x3)
	la x29, test_memory+1941
	sw x5, -1548(x8)
	addi x20, x0, -707
	lb x9, -1410(x17)
	addi x13, x0, -2011
	addi x2, x13, -673
	sll x24, x24, 63
	addi x26, x0, 1750
	slt x12, x10, x20
	addi x27, x0, -1
	la x3, test_memory+1612
	la x9, test_memory-1544
	addi x25, x0, 829
	lw x4, 274(x16)
	xor x30, x25, x25
	addi x6, x0, -1
	xor x6, x6, x24
	and x23, x30, x6
	sll x1, x25, x25
	lbu x5, 1712(x9)
	or x21, x23, x24
	sd x18, -1484(x3)
	xor x27, x27, x19
	and x7, x29, x27
	la x11, test_memory+1393
	la x17, test_memory+451
	sh x14, 13(x17)
	addi x15, x0, -34
	or x14, x14, x19
	remw x31, x26, x15
	lh x28, -1155(x11)
	ld x18, -949(x29)
	la x30, test_memory-750
	addi x3, x0, -863
	add x16, x23, x13
	xor x25, x9, x31
	sd x18, 814(x30)
	mulh x1, x3, x3
	slt x24, x4, x7
	la x8, test_memory-687
	subw x23, x14, x25
	addi x17, x0, 1047
	srl x22, x17, x17
	addi x11, x0, 1197
	la x27, test_memory+1796
	addi x31, x11, 890
	addi x13, x0, -308
	srl x6, x5, x5
	la x28, test_memory-1047
	la x29, test_memory+445
	divw x21, x13, x13
	la x14, test_memory+573
	la x26, test_memory-470
	addi x24, x0, -1884
	addi x18, x0, 956
	la x20, test_memory+1700
	lb x2, 1197(x28)
	addw x25, x21, x21
	addi x22, x0, 1558
	mulw x3, x30, x30
	sd x18, -365(x29)
	addi x10, x18, 0
	sb x13, 1378(x8)
	ld x9, 742(x26)
	addi x2, x0, 480
	la x16, test_memory-776
	sb x3, 156(x14)
	mulh x23, x24, x22
	addi x12, x0, 936
	la x1, test_memory-615
	mulhsu x19, x18, x12
	mulw x11, x2, x2
	addi x31, x0, -461
	addi x21, x31, -810
	lh x17, 1031(x1)
	addi x14, x0, -491
	rem x12, x14, x14
	addi x5, x10, 0
	mul x4, x13, x13
	ld x15, -1220(x27)
	lbu x7, -708(x20)
	addi x23, x0, 837
	la x8, test_memory+867
	addi x6, x0, 0
	sb x4, 1641(x16)
	lbu x9, -776(x8)
	addi x19, x0, -493
	addi x12, x0, 0
	addi x30, x0, 0
	addi x29, x0, 1644
	addi x17, x0, -1845
	la x25, test_memory+1896
	addi x22, x0, -1162
	lwu x28, -900(x25)
	addi x18, x0, -558
	divw x2, x19, x19
	addi x24, x18, -1920
	addi x14, x12, 0
	bne x12, x14, crash_backward
	subw x1, x17, x17
	sltu x26, x29, x22
	addi x3, x0, 208
	and x4, x18, x18
	la x30, test_memory+324
	addi x21, x12, 661
	srl x6, x12, x12
	addi x13, x0, 405
	la x7, test_memory+945
	add x17, x13, x13
	addi x10, x0, -1330
	addi x29, x0, 0
	slt x11, x23, x3
	sll x16, x13, x13
	sh x18, 298(x30)
	la x16, test_memory+40
	remu x8, x10, x10
	sw x15, -605(x7)
	addi x15, x0, -946
	addi x9, x0, 0
	addi x27, x0, 1
	la x30, test_memory+1405
	mulhsu x3, x9, x9
	addi x14, x0, -759
	xor x18, x13, x13
	addi x8, x0, -1160
	mulhu x5, x15, x15
	blt x23, x23, crash_backward
	addi x10, x0, 1285
	addi x23, x0, 1445
	addi x12, x0, 1
	xor x26, x31, x31
	sll x12, x12, 63
	sltu x28, x14, x14
	addi x18, x0, 345
	sub x3, x18, x18
	sll x27, x27, 63
	sw x3, -849(x30)
	addi x11, x23, 1368
	remu x15, x25, x2
	lb x17, 338(x16)
	addi x14, x0, 1
	addi x19, x0, -1
	sll x14, x14, 63
	addi x21, x0, 1986
	la x18, test_memory+131
	la x17, test_memory-605
	addi x30, x0, 20
	lb x1, 704(x17)
	xor x19, x19, x27
	addi x26, x0, -1
	la x29, test_memory-1685
	and x25, x15, x19
	xor x26, x26, x14
	lwu x17, 1817(x29)
	addi x24, x0, -1968
	bgeu x23, x11, crash_forward
	or x31, x25, x27
	addi x6, x0, 1003
	addi x9, x0, 1426
	lh x28, 443(x18)
	and x5, x19, x26
	addi x1, x0, 674
	remuw x15, x9, x1
	or x3, x23, x14
	mulhu x4, x6, x6
	sub x23, x29, x30
	addi x16, x30, 689
	addi x20, x0, -1
	xor x20, x20, x12
	sll x7, x8, x10
	blt x25, x31, crash_forward
	bge x30, x16, crash_forward
	addi x23, x0, 1
	srlw x11, x27, x27
	la x9, test_memory-389
	lh x15, 1083(x9)
	la x30, test_memory+1196
	la x26, test_memory-1007
	andi x10, x18, -1289
	addi x14, x0, 1
	lwu x25, -640(x30)
	and x22, x4, x20
	div x13, x21, x24
	or x2, x22, x12
	sll x23, x23, 63
	la x18, test_memory-1046
	addi x31, x0, -41
	addi x19, x0, -23
	addi x3, x0, -1
	addi x4, x0, 1851
	xor x3, x3, x23
	and x5, x23, x3
	or x17, x24, x23
	div x8, x22, x22
	sd x6, 1039(x26)
	sll x7, x19, x4
	lwu x6, 1278(x18)
	sllw x28, x31, x31
	sll x14, x14, 63
	addi x16, x0, -1
	xor x16, x16, x14
	beq x5, x17, crash_forward
	and x1, x24, x16
	or x27, x1, x14
	sra x16, x22, x22
	addi x7, x0, 1
	addi x28, x0, -863
	la x3, test_memory+700
	la x18, test_memory+2132
	addi x30, x0, 1945
	la x21, test_memory-1989
	srlw x5, x30, x30
	ld x29, -1972(x18)
	addi x9, x0, 760
	addi x16, x0, -1231
	sll x7, x7, 63
	la x2, test_memory-1202
	la x1, test_memory+4
	la x4, test_memory+112
	lhu x6, 12(x1)
	la x26, test_memory-118
	mul x8, x0, x0
	la x15, test_memory+2125
	lb x24, 1003(x26)
	ld x12, -204(x3)
	addi x11, x0, -74
	add x8, x21, x21
	sw x25, 668(x4)
	la x30, test_memory-929
	addi x25, x0, -1
	sb x10, -1202(x15)
	addi x1, x0, 1415
	la x24, test_memory-52
	lwu x29, 96(x24)
	sh x28, 2023(x21)
	la x26, test_memory-1106
	srl x10, x12, x12
	ld x20, 1770(x2)
	addi x31, x0, -481
	divw x13, x28, x9
	xor x25, x25, x7
	and x27, x3, x25
	sw x22, 1814(x26)
	la x20, test_memory+1605
	rem x22, x11, x11
	addi x2, x0, -715
	sub x15, x8, x18
	addi x12, x0, -56
	remuw x24, x6, x6
	add x29, x6, x6
	rem x23, x31, x31
	addi x5, x0, -270
	addi x21, x0, -552
	lh x18, 1521(x30)
	addi x4, x0, 975
	addi x26, x0, -1878
	addw x3, x2, x21
	addi x8, x0, 517
	ld x9, -1469(x20)
	sllw x18, x8, x8
	sub x14, x31, x29
	sll x6, x1, x5
	la x30, test_memory-1800
	xor x28, x4, x26
	addi x10, x12, -734
	lh x21, 1842(x30)
	srlw x31, x27, x27
	addi x19, x16, -46
	addi x1, x0, 638
	addi x23, x0, 1691
	mulh x21, x1, x1
	addi x9, x0, 1
	sra x3, x23, x23
	la x14, test_memory+1751
	or x17, x27, x7
	la x4, test_memory+1244
	addi x11, x0, 860
	addi x24, x0, -1429
	addi x15, x0, 0
	sw x21, -1087(x14)
	lbu x31, -629(x4)
	addiw x6, x16, -576
	addi x8, x0, 211
	addi x29, x24, -772
	sll x9, x9, 63
	srlw x1, x3, x29
	addi x12, x0, -1
	addi x2, x0, 0
	sra x14, x24, x30
	addi x23, x0, -1520
	addi x3, x0, 1
	sll x3, x3, 63
	subw x5, x8, x8
	xor x12, x12, x9
	div x10, x6, x6
	addi x26, x0, 771
	addi x22, x0, -387
	and x20, x28, x12
	addi x18, x0, 1
	addi x24, x0, -1
	xor x13, x11, x22
	sll x18, x18, 63
	xor x24, x24, x3
	remuw x30, x15, x23
	addi x19, x0, -1
	and x1, x16, x24
	or x28, x29, x9
	bltu x28, x20, crash_backward
	xor x19, x19, x18
	mul x16, x23, x26
	addi x8, x0, -1186
	or x21, x1, x3
	addi x7, x0, 849
	bltu x21, x1, crash_backward
	and x6, x21, x19
	remu x10, x8, x7
	or x4, x6, x18
	bltu x4, x6, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xe5320188c1dc8928
reg_x1_init:	.dword 0x01e015fa050b0869
reg_x2_init:	.dword 0xffffffffffffffff
reg_x3_init:	.dword 0x295e3499cc98adee
reg_x4_init:	.dword 0x0000000000000006
reg_x5_init:	.dword 0x9d97484505cb72b1
reg_x6_init:	.dword 0xec62d4b6f6f9d1f5
reg_x7_init:	.dword 0x0000000000000000
reg_x8_init:	.dword 0x3fab139c4bca4da0
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0x5b8ba01950c3361a
reg_x11_init:	.dword 0x14f69af861254538
reg_x12_init:	.dword 0xffffffff80000008
reg_x13_init:	.dword 0xffffffff80000003
reg_x14_init:	.dword 0xffffffffffff8009
reg_x15_init:	.dword 0xffffffffffffffff
reg_x16_init:	.dword 0xffffffffffffffff
reg_x17_init:	.dword 0x9a94fba25cd25e27
reg_x18_init:	.dword 0x0000000000000006
reg_x19_init:	.dword 0xc0bbb99c62db56cd
reg_x20_init:	.dword 0x0000000000000006
reg_x21_init:	.dword 0xf0e6777fa27bb799
reg_x22_init:	.dword 0x0278d16500369487
reg_x23_init:	.dword 0x0000000000000001
reg_x24_init:	.dword 0x0000000000000000
reg_x25_init:	.dword 0x6668bb998bf27c0b
reg_x26_init:	.dword 0x179fdbcc8989fc89
reg_x27_init:	.dword 0x0800000000000006
reg_x28_init:	.dword 0x15b70e18b01e5509
reg_x29_init:	.dword 0xf5fab5c0a3b3056c
reg_x30_init:	.dword 0xe5608b12418198b8
reg_x31_init:	.dword 0xffffffffffff8008

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0xca5fcd3e81d55ea0
reg_x1_output:	.dword 0x69f7c10561767afa
reg_x2_output:	.dword 0x58d93c794ca6cd20
reg_x3_output:	.dword 0xff3b90bf2f2c8c6c
reg_x4_output:	.dword 0xb397d46e4726ab0d
reg_x5_output:	.dword 0x2d6d312d63cc7fc0
reg_x6_output:	.dword 0xac88ad8b0bb7bd3e
reg_x7_output:	.dword 0x9975777fc6d10793
reg_x8_output:	.dword 0x7ff08e40dffae501
reg_x9_output:	.dword 0xc8d7ae50e6431719
reg_x10_output:	.dword 0xb79ca0e79a276a2e
reg_x11_output:	.dword 0xbd47182d72550c52
reg_x12_output:	.dword 0x93ce23dea6d55278
reg_x13_output:	.dword 0x8fb396535449c97a
reg_x14_output:	.dword 0x7b6e77f690455a06
reg_x15_output:	.dword 0x33b377bb422f71c5
reg_x16_output:	.dword 0xb60b311134d76141
reg_x17_output:	.dword 0x260cb459f53cbd4b
reg_x18_output:	.dword 0x67f00d04c41963ef
reg_x19_output:	.dword 0xbc8018a4421b1841
reg_x20_output:	.dword 0x5daef4c4dde64d80
reg_x21_output:	.dword 0xae1d2551c0570169
reg_x22_output:	.dword 0xf6c46bc19ead3ea8
reg_x23_output:	.dword 0xd28da764c3d35bcb
reg_x24_output:	.dword 0x6109118ca46f182d
reg_x25_output:	.dword 0xe0344c6a6fb3a7a5
reg_x26_output:	.dword 0x2e8719c0e2895f01
reg_x27_output:	.dword 0x7ce9b6fe18fc569f
reg_x28_output:	.dword 0x1754de217c42cd93
reg_x29_output:	.dword 0x67d7d793f767af42
reg_x30_output:	.dword 0xcf83eefc787f2661
reg_x31_output:	.dword 0x04ab8d74e7e0f3ab

// Memory Blocks
	.align 8
test_memory:
	.dword 0x404645d969451bd1, 0x8d50d4085cfebf7b
	.dword 0x11617e4ea11a6141, 0x97ee005351f0d111
	.dword 0x4f22393323e7395c, 0x2716d2c16ae4b1fb
	.dword 0x87800df89a5415af, 0xda7861255627f2a9
	.dword 0x0944ae5372a91b7b, 0x0acb1cfde285ed63
	.dword 0xf80f201e6260a1cc, 0x24e879fc34ca447c
	.dword 0xc236317e551afcca, 0xb9b5f8c29f308fc7
	.dword 0xb01b8b46c1b32a4e, 0xbb6f99ee1d1ced4a
	.dword 0xe1b3059e721933b8, 0xd0f7fd5493006931
	.dword 0x251822df2f9058ff, 0x9574b19319077105
	.dword 0xca45d4c0f83c5909, 0xd9e177c1a65fc61d
	.dword 0x82a2efb875ca6b3c, 0x67ad7f87fdc6a354
	.dword 0xa957f09a44b7be54, 0x7321df5749e709fb
	.dword 0x1988f88531809076, 0x8280ccef241b6a11
	.dword 0x33d922ff32203485, 0x6fc15a26f9a519b1
	.dword 0x834a9a5d6ffb98b5, 0xbec3b9eccd9f4fcb
	.dword 0xd4e10e68e5d5225d, 0x7516518b081a9616
	.dword 0xb3a2713eb001f310, 0x23241a2b6828e645
	.dword 0x5dec1e775005eaed, 0xd529169cc671e678
	.dword 0x1fd0d087813cfc36, 0x24d1e1565369f8f5
	.dword 0xda96086b578da41f, 0xdf3796ba86be1317
	.dword 0x99adcb7dd4899ce8, 0x66399fa068318f86
	.dword 0xc3f3dbaad81f1d2d, 0xa44b200a044a6fa8
	.dword 0x7ac3cdc8d14e387c, 0x9ee20e3c43fbc056
	.dword 0x71efa2412e7b3528, 0x3a1235f1754515d2
	.dword 0x41f4c3f3ad2feb5c, 0xe7beabe546b952f9
	.dword 0x5347915c0bab8172, 0xda707599e84e2fb4
	.dword 0xd46bd3f094c11985, 0xff89695843f932b4
	.dword 0x2712c9ccad7b4444, 0xda768a7397b6125d
	.dword 0x28dda5922d034d09, 0x3af565d523ddb102
	.dword 0x2ceda88b67a8b329, 0x57b432b28b742853
	.dword 0x42593b1096d6648d, 0xbcccbba213879813
	.dword 0x032fa72e9e888d81, 0xa71653cf3a20ac0d
	.dword 0x062b598926af11cb, 0x424b5c886fe10d48
	.dword 0xb4cccc78f11602ff, 0x04c31f00d87b3279
	.dword 0xa696817a342ea811, 0x4848fe5448f243b8
	.dword 0x4ac4acc955a8ea2c, 0xc0a645c8ae480577
	.dword 0x126177497e763ac1, 0x8e0417573729feaf
	.dword 0x0f40faa659cc46e2, 0x279f3e6a168e4e5b
	.dword 0x177e5bbca34f0bcf, 0x029feae73f43e429
	.dword 0x92c5a73a8aef20d1, 0xb583986bc881106f
	.dword 0xad4c548310824a46, 0xfaa7a5dbacb69f5b
	.dword 0x6e1492d54ae9a9fd, 0xb0676119a59cf36e
	.dword 0x2935c4aba7fa20c3, 0x23288b131dd3d32b
	.dword 0xada6cd65f890b53d, 0x29dd980190c4de0b
	.dword 0xf6ad152a088613f8, 0x08352fef7803dcb3
	.dword 0xcddd670561d17cbe, 0x8722b377c1676068
	.dword 0xc9ca0d560e5cb12b, 0x2ce3c8d31dc765c2
	.dword 0x314bd06bea0fb87f, 0x1d6335119cf6ee9f
	.dword 0x2a09bb6ca7b48cb4, 0xa31985a88b68c75a
	.dword 0x04bdcb78acc004d3, 0x23904e2d603eeb3d
	.dword 0xa0f2ed0d8b0e9082, 0xc9b4fe5e72873c33
	.dword 0x96daebad297898e2, 0x37749466c95f81c2
	.dword 0xcea137bcb60b9a97, 0x57e9af6287e5e337
	.dword 0x4389a6afb3f24d27, 0xf7fac622827a5122
	.dword 0x24789163dce76b88, 0x24de862e7a289204
	.dword 0x3573f4caf7b3f1f3, 0xc2d89f084459e647
	.dword 0x0c8378cd1bf2e4fe, 0x2ae17db6f368776d
	.dword 0x6a4f816c5c61f5e9, 0x780fbc81879e068c
	.dword 0xd23dae294da79837, 0x1dc24afb1aca8df9
	.dword 0x98cb6ba5fcec5c80, 0x41f692402236ca43
	.dword 0xb7cd7b8c612ea485, 0x8c26197cc681de63
	.dword 0xd14596ae31150484, 0xc4bb6eb45e388731
	.dword 0x40ed8d6dee74e5ce, 0xebe657c071e79218

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
