// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	addi x19, x0, 1290
	la x22, test_memory+790
	addi x13, x0, 437
	divuw x28, x21, x21
	sraw x25, x12, x20
	la x21, test_memory+1863
	addi x5, x0, -1188
	divuw x23, x14, x14
	addi x15, x0, -427
	sub x3, x23, x23
	addi x11, x0, -1191
	div x29, x28, x6
	and x9, x5, x11
	addi x12, x0, 1192
	addi x10, x16, 0
	addi x16, x0, -1805
	addi x4, x0, 925
	xor x31, x30, x30
	lb x26, -438(x22)
	addi x1, x0, 1974
	la x18, test_memory-1553
	remu x17, x4, x1
	addi x2, x12, 1405
	sw x31, -1675(x21)
	divw x30, x12, x12
	slt x24, x19, x13
	lb x27, 1626(x18)
	addi x8, x10, 0
	addi x20, x0, -1469
	mulw x7, x15, x16
	addi x6, x0, -564
	bltu x10, x8, crash_forward
	addi x5, x0, 299
	addi x7, x0, 316
	subw x10, x7, x7
	addi x29, x0, 1
	srlw x12, x1, x1
	addi x28, x0, -1285
	sll x29, x29, 63
	la x30, test_memory+1006
	addi x15, x0, 519
	addi x19, x0, 1
	mulhu x8, x19, x19
	bltu x0, x0, crash_backward
	addi x9, x0, -1
	xor x9, x9, x29
	sub x16, x5, x28
	sll x19, x19, 63
	mulhu x21, x15, x15
	and x26, x21, x9
	or x2, x22, x29
	srl x14, x20, x6
	addi x31, x0, 1
	sd x20, -430(x30)
	addi x18, x0, -1
	bge x2, x26, crash_backward
	div x23, x29, x29
	divw x17, x4, x4
	sll x31, x31, 63
	addi x11, x0, -1
	xor x18, x18, x19
	addi x24, x0, 1
	and x22, x23, x18
	sll x24, x24, 63
	divw x17, x7, x7
	xor x11, x11, x31
	addi x12, x0, 658
	la x29, test_memory+570
	la x9, test_memory+740
	div x5, x0, x0
	addi x17, x0, 268
	addiw x28, x22, 1043
	mulhu x14, x23, x23
	and x4, x19, x11
	lhu x16, -60(x9)
	addi x26, x0, -1392
	subw x10, x17, x17
	la x5, test_memory+2248
	lhu x2, -364(x29)
	sd x16, -1680(x5)
	addi x15, x0, 754
	addi x16, x0, 1276
	or x9, x16, x16
	or x27, x6, x19
	la x7, test_memory+1018
	bltu x27, x22, crash_backward
	addi x8, x0, -1406
	addi x3, x0, -1
	slli x14, x11, 15
	sh x11, -798(x7)
	addi x6, x0, 753
	xor x3, x3, x24
	or x25, x28, x31
	xor x20, x12, x15
	addi x30, x0, 1035
	divuw x21, x8, x6
	and x1, x26, x3
	mulh x23, x26, x30
	or x13, x1, x24
	la x24, test_memory-356
	addi x27, x0, 1282
	la x8, test_memory-803
	la x14, test_memory+1114
	addi x18, x0, 1
	mulhsu x1, x12, x12
	lbu x26, -373(x14)
	ori x11, x0, -572
	la x2, test_memory-1330
	ld x19, 1147(x8)
	addi x26, x22, 1791
	sw x6, 1698(x2)
	mulhu x17, x21, x13
	sll x18, x18, 63
	addi x16, x0, 1
	lwu x25, 1288(x24)
	addi x20, x0, 1
	addi x30, x0, -300
	sll x20, x20, 63
	addi x14, x0, 864
	mulw x19, x14, x14
	addi x29, x0, 94
	add x28, x30, x30
	addi x8, x29, 72
	sll x16, x16, 63
	addi x6, x0, -1
	blt x8, x29, crash_forward
	addi x22, x0, -1
	addiw x17, x21, 1684
	addi x25, x0, 0
	xor x6, x6, x18
	la x26, test_memory-1648
	lh x19, 1704(x26)
	addi x1, x0, 676
	and x15, x31, x6
	addi x4, x0, 0
	addi x11, x1, 1967
	subw x24, x1, x1
	addi x10, x0, 0
	addi x14, x0, 0
	or x5, x15, x18
	rem x7, x27, x27
	addi x3, x0, 1219
	bge x5, x15, crash_forward
	sllw x19, x24, x24
	addi x21, x0, -1
	div x17, x18, x18
	blt x11, x1, crash_forward
	addw x31, x30, x3
	xor x21, x21, x20
	xor x22, x22, x16
	and x13, x29, x21
	and x9, x4, x22
	addi x2, x0, 1
	lui x18, 790861
	div x6, x16, x16
	la x7, test_memory+469
	addi x15, x0, 1386
	ld x4, 123(x7)
	andi x26, x4, -650
	addi x3, x0, 0
	sll x2, x2, 63
	la x24, test_memory+2049
	la x27, test_memory-403
	or x23, x22, x16
	addi x25, x0, 0
	ld x5, -1329(x24)
	addi x8, x0, -1
	la x10, test_memory+1095
	blt x3, x25, crash_backward
	xor x8, x8, x2
	and x29, x20, x8
	la x6, test_memory-963
	addi x17, x0, 69
	sll x4, x26, x26
	divu x1, x15, x17
	lw x31, 1099(x27)
	addi x26, x0, 1171
	lh x30, -773(x10)
	lbu x24, 1945(x6)
	la x14, test_memory+2468
	addi x3, x0, -744
	addi x31, x0, 402
	or x28, x11, x2
	addi x9, x0, -1738
	la x16, test_memory-648
	lwu x1, 716(x16)
	la x15, test_memory-44
	la x22, test_memory+1043
	addi x23, x0, 1761
	lh x24, -833(x22)
	addi x7, x0, 211
	remw x17, x19, x19
	bltu x28, x29, crash_forward
	sltu x30, x3, x23
	or x12, x18, x20
	or x4, x31, x9
	la x6, test_memory-171
	remw x5, x26, x7
	la x10, test_memory+2103
	la x19, test_memory+1439
	addi x24, x0, 1
	mul x28, x12, x12
	sllw x2, x14, x14
	sra x1, x1, x21
	sll x24, x24, 63
	addi x5, x0, 833
	sub x17, x1, x26
	addi x26, x0, -1
	la x9, test_memory+1003
	addi x29, x0, -545
	la x25, test_memory-842
	lwu x18, -1815(x10)
	sw x28, 1091(x6)
	lh x27, 968(x15)
	la x8, test_memory-923
	la x31, test_memory+713
	xor x26, x26, x24
	sw x5, 1755(x8)
	lw x22, -639(x9)
	lh x16, 189(x31)
	rem x3, x13, x10
	addi x17, x0, -834
	addi x4, x0, -1591
	addi x15, x0, 1880
	addi x20, x0, -1059
	sw x20, 1130(x25)
	addi x13, x20, -288
	add x30, x5, x29
	addi x7, x0, -92
	addi x2, x0, -1663
	divuw x28, x17, x2
	and x21, x17, x26
	addi x6, x0, -1793
	mul x27, x15, x6
	subw x23, x4, x7
	sd x11, -671(x19)
	lhu x11, -1698(x14)
	or x12, x21, x24
	sltu x1, x28, x28
	beq x21, x12, crash_backward
	addi x29, x0, -1113
	addi x3, x0, 30
	la x16, test_memory+2024
	la x14, test_memory+771
	addi x4, x0, -357
	lb x30, 165(x14)
	rem x21, x5, x5
	lw x31, -1332(x16)
	la x7, test_memory+1663
	xor x1, x24, x6
	addi x2, x0, 587
	mulhu x20, x26, x13
	slli x5, x30, 2
	addi x19, x0, 280
	la x14, test_memory+1730
	addi x6, x0, 0
	lw x30, -1578(x14)
	la x27, test_memory-1721
	lh x25, -1429(x7)
	add x26, x29, x21
	or x13, x6, x6
	ld x15, 1817(x27)
	addi x28, x0, 47
	addi x18, x0, 0
	la x13, test_memory-1762
	addi x9, x0, -1440
	addi x26, x0, 1
	la x23, test_memory+961
	srl x21, x28, x28
	sll x26, x26, 63
	mulh x24, x29, x9
	divw x22, x2, x19
	la x20, test_memory+729
	la x9, test_memory-1416
	la x28, test_memory-268
	addi x30, x0, 0
	addi x21, x0, -1283
	addi x31, x0, 1947
	la x1, test_memory+526
	divuw x15, x21, x31
	lw x14, -481(x20)
	sh x18, 106(x1)
	divw x10, x4, x4
	la x12, test_memory+1644
	addi x7, x0, -1
	bltu x6, x18, crash_backward
	lw x29, 1452(x9)
	sub x8, x14, x2
	sw x22, 436(x28)
	lwu x11, -241(x23)
	addi x2, x0, -136
	addiw x14, x9, -76
	add x21, x2, x2
	xor x7, x7, x26
	addi x17, x3, 1853
	la x20, test_memory-637
	lh x22, 825(x20)
	sb x15, -1100(x12)
	and x25, x31, x7
	addi x16, x0, 0
	la x19, test_memory-95
	la x27, test_memory+729
	addw x24, x21, x16
	sd x4, -553(x27)
	bltu x30, x16, crash_backward
	or x5, x25, x26
	sd x31, 807(x19)
	sb x21, 1863(x13)
	bge x5, x25, crash_backward
	addi x22, x0, -749
	la x27, test_memory+1662
	bne x0, x0, crash_backward
	la x1, test_memory+1015
	la x2, test_memory+193
	addi x16, x0, 1
	sw x7, -846(x27)
	lb x26, -913(x1)
	la x29, test_memory+382
	addi x31, x0, 1691
	addi x25, x0, -375
	addi x3, x3, 0
	la x28, test_memory-1387
	subw x8, x22, x25
	sll x16, x16, 63
	la x14, test_memory+504
	addi x4, x0, -1743
	lbu x7, 1859(x28)
	divuw x11, x21, x21
	sh x25, -390(x14)
	sh x10, -29(x2)
	lh x23, -268(x29)
	addi x5, x0, 0
	mulhu x6, x0, x11
	addi x24, x0, 786
	addi x9, x0, -1
	addi x21, x0, 0
	la x15, test_memory+1833
	srl x6, x24, x9
	addi x23, x0, 1508
	addi x17, x0, -1978
	xor x9, x9, x16
	addi x28, x0, 148
	and x18, x5, x9
	sraw x7, x23, x23
	addi x13, x3, 0
	addi x25, x0, -1246
	or x20, x16, x16
	addi x29, x0, -949
	addi x2, x0, 1
	addi x27, x0, 76
	addi x1, x0, 572
	rem x22, x29, x27
	remu x11, x25, x25
	lh x30, -1687(x15)
	sll x2, x2, 63
	xor x19, x4, x24
	sllw x10, x28, x1
	addi x8, x0, -1
	xor x8, x8, x2
	and x12, x31, x17
	slt x22, x1, x1
	and x26, x2, x8
	la x4, test_memory+1875
	divuw x13, x14, x14
	or x14, x26, x2
	remw x28, x25, x25
	lbu x21, -1548(x4)
	la x9, test_memory+2123
	blt x26, x14, crash_backward
	la x1, test_memory+1851
	lwu x24, -875(x1)
	la x21, test_memory-507
	div x26, x4, x10
	la x24, test_memory+123
	addi x29, x0, 1644
	la x14, test_memory+2030
	addi x25, x19, 0
	la x27, test_memory+2567
	addi x16, x25, 0
	sw x25, 425(x24)
	ld x31, 1139(x21)
	la x6, test_memory+204
	la x3, test_memory+109
	mul x13, x2, x19
	mulh x2, x18, x18
	sw x28, -1359(x9)
	addi x12, x0, 1400
	or x18, x7, x1
	addi x10, x31, 0
	lwu x30, -2011(x27)
	addi x5, x0, 1009
	sllw x15, x29, x5
	addi x4, x10, 0
	addi x7, x0, 389
	la x8, test_memory-759
	mulh x17, x18, x18
	lbu x20, 598(x3)
	la x22, test_memory+642
	ld x28, 164(x6)
	la x2, test_memory-923
	la x1, test_memory-515
	sb x26, -1433(x14)
	sd x30, -274(x22)
	lbu x16, 1455(x2)
	addi x18, x0, -776
	addi x5, x0, -10
	addi x29, x18, -186
	bge x29, x18, crash_backward
	slli x26, x28, 63
	addi x15, x0, 1
	la x9, test_memory+1156
	addi x31, x0, -1897
	addi x13, x5, -429
	sb x31, 1463(x8)
	mul x23, x12, x7
	la x11, test_memory-758
	remw x24, x31, x31
	ld x19, 1030(x11)
	lh x4, 1463(x1)
	slt x27, x4, x4
	sb x10, -209(x9)
	sll x15, x15, 63
	addi x30, x0, -1
	xor x30, x30, x15
	and x21, x6, x30
	or x17, x29, x15
	beq x21, x17, crash_forward
	beq x5, x13, crash_backward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x7, 56(x1)
	sd x10, 80(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x53df233a51cc0533
reg_x1_init:	.dword 0x3fa8b34b57f07c07
reg_x2_init:	.dword 0x2f27447e681cc439
reg_x3_init:	.dword 0x9a818b2ce790f476
reg_x4_init:	.dword 0xd6c7e0cb27026b96
reg_x5_init:	.dword 0x0800000000000006
reg_x6_init:	.dword 0xeeff8fb9ff06a8e9
reg_x7_init:	.dword 0xffffffffffff8003
reg_x8_init:	.dword 0xffffffffffffffff
reg_x9_init:	.dword 0x7d8770fdf3a8d293
reg_x10_init:	.dword 0x0000000000000000
reg_x11_init:	.dword 0x0000000000000007
reg_x12_init:	.dword 0x0000000000000000
reg_x13_init:	.dword 0x0000000000000004
reg_x14_init:	.dword 0xb000b8db9d25da6a
reg_x15_init:	.dword 0xffffffffffffff86
reg_x16_init:	.dword 0xffffffffffffffff
reg_x17_init:	.dword 0x8b674f06bb1a89c7
reg_x18_init:	.dword 0x60685b9d71a93ca1
reg_x19_init:	.dword 0x3168bc022f3fd092
reg_x20_init:	.dword 0x7f529c4266b8f16a
reg_x21_init:	.dword 0xffffffffffff8002
reg_x22_init:	.dword 0x0800000000000002
reg_x23_init:	.dword 0x0800000000000008
reg_x24_init:	.dword 0x9cc920c8e04b5842
reg_x25_init:	.dword 0xffffffffffff8001
reg_x26_init:	.dword 0xfffffffffffffffd
reg_x27_init:	.dword 0x0000000000000000
reg_x28_init:	.dword 0xc1be3308a8127128
reg_x29_init:	.dword 0xffffffffffffffff
reg_x30_init:	.dword 0xc15bd0a3e132b649
reg_x31_init:	.dword 0x9dc2fb949854d721

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x67ddc127ca2330d0
reg_x1_output:	.dword 0x941fa387a4ca95bc
reg_x2_output:	.dword 0x3deedcfd1b186f5b
reg_x3_output:	.dword 0x9e64c49d2cddba8a
reg_x4_output:	.dword 0x9303b129049bc0af
reg_x5_output:	.dword 0x0f72e61962220455
reg_x6_output:	.dword 0x5761707a102e7615
reg_x7_output:	.dword 0xe69f60e16430296b
reg_x8_output:	.dword 0x990604f9ad8fed6b
reg_x9_output:	.dword 0x53231a7b2329d36c
reg_x10_output:	.dword 0xa27a3e8570845e27
reg_x11_output:	.dword 0x15a167bd2bc5dde5
reg_x12_output:	.dword 0xd37fd69b09ccf29c
reg_x13_output:	.dword 0xab2de6c6bf8f5b3d
reg_x14_output:	.dword 0xcc7b5d76d4b1b17c
reg_x15_output:	.dword 0x36818431a71583d4
reg_x16_output:	.dword 0xaae7645fe981fb9d
reg_x17_output:	.dword 0xba5e1f88c708f368
reg_x18_output:	.dword 0x1c1f793dc078a1ff
reg_x19_output:	.dword 0x242382f6ea24d8bb
reg_x20_output:	.dword 0xf9a6c76f4bbcd80e
reg_x21_output:	.dword 0x868fa2421e88fb72
reg_x22_output:	.dword 0x0ff771db4b098623
reg_x23_output:	.dword 0x95cf54f75013bc40
reg_x24_output:	.dword 0x0c24fa457c18c050
reg_x25_output:	.dword 0x46a3ffe6b0997343
reg_x26_output:	.dword 0x566d49e43889655c
reg_x27_output:	.dword 0x65b5e1d0e4c8d0ad
reg_x28_output:	.dword 0xad792f3258d12a0c
reg_x29_output:	.dword 0x0971f75f976223a7
reg_x30_output:	.dword 0x90c66502a42d94a4
reg_x31_output:	.dword 0x134daa56ee61ab71

// Memory Blocks
	.align 8
test_memory:
	.dword 0x2dc276d843aaacac, 0x2c39c009b51b56cd
	.dword 0x63bf1674327e62f7, 0x16b13b0ed548959d
	.dword 0x345db6b05c63f5e1, 0x1e682435c5ef20cb
	.dword 0x51997f8b6392d5d7, 0x55696eb4e411dc68
	.dword 0x7d73ef8507a0ce1b, 0x1fb26ba6948b3817
	.dword 0xbab9be2c055775c8, 0xec4d80b69a82b1ac
	.dword 0x579ad3f671812d14, 0x7cd5161820e55e0f
	.dword 0x2b296b50f6322ad5, 0x8d62efb799639c66
	.dword 0xd381aef7af565e46, 0x4e7f65b436f45773
	.dword 0xcc9c69886095290a, 0xe3e7300d7f007939
	.dword 0x1ce49a5260283570, 0xe535b99c295f74e5
	.dword 0x6dd103725852ecf7, 0xcbed2e4366780aec
	.dword 0x614005202ffc5315, 0xdc34b8652266ab70
	.dword 0x11655a454ac54833, 0xae38a1971e3d1ae8
	.dword 0xfdfe8a516e1178fc, 0x449f4a96c3853cfe
	.dword 0x5f7c244b03197dd7, 0xfc412e7b946b29bb
	.dword 0x6d1b1728fa80eeb1, 0x7981652e9a90f0e1
	.dword 0xa6cabb611c536eff, 0x9b87591969d0af97
	.dword 0x8c7161bf2bf7f603, 0xf471a41d4957dc4b
	.dword 0x52ea7b789ad9d74d, 0x0aa547c816d0ecd3
	.dword 0x6936af7ff27b4f84, 0xe9dbb4c71afebad5
	.dword 0xdf0771180f9d9966, 0x2dc555988f7f4a69
	.dword 0xae54ebaa6866cf0c, 0x8b3d908428a1d6fc
	.dword 0x554657d9172e1b72, 0xfb6874ccde964a77
	.dword 0x31a20dd2371b0036, 0x8ce187221cfa829f
	.dword 0x5c7be8e83f4cb3a0, 0xb5a6615ac12c08be
	.dword 0xe12dd05eb10adae2, 0xf3df19611d0b1f83
	.dword 0xaf0f79875dd124a0, 0xf751a36de7464b26
	.dword 0x7f1fb70c471b87b1, 0x406ca3765a13b7cf
	.dword 0x9722e98c2bf12a27, 0x9fa961e41fb02238
	.dword 0x2fdf656a0b88348c, 0xbfcbd78957512690
	.dword 0xb559e1e0893d156f, 0x928304d15fb319a2
	.dword 0xdb81455b48bbf91e, 0x305b0836fc48d036
	.dword 0xe8da630321e379b4, 0x5615a7fa4995f8b7
	.dword 0xc8b17d98ced3cb55, 0xe995431022a2eb15
	.dword 0xa860a384540de8b8, 0xd2d15d5a8f0312ec
	.dword 0xa497382d7eba83e5, 0x690b3b1a6cd557e5
	.dword 0x7d803e8a1868bf3f, 0xdcec3fa14eb8285c
	.dword 0x606a38f7c610f2c5, 0x7c9f034bd9210a43
	.dword 0x9c6cb24d62280194, 0xba8f54b15721d645
	.dword 0xeab4c42d335403af, 0x418c9913b2a4012e
	.dword 0xc3e32e9be31b4803, 0x8ccd401f09c49789
	.dword 0xcf7bd4d505f2f2a4, 0xd7093ed23881cf8a
	.dword 0xaa0fb35960a2bb5c, 0x5cccc5b87595552e
	.dword 0x37c7a349a2479067, 0xf283a65a9164b4a0
	.dword 0x3c877ef7ce972177, 0x91d11bf920a386df
	.dword 0x96467bbc1da296fd, 0x7aceeb7667d9449c
	.dword 0xe2b2cd043576f9aa, 0xc00a0e94e3b6e368
	.dword 0x8c03e4aeaade0e33, 0xeec25e61da46a10e
	.dword 0xc33fe49b016aa954, 0x1355f0f22cc2a13d
	.dword 0x356e157a8c27c018, 0xa3181e4f3f85416a
	.dword 0xc67976ecb7f1b856, 0x145f60abf75046f4
	.dword 0x1d23bccb52f5bd7e, 0xd29483df9f564b88
	.dword 0xb09a4dc03a4b1d95, 0x29c0d810cc440bc6
	.dword 0x8744171da356f27d, 0x12c05baea43d7c24
	.dword 0x387849eeaaea9b7a, 0x021810a4249cc812
	.dword 0xa53b55496411caf1, 0xfebff0c93a7f9f5f
	.dword 0x7020b1e5c48d2c71, 0x0733359a9d1175db
	.dword 0x874552f44142e6f7, 0xd110e72e0647993c
	.dword 0x2e3fd027f1be7f6d, 0x15c1e66082ae4145
	.dword 0x4e209d17ab6ddf74, 0x3438e6525933fe24
	.dword 0x686de1c9bbe18463, 0xf834091462d3291b
	.dword 0x34abc88709321a8e, 0xc9af139f55cf3b63
	.dword 0x97bb54f5390e08ca, 0x8eb06d0873362f4c

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
