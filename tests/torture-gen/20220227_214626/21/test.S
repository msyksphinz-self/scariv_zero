// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x4, test_memory-6
	la x16, test_memory+2308
	lhu x8, 992(x4)
	addi x2, x0, 1926
	la x5, test_memory+1286
	addi x31, x0, 1223
	addi x30, x0, 27
	sltu x22, x9, x5
	la x23, test_memory-1292
	addi x13, x0, 1
	la x15, test_memory+146
	addi x3, x0, -1960
	lhu x10, -2020(x16)
	addi x22, x0, -697
	addw x28, x31, x31
	addi x7, x0, 232
	mulhu x11, x30, x7
	addi x27, x0, 1358
	xor x4, x22, x22
	sd x13, 1740(x23)
	addi x9, x0, 1406
	srlw x29, x3, x27
	remuw x20, x5, x17
	sw x14, 458(x15)
	slliw x17, x17, 8
	la x18, test_memory+215
	addi x1, x0, -1832
	or x12, x28, x28
	sw x21, 97(x18)
	addi x26, x9, 598
	la x25, test_memory-12
	sll x13, x13, 63
	addw x6, x2, x1
	lh x14, -1058(x5)
	sd x11, 236(x25)
	addi x8, x0, 1981
	addi x21, x0, -1
	addi x17, x0, 1185
	addi x31, x0, -696
	blt x0, x0, crash_backward
	xori x20, x15, 1315
	ori x3, x13, -1730
	addi x23, x0, 0
	la x1, test_memory+2132
	xor x21, x21, x13
	and x24, x29, x21
	rem x28, x24, x24
	sltu x9, x17, x17
	la x25, test_memory+1815
	remuw x22, x6, x25
	and x11, x8, x16
	sb x8, -1292(x1)
	la x11, test_memory-245
	or x19, x26, x13
	sllw x15, x29, x29
	sw x24, -1363(x25)
	bltu x19, x24, crash_forward
	addi x26, x0, -547
	mul x6, x1, x16
	addi x22, x0, -538
	addi x7, x7, -1757
	srl x17, x22, x22
	la x27, test_memory+385
	or x9, x6, x17
	lh x20, 621(x11)
	mulh x3, x25, x9
	sw x14, -341(x27)
	addi x12, x0, 1
	addi x18, x0, -125
	addi x16, x0, 0
	addi x29, x0, 796
	sltu x14, x8, x18
	divuw x2, x31, x26
	sll x12, x12, 63
	addi x5, x0, -1
	xor x30, x29, x29
	xor x5, x5, x12
	and x10, x3, x5
	or x4, x10, x12
	addi x16, x0, 1026
	addi x11, x0, 1
	addi x10, x0, 1
	la x31, test_memory+255
	divw x19, x16, x16
	xor x18, x0, x0
	sw x5, 337(x31)
	sltu x15, x17, x20
	slti x30, x18, -1043
	mulh x7, x24, x24
	bltu x0, x0, crash_backward
	la x12, test_memory-539
	addi x23, x0, -564
	addi x24, x0, -1773
	sw x15, 791(x12)
	sll x11, x11, 63
	mulhsu x25, x24, x24
	addi x13, x0, -1053
	addi x29, x0, 1597
	blt x0, x0, crash_forward
	addi x3, x0, 800
	rem x4, x25, x21
	sll x5, x23, x5
	sll x10, x10, 63
	addi x1, x0, -1196
	addi x31, x0, 1642
	addi x14, x0, -1
	srlw x22, x29, x1
	sraw x8, x23, x13
	addi x30, x0, -1252
	la x25, test_memory+541
	addw x27, x3, x3
	la x17, test_memory-975
	lh x7, 53(x25)
	remu x12, x30, x30
	la x3, test_memory+527
	addi x16, x0, -1292
	la x9, test_memory-1053
	sw x29, 1281(x9)
	la x4, test_memory-1127
	lwu x24, -375(x3)
	addi x2, x0, -1
	addi x7, x0, 784
	remuw x8, x19, x21
	addi x30, x0, -572
	la x1, test_memory+86
	xor x2, x2, x11
	la x3, test_memory-491
	addi x27, x7, 702
	lbu x13, 4(x1)
	mulw x5, x22, x21
	xor x22, x14, x14
	mul x24, x24, x24
	addi x13, x16, 0
	sraw x9, x14, x31
	la x19, test_memory+2016
	bgeu x7, x27, crash_backward
	sb x6, -1279(x19)
	la x8, test_memory+600
	mulhsu x18, x31, x16
	sb x12, 184(x8)
	add x21, x7, x12
	bltu x23, x23, crash_forward
	sh x16, 1301(x4)
	addi x1, x13, 0
	bltu x13, x1, crash_forward
	addi x7, x0, 1
	xor x14, x14, x10
	sll x7, x7, 63
	and x20, x29, x2
	lb x15, 1716(x17)
	srliw x29, x1, 28
	la x21, test_memory-757
	or x6, x22, x11
	andi x4, x31, -1574
	la x9, test_memory+448
	lh x5, 390(x9)
	lb x31, 1119(x21)
	lhu x12, 1281(x3)
	la x4, test_memory+1019
	lhu x19, -497(x4)
	addi x22, x0, -200
	la x12, test_memory+2879
	la x21, test_memory-1264
	and x27, x22, x22
	addi x23, x0, -1557
	addi x15, x0, 1702
	addi x31, x0, -2048
	and x26, x5, x14
	sra x25, x30, x23
	or x28, x26, x10
	remw x6, x14, x21
	srlw x5, x20, x20
	la x8, test_memory-1256
	addi x24, x0, 0
	la x6, test_memory+1280
	sb x13, -1948(x12)
	la x4, test_memory+711
	la x3, test_memory+2834
	addi x23, x0, -69
	la x9, test_memory+2441
	or x29, x15, x31
	srlw x27, x13, x13
	la x25, test_memory-371
	addi x18, x0, 0
	sd x29, -2002(x3)
	la x12, test_memory+2556
	sd x14, 1336(x8)
	lw x17, 1408(x21)
	addi x11, x0, -1738
	la x19, test_memory-713
	lh x2, -559(x4)
	lwu x22, 751(x25)
	bge x28, x26, crash_backward
	lbu x5, -999(x6)
	addi x25, x0, 1220
	addi x21, x0, -467
	addi x22, x0, 0
	lwu x31, -2040(x12)
	addi x17, x0, 863
	addi x24, x0, -59
	addi x29, x0, 1995
	divw x28, x24, x14
	divu x3, x21, x24
	addi x18, x0, 297
	mulhu x26, x3, x19
	la x24, test_memory-1285
	sw x20, -1973(x9)
	la x12, test_memory-852
	lb x20, 1188(x19)
	addi x6, x28, 0
	addi x15, x29, 1660
	remw x30, x23, x11
	addi x2, x0, 198
	addi x10, x0, 0
	divu x14, x25, x25
	and x27, x17, x18
	addi x9, x0, 1
	srlw x21, x7, x7
	srli x18, x3, 25
	addi x1, x0, -1
	addi x31, x0, -1589
	addi x30, x0, -1953
	divuw x17, x12, x9
	addi x20, x0, -1522
	la x22, test_memory+2663
	addi x5, x31, -287
	sb x29, 1571(x12)
	srl x25, x30, x20
	addi x4, x0, -819
	lb x3, 1553(x24)
	la x14, test_memory+268
	la x26, test_memory-1884
	lbu x29, 1954(x26)
	lb x23, -235(x14)
	sraw x8, x2, x4
	la x12, test_memory+654
	lb x17, 189(x12)
	addi x8, x9, 0
	la x29, test_memory+817
	slliw x14, x25, 25
	lhu x26, -379(x29)
	addi x30, x0, 1
	sll x9, x9, 63
	la x17, test_memory+703
	addi x2, x0, 711
	xor x1, x1, x7
	la x21, test_memory-1513
	addi x28, x6, 0
	addi x15, x0, -1
	xor x15, x15, x9
	addi x23, x8, 0
	and x16, x31, x1
	la x24, test_memory+1958
	or x13, x20, x7
	sll x30, x30, 63
	lw x11, -1775(x22)
	slt x27, x0, x0
	blt x6, x28, crash_forward
	lh x12, -635(x17)
	and x10, x12, x15
	addi x20, x0, -1
	sd x10, -1926(x24)
	lb x3, 1550(x21)
	xor x20, x20, x30
	or x19, x30, x9
	bgeu x10, x19, crash_backward
	la x14, test_memory+2454
	and x25, x13, x20
	or x18, x28, x30
	lh x26, -1552(x14)
	beq x25, x18, crash_backward
	rem x4, x2, x2
	addi x25, x0, 1406
	addi x26, x0, 1
	addi x6, x0, 1
	sll x26, x26, 63
	addi x2, x19, 0
	la x30, test_memory+781
	la x16, test_memory-977
	lb x19, -477(x30)
	addi x9, x0, 111
	divuw x24, x25, x25
	addi x21, x24, -262
	addi x27, x2, 0
	addi x5, x0, -566
	sd x4, 1921(x16)
	addi x12, x0, -1
	addi x18, x0, 243
	addi x4, x18, 1457
	addi x28, x0, 606
	or x14, x3, x31
	addi x20, x28, 195
	xor x12, x12, x26
	la x1, test_memory-1009
	lh x10, 1529(x1)
	and x23, x21, x12
	divw x3, x9, x5
	or x15, x23, x26
	sll x6, x6, 63
	addi x11, x0, -1
	xor x11, x11, x6
	bge x28, x20, crash_forward
	and x31, x8, x11
	or x13, x24, x6
	bltu x13, x31, crash_backward
	mul x8, x28, x29
	la x11, test_memory+1529
	subw x3, x14, x14
	divuw x22, x21, x21
	la x2, test_memory-1818
	addi x6, x0, 1
	divuw x13, x15, x17
	mulw x15, x16, x16
	la x28, test_memory-715
	la x4, test_memory+2031
	addi x19, x0, 0
	sh x12, -1985(x4)
	addi x10, x0, 1
	lb x5, -1090(x11)
	rem x1, x30, x16
	lhu x20, 761(x28)
	addi x21, x0, -331
	mul x30, x21, x21
	mulh x15, x8, x8
	div x11, x7, x7
	sll x10, x10, 63
	addi x9, x0, 0
	bne x19, x9, crash_forward
	mulhsu x20, x27, x20
	xor x13, x2, x31
	remu x11, x16, x16
	la x28, test_memory+112
	rem x15, x7, x15
	la x30, test_memory+2137
	sh x21, 1846(x2)
	addi x29, x0, 1
	sh x15, -1585(x30)
	la x1, test_memory+1529
	add x22, x28, x28
	sw x25, -1313(x1)
	la x24, test_memory-1435
	addi x4, x0, -1095
	la x7, test_memory-992
	lhu x21, -84(x28)
	la x31, test_memory-815
	lb x17, 1990(x7)
	addw x5, x4, x4
	addi x16, x0, -1
	sb x23, 1105(x31)
	sll x6, x6, 63
	sll x29, x29, 63
	addi x12, x0, -1
	xor x12, x12, x29
	and x25, x2, x12
	xor x16, x16, x10
	addi x3, x0, -1
	lhu x26, 1725(x24)
	or x18, x25, x29
	and x27, x5, x16
	or x23, x27, x10
	addi x4, x0, -38
	la x17, test_memory+2262
	xor x3, x3, x6
	and x14, x31, x3
	addi x24, x0, -1797
	addi x15, x0, 1410
	blt x25, x18, crash_forward
	la x9, test_memory+337
	addi x2, x0, 1879
	div x11, x4, x2
	addi x5, x0, 109
	lwu x22, 323(x9)
	addi x20, x0, 435
	sltu x19, x24, x5
	blt x23, x23, crash_backward
	sh x5, -1570(x17)
	addi x7, x0, 1778
	or x8, x14, x6
	remw x28, x15, x7
	remw x1, x29, x24
	la x26, test_memory-1731
	sub x21, x5, x5
	la x13, test_memory+1088
	subw x30, x20, x20
	la x2, test_memory+2283
	sh x11, -1048(x13)
	addi x7, x0, 1
	lh x31, 1771(x26)
	addi x4, x19, 0
	mulw x6, x1, x1
	addi x14, x0, -1130
	la x12, test_memory+2168
	la x3, test_memory+560
	la x20, test_memory+722
	addi x9, x4, 0
	sll x1, x16, x16
	lbu x25, -1463(x2)
	divw x6, x30, x31
	mulhu x16, x14, x14
	la x10, test_memory-1160
	addi x19, x0, 406
	sra x15, x19, x19
	divw x5, x23, x15
	lb x8, 1996(x10)
	addw x26, x31, x14
	srl x24, x21, x10
	la x13, test_memory-888
	la x31, test_memory+1447
	lwu x11, -1872(x12)
	sll x7, x7, 63
	remu x18, x23, x23
	sh x6, -262(x3)
	addi x27, x0, -1
	lh x28, -414(x20)
	div x2, x1, x29
	addi x10, x0, 1
	sw x29, -799(x31)
	and x19, x2, x2
	addi x30, x0, 297
	addi x17, x0, 1445
	sll x10, x10, 63
	lhu x23, 1542(x13)
	xor x27, x27, x7
	addi x8, x0, -1
	or x29, x30, x17
	xor x8, x8, x10
	and x16, x1, x8
	and x22, x27, x27
	or x1, x12, x10
	or x21, x29, x7
	blt x22, x21, crash_forward
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffffffffff83
reg_x1_init:	.dword 0x8e8d344c4eefb858
reg_x2_init:	.dword 0x0000000000000000
reg_x3_init:	.dword 0xffffffffffffffff
reg_x4_init:	.dword 0x0800000000000001
reg_x5_init:	.dword 0x4cf0ab00237bb31f
reg_x6_init:	.dword 0x90c8db880a753615
reg_x7_init:	.dword 0x0000000000000004
reg_x8_init:	.dword 0xfffffffffffffffb
reg_x9_init:	.dword 0x550f949eae7b75d6
reg_x10_init:	.dword 0xffffffff80000003
reg_x11_init:	.dword 0xffffffffffff8009
reg_x12_init:	.dword 0xffffffffffffffff
reg_x13_init:	.dword 0xffffffff80000004
reg_x14_init:	.dword 0x97ee298c42dc5dc3
reg_x15_init:	.dword 0x0000000000000000
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0x8659d7aec692ea1c
reg_x18_init:	.dword 0x4258ba719c5e6013
reg_x19_init:	.dword 0xf89c158c6fa1905e
reg_x20_init:	.dword 0xffffffffffffffff
reg_x21_init:	.dword 0x5ab508e79498f6aa
reg_x22_init:	.dword 0x170c88e23436dd04
reg_x23_init:	.dword 0x3d5aba58360e8c9f
reg_x24_init:	.dword 0xe22ea1e4f11cc501
reg_x25_init:	.dword 0xffffffffffffff88
reg_x26_init:	.dword 0x9bc2edb2d0ae2459
reg_x27_init:	.dword 0x40595fbc37c27d99
reg_x28_init:	.dword 0x176d47fb2dcb4a9e
reg_x29_init:	.dword 0xfee6d7d4445c647f
reg_x30_init:	.dword 0xffffffffffffffff
reg_x31_init:	.dword 0xffffffffffffff84

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x471064877cf7aec1
reg_x1_output:	.dword 0xc48f9aaaef9ded8e
reg_x2_output:	.dword 0xec1454762ebad79e
reg_x3_output:	.dword 0x7bc62a3872197f43
reg_x4_output:	.dword 0x65f6a81cb861cd72
reg_x5_output:	.dword 0x3c7468163a9589ae
reg_x6_output:	.dword 0x423ffc976013dd8d
reg_x7_output:	.dword 0x2ce757b6c6795a55
reg_x8_output:	.dword 0x9066a6b53ae67e7e
reg_x9_output:	.dword 0xa7b15ff8b12fa22b
reg_x10_output:	.dword 0x549111fdbaad5cc6
reg_x11_output:	.dword 0x56996bce527ab36c
reg_x12_output:	.dword 0x78708bf62871fecf
reg_x13_output:	.dword 0x91c8f11db16e48ad
reg_x14_output:	.dword 0x86e6ffa2c62d341c
reg_x15_output:	.dword 0xf19901eadb56292e
reg_x16_output:	.dword 0x394e654c254bc3c0
reg_x17_output:	.dword 0xc4bccbb58a723e72
reg_x18_output:	.dword 0xad60ea830a2b0e14
reg_x19_output:	.dword 0x0f8a292085e5ef11
reg_x20_output:	.dword 0xdd2d16663e5195a4
reg_x21_output:	.dword 0xb20729d4fbc1d2cc
reg_x22_output:	.dword 0x07716e2176f2a369
reg_x23_output:	.dword 0x4b6db4a554ec13e2
reg_x24_output:	.dword 0x426f5db5e28b7a3d
reg_x25_output:	.dword 0xc944a7f34a1d11a1
reg_x26_output:	.dword 0x9dfd68ffaa5bcd8b
reg_x27_output:	.dword 0x48401c51c66b183f
reg_x28_output:	.dword 0x6f9ce8f452626f45
reg_x29_output:	.dword 0xec10ad6bf03941ea
reg_x30_output:	.dword 0x94d7d92a2fa2691b
reg_x31_output:	.dword 0xa363ed26620ad51d

// Memory Blocks
	.align 8
test_memory:
	.dword 0x596f799b6803f4e9, 0xdcd66500a2fdb434
	.dword 0xf82cc8ac0c680870, 0x12b9c9c28fc3b242
	.dword 0x5ab0196ac3bc6848, 0xbc984554fa1be122
	.dword 0x4ead4a1748497615, 0xc087faeefb4a2ccb
	.dword 0x21d65ee536522df8, 0x69f029708f1cd7e8
	.dword 0xc18e85009fb20748, 0x599390141df4ada8
	.dword 0xa49bc1d1baabac82, 0xd9c9f940ce3dfcd2
	.dword 0xfbadd2823dd6be7d, 0xac0d0fc04615b01b
	.dword 0xbdf4ffbd6f4a16e1, 0x509ae21505b717bb
	.dword 0xf96be9b82d033dda, 0x2832b8259804383d
	.dword 0x77239073c7630707, 0xb9171f217943b296
	.dword 0xe3111c4327a289b8, 0x0dca4f9c124c9979
	.dword 0xa0d12a8a9aa2e859, 0x33a851fd6109c7e9
	.dword 0xb3cca2c897ad9b28, 0x93d4851a93c38d0f
	.dword 0x4d6757d7d1e2322e, 0x60266b24c437c14d
	.dword 0xdfa0f972dd69c26b, 0xe21be0c23f759892
	.dword 0xf21519f82e577253, 0xd195227a10f3c5f0
	.dword 0x62cf4c6e69a0d979, 0x468144535facc46b
	.dword 0x70349ec91010278a, 0x91e7ffbf2c765912
	.dword 0xa593f46bd2bd467c, 0xaa27fbb51686a254
	.dword 0x0d0304ee2fba6c06, 0x9a0ef31d776a488b
	.dword 0x6746031fcf73ce52, 0xece35d6fbfd4a3dd
	.dword 0x69dc304ef7096ff0, 0xa8cd7d9eebebeb44
	.dword 0x742bdfc4ece5370e, 0x7787fb33e540c0ea
	.dword 0xe36cae95823ec3e6, 0xf11e69b70bc1afb9
	.dword 0x4196f397e961ba76, 0x080262520af06e32
	.dword 0x5a8babb25ca27376, 0xaf2613b6cea7fa7e
	.dword 0xac186658d8384887, 0x74556c41681fe3c2
	.dword 0x4daef657b8f3efa8, 0xd0f5425921ca54b7
	.dword 0xfbe0eace963b99ed, 0xe3e21f1ad46fb379
	.dword 0x562b147d3e1dc971, 0x869e8f37d2c3ea9e
	.dword 0x039d9b40a1e7128c, 0xc89b1e1ccfdeaf89
	.dword 0x90b167dd7fb63c41, 0xbb605f53f1c15a00
	.dword 0xa663e5fd1d4d73fa, 0xb405aa2990aa20fc
	.dword 0x34be6276e1168876, 0x2fe56b91cf9dd0c0
	.dword 0x517e89d39b3b6002, 0xfe2a32496f8e4e2d
	.dword 0xa2e9cb0ef1131de6, 0x2bddd939be157b53
	.dword 0xff2da29c5c37ab22, 0x16d67422e021514b
	.dword 0x7e4b11ab439e965a, 0x8372e276a1674343
	.dword 0x27abc5accb4b7f0d, 0x43d32c8660423ed9
	.dword 0xf963b4176de1800d, 0xfb570edb33ffddad
	.dword 0x9e0a2e655dbc4d2b, 0x80ef57e46ed69c31
	.dword 0x5b41b2611090f831, 0xec74fbd7960829c2
	.dword 0xb6b5faa474219114, 0x310302d3a75025fc
	.dword 0xe5cc135ccb8e156a, 0x667eb54763f0df49
	.dword 0x3db877507e806319, 0x514baa8f94b4e6bb
	.dword 0xb26b79208d182251, 0xf6df9de518558d1c
	.dword 0xb3047cd37056dabb, 0xeac42d75ac239d42
	.dword 0xce80c589ee1ba7f2, 0xa7d2e7d0eed0e7a6
	.dword 0xfb62db9784c14131, 0x8f5a4b88240e7337
	.dword 0xdd5bceb63468484e, 0xc1a09d0fd69c676c
	.dword 0x34cfd8916e2313e7, 0xcb23b6ec0aa60397
	.dword 0xc9a4238822d768da, 0x5643380945153781
	.dword 0xa55bb9b44ffdd6fa, 0x93f4b46c132eb132
	.dword 0x9c65e027f6adacfe, 0xa5f7cc09e180740f
	.dword 0xcbe062794cdfb7bc, 0xebfa4bf60f3a4d2a
	.dword 0x6434927fd0c14098, 0xf97abdc114a8b8d5
	.dword 0x721e005e0593ff36, 0x1e3a091cee000d78
	.dword 0x33162ec0502ef276, 0xa4f30bc2802effa4
	.dword 0x4010c76321ff54a1, 0x36194b96694cd367
	.dword 0x9e2813da53a81edf, 0x84ce270842a8cee1
	.dword 0xb891be8ddf51cfec, 0x954e27bc3cc5c217
	.dword 0xd6302005ada36a0b, 0x6c0e5b6cb6e5b807
	.dword 0xb7949c68aa78dc3a, 0xd5dbd70ce17724fb

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
