// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x25, test_memory-627
	la x12, test_memory+389
	la x26, test_memory+1617
	lh x13, 793(x25)
	mulhsu x16, x20, x20
	remu x27, x15, x15
	la x13, test_memory+610
	divuw x1, x22, x26
	sw x17, -721(x26)
	addi x25, x0, -1154
	addi x6, x0, 0
	addi x29, x0, 781
	mulhu x18, x15, x6
	srl x21, x25, x25
	la x19, test_memory+794
	la x25, test_memory+434
	lh x4, -319(x12)
	addi x2, x0, 1
	addi x24, x0, 0
	slti x31, x18, -1758
	lbu x9, -299(x19)
	blt x0, x0, crash_forward
	remu x20, x14, x14
	la x23, test_memory+580
	la x14, test_memory+2065
	la x26, test_memory+1741
	addi x9, x0, 1090
	la x28, test_memory+946
	sb x24, 475(x25)
	mulhsu x12, x25, x25
	addi x27, x0, -1021
	sub x1, x0, x0
	addi x19, x0, -181
	lw x8, -298(x13)
	lh x5, 104(x23)
	lwu x22, -1213(x26)
	addi x10, x0, 1163
	sll x2, x2, 63
	addi x16, x0, -79
	srl x18, x27, x16
	srlw x7, x8, x21
	add x4, x9, x19
	addi x18, x0, 1432
	addi x23, x0, 1
	sh x27, -630(x28)
	la x12, test_memory-213
	sraiw x21, x8, 30
	lwu x27, 581(x12)
	sll x23, x23, 63
	addi x5, x0, -1
	addi x16, x18, 1983
	div x17, x29, x10
	la x24, test_memory+610
	la x26, test_memory+170
	lbu x1, 124(x24)
	ld x3, -1921(x14)
	la x22, test_memory+2045
	la x31, test_memory+2392
	sb x17, 475(x26)
	xor x5, x5, x23
	sw x6, -1117(x22)
	addi x11, x0, -1
	lhu x20, -1660(x31)
	xor x11, x11, x2
	and x25, x9, x5
	and x15, x4, x11
	slti x28, x12, 754
	or x7, x31, x23
	or x30, x26, x2
	bgeu x15, x30, crash_forward
	addi x18, x0, 1498
	divw x31, x26, x9
	div x21, x6, x6
	la x19, test_memory+482
	subw x4, x1, x13
	addi x1, x18, 702
	la x17, test_memory+554
	lhu x6, 276(x17)
	la x25, test_memory-933
	la x14, test_memory-130
	addi x11, x0, 1
	la x18, test_memory+1178
	addi x12, x0, 375
	sh x6, -856(x18)
	la x26, test_memory-832
	addi x23, x0, -663
	addi x20, x0, -838
	la x5, test_memory-882
	la x4, test_memory+890
	mulw x8, x12, x12
	sll x11, x11, 63
	addi x7, x0, 1683
	lw x28, 1297(x25)
	divw x15, x23, x7
	addi x3, x0, 1
	sd x27, 1416(x26)
	lw x13, 1086(x14)
	addi x24, x0, 1415
	lw x2, 1198(x5)
	lb x9, 105(x19)
	sb x28, -576(x4)
	addi x1, x0, -1
	xor x1, x1, x11
	and x31, x9, x1
	remw x10, x20, x24
	or x30, x27, x11
	subw x27, x11, x11
	addi x9, x27, 0
	addi x17, x0, -1796
	addi x24, x0, -1014
	mul x12, x24, x24
	la x7, test_memory+1823
	and x13, x27, x27
	addi x23, x0, 230
	subw x20, x3, x3
	la x25, test_memory-1852
	addi x8, x9, 0
	la x21, test_memory+1176
	la x10, test_memory+1012
	add x20, x3, x3
	or x2, x23, x23
	la x5, test_memory+1344
	addi x12, x0, 1
	sll x3, x3, 63
	remuw x24, x23, x15
	sb x12, -1787(x7)
	lh x27, 2004(x25)
	lw x4, -1000(x5)
	addi x26, x0, 1038
	addi x29, x0, -1
	xor x29, x29, x3
	srl x9, x10, x10
	la x4, test_memory+2194
	addi x2, x0, -813
	sraw x23, x18, x24
	sb x20, -1741(x4)
	addi x31, x0, 1095
	and x8, x15, x11
	addi x1, x0, 1264
	addi x28, x0, 159
	mulw x5, x1, x1
	addi x11, x0, 1073
	addi x7, x0, 0
	addi x9, x0, 826
	and x16, x1, x29
	sh x24, -1022(x21)
	addi x8, x0, -977
	lbu x19, -686(x10)
	mulw x30, x7, x7
	sub x14, x26, x28
	addi x6, x17, -303
	slt x4, x9, x8
	sraw x24, x11, x11
	sub x20, x2, x31
	or x22, x16, x3
	slli x19, x18, 33
	bgeu x16, x22, crash_backward
	addi x27, x0, 1092
	la x4, test_memory+2727
	lh x23, -2019(x4)
	la x24, test_memory+2202
	bge x6, x17, crash_forward
	mulw x10, x10, x31
	addi x2, x20, 503
	la x8, test_memory+1839
	bltu x0, x0, crash_forward
	addi x1, x0, 703
	addi x31, x0, 459
	la x30, test_memory+388
	srai x16, x18, 58
	addi x26, x31, 1135
	slti x4, x29, -2037
	xori x20, x11, 1275
	la x9, test_memory+2459
	remw x2, x16, x25
	xor x7, x6, x6
	lh x5, -1374(x24)
	la x29, test_memory+586
	la x16, test_memory+790
	srl x14, x27, x1
	sb x5, -219(x16)
	sh x7, -338(x29)
	srli x21, x13, 48
	la x14, test_memory-1228
	sll x12, x12, 63
	la x10, test_memory+31
	la x25, test_memory-324
	la x16, test_memory-1007
	sb x27, 429(x25)
	divu x31, x1, x1
	lh x28, -929(x8)
	lhu x22, 575(x10)
	addi x20, x0, 1641
	addi x7, x0, -1939
	addi x19, x0, 547
	sw x11, 1615(x16)
	addi x29, x0, 1029
	lw x11, -280(x30)
	la x26, test_memory+1084
	sw x6, -296(x26)
	addi x3, x0, -1663
	sllw x10, x19, x17
	sh x3, 1520(x14)
	addi x8, x0, 1
	addi x21, x0, 1540
	slt x27, x29, x21
	addi x16, x0, -991
	la x14, test_memory-101
	lh x10, 1045(x14)
	addi x6, x0, 54
	la x25, test_memory+1267
	sra x2, x20, x7
	sb x15, -1632(x9)
	sll x22, x10, x10
	addi x1, x0, 963
	addw x30, x16, x1
	sll x8, x8, 63
	lwu x28, -663(x25)
	mulh x23, x3, x6
	srai x4, x16, 32
	addi x17, x19, 757
	addi x10, x16, 0
	addi x21, x0, 516
	addi x1, x0, 1730
	remuw x4, x9, x9
	addi x27, x0, 153
	addi x15, x0, -1
	addi x29, x0, 1
	srli x2, x3, 6
	la x25, test_memory+602
	xor x15, x15, x12
	sh x27, 172(x25)
	mulhsu x16, x1, x27
	addi x6, x0, 534
	addi x9, x21, 1627
	beq x19, x17, crash_forward
	addi x30, x0, 663
	addi x3, x0, 238
	beq x21, x9, crash_backward
	addi x11, x0, -1
	addi x23, x10, 0
	xor x11, x11, x8
	la x20, test_memory+914
	addi x21, x0, -557
	and x31, x8, x11
	mulh x17, x6, x16
	sll x29, x29, 63
	addi x5, x0, -1
	and x24, x30, x3
	srlw x14, x6, x6
	addi x19, x0, 1649
	addi x16, x21, -470
	srlw x9, x19, x19
	bge x16, x21, crash_forward
	or x26, x2, x8
	bge x26, x31, crash_forward
	bltu x10, x23, crash_forward
	divuw x21, x5, x10
	addi x27, x0, -1746
	blt x17, x17, crash_forward
	la x21, test_memory+177
	addi x9, x0, 2036
	addi x26, x0, -1442
	lh x22, -320(x20)
	bne x0, x0, crash_backward
	lw x11, 755(x21)
	xor x5, x5, x29
	addi x8, x0, 1
	sll x8, x8, 63
	and x18, x28, x15
	addi x25, x0, -1
	addi x6, x0, 1
	or x13, x18, x12
	la x4, test_memory+734
	addi x16, x0, -1135
	sll x6, x6, 63
	sd x11, -158(x4)
	remw x17, x26, x26
	xor x25, x25, x8
	addi x30, x0, -1
	addi x22, x0, 1120
	bgeu x18, x13, crash_forward
	sllw x10, x27, x16
	xor x30, x30, x6
	and x24, x30, x30
	la x20, test_memory+740
	lwu x21, -528(x20)
	and x7, x16, x5
	addi x3, x0, 124
	addi x1, x0, 158
	and x19, x15, x25
	sllw x11, x22, x22
	or x14, x28, x6
	or x28, x7, x29
	addw x31, x3, x1
	addi x18, x0, 1496
	addi x23, x9, 1288
	divw x13, x18, x18
	addi x16, x0, 229
	la x30, test_memory-1216
	slli x14, x29, 56
	la x22, test_memory-711
	lb x31, 1378(x30)
	divuw x3, x12, x25
	ori x17, x11, 716
	and x20, x25, x15
	lh x15, 1437(x22)
	srl x12, x6, x6
	slti x6, x19, 1401
	la x27, test_memory+19
	or x2, x19, x8
	divu x1, x16, x16
	addi x10, x0, 1
	sll x10, x10, 63
	addi x4, x0, -1
	bltu x13, x13, crash_backward
	xor x8, x30, x30
	addi x28, x0, -1310
	la x18, test_memory+442
	la x17, test_memory-792
	addi x14, x0, 865
	addi x31, x0, 0
	la x6, test_memory+2126
	addi x13, x0, -862
	addi x2, x14, 40
	sd x15, 1744(x17)
	xor x4, x4, x10
	sra x22, x28, x28
	la x9, test_memory+1415
	and x20, x7, x7
	sh x3, -1239(x9)
	and x24, x26, x4
	addi x16, x0, 0
	lwu x15, -266(x18)
	lw x21, 21(x27)
	or x11, x24, x10
	bltu x31, x16, crash_forward
	addi x19, x0, -1416
	srl x3, x26, x31
	la x30, test_memory+977
	la x23, test_memory+348
	la x8, test_memory-23
	lbu x26, 559(x23)
	sb x7, -907(x30)
	lwu x1, -1754(x6)
	bltu x0, x0, crash_backward
	mulh x29, x13, x19
	blt x2, x14, crash_forward
	la x5, test_memory-912
	sw x19, 1027(x8)
	la x25, test_memory+1411
	lhu x12, 1456(x5)
	sh x28, -867(x25)
	addi x19, x0, 1
	la x12, test_memory-42
	lb x28, 429(x12)
	addi x27, x0, 682
	la x14, test_memory-425
	mul x8, x16, x16
	la x21, test_memory-871
	la x22, test_memory-284
	sb x15, 1343(x14)
	addi x31, x27, 0
	addi x11, x0, 1
	addi x9, x31, 0
	la x14, test_memory-122
	addi x10, x0, -388
	addi x23, x0, 591
	addi x2, x0, 1
	la x8, test_memory-1828
	addi x15, x0, -1752
	sll x2, x2, 63
	addi x13, x0, -1
	sb x3, 669(x22)
	sll x11, x11, 63
	sll x19, x19, 63
	lw x28, 866(x14)
	addi x5, x0, -1
	rem x20, x23, x15
	blt x31, x9, crash_forward
	xor x5, x5, x11
	sllw x16, x27, x27
	sd x15, 2036(x8)
	addi x6, x0, -1
	mulhu x12, x10, x10
	add x22, x15, x15
	addi x3, x0, -761
	and x1, x10, x3
	xor x13, x13, x2
	addi x15, x0, 428
	addi x9, x1, 0
	and x26, x9, x5
	la x31, test_memory+632
	la x24, test_memory-412
	la x20, test_memory+1963
	xor x6, x6, x19
	and x30, x0, x13
	addi x3, x9, 0
	la x16, test_memory+923
	and x7, x21, x6
	or x17, x23, x19
	la x10, test_memory+1781
	lb x23, -876(x10)
	divuw x14, x22, x30
	addi x27, x0, 430
	addi x22, x0, 662
	or x25, x28, x2
	la x12, test_memory+2742
	addi x14, x0, 1576
	sub x28, x15, x27
	sw x27, -1207(x20)
	addi x3, x0, -719
	addi x19, x0, -1917
	lb x4, 1187(x24)
	sw x0, -1894(x12)
	addi x9, x0, 1888
	slti x6, x31, -973
	addi x15, x0, 1761
	bltu x25, x30, crash_backward
	or x29, x1, x11
	sra x7, x25, x21
	ld x1, 288(x31)
	lbu x18, 1273(x21)
	sh x19, -373(x16)
	mulhsu x10, x9, x15
	subw x8, x22, x22
	sllw x23, x14, x3
	remu x17, x19, x19
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffff80000002
reg_x1_init:	.dword 0xffffffffffffffff
reg_x2_init:	.dword 0xcd10845f9801b93f
reg_x3_init:	.dword 0xffffffff80000005
reg_x4_init:	.dword 0xffffffff80000009
reg_x5_init:	.dword 0x0ac8c94bd27a535d
reg_x6_init:	.dword 0xffffffffffffffff
reg_x7_init:	.dword 0xe34aac0826652079
reg_x8_init:	.dword 0xffffffffffffffff
reg_x9_init:	.dword 0xffffffffffff8001
reg_x10_init:	.dword 0x1f3f5430f91336f4
reg_x11_init:	.dword 0x0800000000000009
reg_x12_init:	.dword 0xffffffffffffffff
reg_x13_init:	.dword 0xcd1483500baceca9
reg_x14_init:	.dword 0x0800000000000007
reg_x15_init:	.dword 0x417b987d8a248dfb
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0xe28580ff5e064a1a
reg_x18_init:	.dword 0x681bc1db319782f4
reg_x19_init:	.dword 0x0800000000000006
reg_x20_init:	.dword 0xffffffffffffffff
reg_x21_init:	.dword 0x7c394683a4bc3263
reg_x22_init:	.dword 0xe0034f1bf35c894f
reg_x23_init:	.dword 0x2b471f9f12033090
reg_x24_init:	.dword 0x0800000000000005
reg_x25_init:	.dword 0xffffffff80000003
reg_x26_init:	.dword 0x8549d0012a05d375
reg_x27_init:	.dword 0xffffffffffffffff
reg_x28_init:	.dword 0xffffffffffffffff
reg_x29_init:	.dword 0x14706a01d72ab777
reg_x30_init:	.dword 0x46b495f5a0be9f28
reg_x31_init:	.dword 0xd8ed1a9595ef29f8

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x22c2ff1cbe495498
reg_x1_output:	.dword 0x3e3fdc82f2eca259
reg_x2_output:	.dword 0x322e9e5ae5ae2ddd
reg_x3_output:	.dword 0x2aeec492693e3b05
reg_x4_output:	.dword 0xaf399aa2317068de
reg_x5_output:	.dword 0x63681fba3fe9e40e
reg_x6_output:	.dword 0x7ebc7d2843285e08
reg_x7_output:	.dword 0xe88fdc5af30194b6
reg_x8_output:	.dword 0xb9c74301b79a827a
reg_x9_output:	.dword 0x548713123d6614ad
reg_x10_output:	.dword 0x07deb5b4b0db170c
reg_x11_output:	.dword 0x8acb237097bfecb3
reg_x12_output:	.dword 0x665e390c314f4393
reg_x13_output:	.dword 0x90dd67f1a0843d82
reg_x14_output:	.dword 0x9dc8222adb8e2262
reg_x15_output:	.dword 0x871db526bb35a0eb
reg_x16_output:	.dword 0x1fdbebe38a488014
reg_x17_output:	.dword 0x4d711836256f793f
reg_x18_output:	.dword 0x0eeadc4878865389
reg_x19_output:	.dword 0xfaf18884b04c52f0
reg_x20_output:	.dword 0x6558ef8139f5322d
reg_x21_output:	.dword 0x3a7a80b0129e3c76
reg_x22_output:	.dword 0x54c11bdeecf34480
reg_x23_output:	.dword 0x52b1b2c35e7a3876
reg_x24_output:	.dword 0x0c11433000b67ed1
reg_x25_output:	.dword 0x0e6a4ba4e9062e21
reg_x26_output:	.dword 0xc4636552c9a8224c
reg_x27_output:	.dword 0x853479d1e88afbda
reg_x28_output:	.dword 0xb29ee80f5908ca37
reg_x29_output:	.dword 0x82d22b4c18c2901b
reg_x30_output:	.dword 0xd146081f93718978
reg_x31_output:	.dword 0xca6536d2e2742c99

// Memory Blocks
	.align 8
test_memory:
	.dword 0x3f80c793080adc5a, 0xeeba64533fef37a5
	.dword 0xa1b7ed53489a7290, 0xe758089cf6173fd4
	.dword 0xca27ea0275151579, 0xd12e2858afba15e2
	.dword 0x4dfcb60cd4722ea5, 0x8531563b311320d3
	.dword 0x3b04fcf9f452b297, 0x6e08c074b1ed505a
	.dword 0x241c2a0329e573cc, 0x8b8b216b9807517e
	.dword 0x445029e7fc8f21fc, 0x164d87ae4f73e97b
	.dword 0xb3c0f6010e7c799f, 0x2242292205ea9ae6
	.dword 0x12853c9254a967b2, 0xd494b580269af913
	.dword 0xb6c0ba61b75025ba, 0xd1d4dc02d0574dba
	.dword 0x38ce198da15f9208, 0xfd56f85d361174d8
	.dword 0x2427699a39c8483f, 0x34be1aeb23ef12d2
	.dword 0xead584c860643e13, 0x9221e02a5fe888e0
	.dword 0xdcdff6ad7a34e853, 0xcf75cb678e384ba8
	.dword 0x8abc380049f02c28, 0x7dff18bdce168029
	.dword 0x6a5453b4b294a09e, 0xf0013a3cb49702da
	.dword 0xef2a49494641e464, 0x70987466503e3d12
	.dword 0x389ec05ee41a0bcf, 0xe93d4ddeca436caa
	.dword 0x8ab6e18ba0bd6b24, 0x84e2c66440bd41e0
	.dword 0x8f26686d86424116, 0x994c88faf15ff77e
	.dword 0xcb204302e69e058d, 0xef598d6b7d42493a
	.dword 0x4bc152368e8e60a8, 0xedd2dcee5590ec60
	.dword 0x9c0e1fbdeb6c0e05, 0xa7156e24856e6eae
	.dword 0x0db59d247c32303f, 0x03e94c4b78b79f7e
	.dword 0xf6584020c1a8d8b8, 0x5c477dace042e72a
	.dword 0x0f3410316b49c797, 0x94f35d58dcb330ab
	.dword 0xca0b79641262a814, 0x15e35c157f5d4983
	.dword 0x6525f87253684cf2, 0x9cc05c92ef48dbdd
	.dword 0x5ea6f41222a2b14d, 0x7f821ee1f54466f1
	.dword 0xbe68578b7d91c195, 0x88a26f25df95d9ad
	.dword 0x7a4bc28a01e730da, 0x47c80b8afa47b391
	.dword 0x04ce6235edf1de49, 0xca657575ceaccfda
	.dword 0x3dd8c781d11b8ef6, 0xeed721fce9b33ee2
	.dword 0x73854ec0f5e1ffdb, 0x5d4fbd989f40d1c6
	.dword 0xa92cec7ecdc09420, 0x0b987719975a3c49
	.dword 0xcfb3738d6310239c, 0xa69685d9827ff0f7
	.dword 0x2809a85cd136ad9b, 0x5de65f351bba1b8d
	.dword 0x716cb58fc8d8f3e1, 0x1df04f38427f5d97
	.dword 0x5d4fd5cd405c41ef, 0xfae16896fb38315b
	.dword 0xb45646d43126e484, 0x562effe434db16f5
	.dword 0x9f90d9d1fbf21566, 0x7ffa25fe5b3befc3
	.dword 0x3893b4f61a685f61, 0x510bd5c5b26b2c02
	.dword 0x3f2e1a42be77be90, 0x8079c918ce27aeb9
	.dword 0x15d747a8086f00da, 0x848f28f8eb308bd5
	.dword 0xbb80c44d78722abf, 0x50938d0c9d720495
	.dword 0xc3afaf2f1649e454, 0x9bbdfe4aefdb6628
	.dword 0x81c3e2eda84e328b, 0xe848f0f35f61ae93
	.dword 0x036d02e4e76d00b8, 0xc77769bdd48d1bd8
	.dword 0xadbac57b5f513e50, 0xd7aac257142e0954
	.dword 0x89370fb80eb794f3, 0x67abc109e2b7bf68
	.dword 0x894db61aa149faab, 0x2d40f7b9fc86195b
	.dword 0x7b2ef6a8822ba476, 0xf0579e17ea3d257f
	.dword 0x3597004910f31d01, 0xbea35b11d9c02391
	.dword 0x1eb61b4efa6883b6, 0x30ecb187e42f8565
	.dword 0xfd1a4755673a37f8, 0x7a8d04454e33d5c2
	.dword 0x353462512d3a74ad, 0x9012652c43d5a98a
	.dword 0x4c202ce407dc9ffc, 0x4af4a3b0a280ff1e
	.dword 0x9af7bfefaad15357, 0x60e84e8a84d4b000
	.dword 0x3170476c220c5fbb, 0x94f39ca74ac4d8b9
	.dword 0xb4071679c5705236, 0x3234715ebfa15afc
	.dword 0x96e368b9300f3caa, 0x9385efeb24ffde0b
	.dword 0x140264d853a8c6cf, 0xdb2752174f9af159
	.dword 0x1688346b5509cb7d, 0xa16cf635902e3570
	.dword 0x976a45014d72062b, 0x149fd855e071af14

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
