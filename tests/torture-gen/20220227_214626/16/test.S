// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x18, test_memory+403
	remu x9, x26, x14
	addi x8, x0, 2040
	la x11, test_memory+2763
	la x6, test_memory+1840
	addi x28, x0, -851
	la x26, test_memory+1509
	slliw x22, x17, 16
	mulhsu x16, x11, x13
	la x13, test_memory+1597
	addi x1, x0, 389
	addi x3, x0, -250
	sb x20, -1950(x11)
	slt x21, x28, x28
	sd x4, -1589(x13)
	sra x10, x8, x1
	addi x14, x0, -687
	addi x20, x0, 632
	lh x15, -1499(x26)
	la x1, test_memory+1881
	addi x12, x0, 1128
	mulhu x4, x14, x12
	rem x7, x8, x8
	addi x13, x0, 1091
	ld x10, -953(x1)
	srl x21, x13, x13
	la x28, test_memory+495
	lhu x17, 333(x18)
	addi x31, x0, 1
	la x5, test_memory+70
	lhu x15, 221(x28)
	sll x31, x31, 63
	la x24, test_memory+2089
	or x25, x3, x20
	addi x23, x0, -1
	sh x12, 170(x5)
	lbu x29, -1600(x6)
	sb x9, -1471(x24)
	addi x27, x0, -1837
	blt x0, x0, crash_forward
	addi x11, x0, 1
	xor x23, x23, x31
	addi x15, x0, 1
	sll x15, x15, 63
	divuw x9, x2, x30
	addi x7, x0, 962
	srlw x19, x27, x27
	sll x11, x11, 63
	mul x10, x4, x4
	addi x4, x0, -1
	divu x21, x7, x7
	xor x4, x4, x15
	srl x26, x2, x29
	and x30, x14, x23
	sub x14, x12, x27
	and x1, x18, x4
	addi x20, x0, 1076
	la x10, test_memory+1490
	addi x17, x0, 1
	remu x26, x15, x15
	srliw x5, x6, 13
	lbu x27, -1321(x10)
	or x12, x5, x15
	slt x29, x30, x30
	sll x17, x17, 63
	xor x14, x20, x20
	addi x8, x0, -1
	addi x19, x0, 1
	or x2, x30, x31
	la x3, test_memory-418
	lbu x7, 1382(x3)
	bltu x2, x30, crash_backward
	sll x19, x19, 63
	addi x24, x0, -1533
	addi x2, x30, 0
	addi x13, x0, -1
	xor x8, x8, x11
	and x16, x25, x8
	la x29, test_memory+1087
	addi x6, x0, -1
	addi x10, x2, 0
	bltu x2, x10, crash_backward
	xor x13, x13, x17
	remuw x4, x6, x2
	addi x10, x0, -442
	addi x30, x0, 1683
	xor x6, x6, x19
	sll x7, x30, x30
	or x22, x16, x11
	beq x16, x22, crash_forward
	xor x14, x18, x18
	addi x20, x0, 1
	la x3, test_memory-318
	la x31, test_memory+2183
	sub x21, x24, x24
	lbu x5, 1011(x3)
	addi x4, x0, 1790
	sll x20, x20, 63
	and x28, x28, x13
	divu x23, x10, x4
	sb x30, -1659(x31)
	addi x14, x0, -1043
	addw x11, x21, x4
	addi x22, x0, 1
	addi x12, x0, -1
	addi x30, x0, -194
	sllw x8, x30, x30
	sll x22, x22, 63
	xor x12, x12, x20
	addi x7, x0, -1
	or x18, x28, x17
	lhu x1, -373(x29)
	divu x26, x1, x1
	and x9, x25, x6
	remu x10, x8, x14
	addi x8, x0, 1
	and x27, x30, x12
	or x25, x11, x19
	div x23, x8, x8
	and x21, x10, x10
	xor x7, x7, x22
	divw x26, x8, x19
	bgeu x9, x25, crash_forward
	addi x2, x0, -532
	and x16, x29, x7
	addi x17, x0, 0
	slli x21, x8, 55
	sll x8, x8, 63
	addi x18, x0, -1
	divu x3, x14, x2
	addi x19, x0, 202
	la x21, test_memory+1742
	addi x9, x0, -600
	or x24, x16, x22
	bgeu x16, x24, crash_forward
	addi x25, x0, 779
	la x5, test_memory+1067
	remuw x14, x13, x10
	lwu x10, -1122(x21)
	addi x23, x9, -622
	addi x2, x0, -1369
	sll x6, x20, x17
	addi x11, x0, -831
	rem x3, x2, x2
	addw x26, x19, x25
	lh x28, -67(x5)
	mulhu x4, x9, x9
	and x7, x15, x26
	addi x21, x0, 580
	sll x26, x3, x6
	addi x6, x0, -757
	la x16, test_memory+1296
	addi x10, x0, 386
	addi x13, x0, 0
	srl x14, x21, x10
	bne x7, x7, crash_forward
	addi x25, x24, 0
	sltu x3, x5, x5
	la x22, test_memory+544
	xor x18, x18, x8
	lhu x24, -312(x16)
	addi x4, x0, 1910
	addi x19, x6, -29
	addi x30, x0, -1911
	sw x27, 444(x22)
	srlw x14, x15, x18
	addi x3, x0, -692
	addi x2, x25, 0
	sltu x26, x4, x4
	and x31, x3, x18
	div x10, x9, x25
	blt x25, x2, crash_backward
	or x15, x3, x20
	or x29, x6, x8
	addi x28, x0, 1
	blt x31, x29, crash_backward
	addi x17, x0, -1878
	sll x28, x28, 63
	addi x7, x0, -1
	and x13, x3, x17
	xor x7, x7, x28
	blt x27, x15, crash_backward
	sra x27, x30, x1
	la x19, test_memory+1913
	blt x27, x27, crash_backward
	slt x20, x1, x1
	addi x17, x0, 118
	addi x10, x0, 822
	srl x26, x31, x27
	and x5, x17, x7
	la x23, test_memory-431
	addi x25, x10, 706
	addi x29, x0, 1
	sllw x15, x17, x17
	sll x29, x29, 63
	addi x27, x0, -4
	divw x1, x11, x30
	or x21, x20, x28
	bgeu x5, x21, crash_backward
	addi x9, x0, 10
	lw x4, -945(x19)
	addi x2, x9, 809
	la x12, test_memory+2323
	andi x20, x19, 1827
	addi x31, x0, -1979
	la x22, test_memory+1332
	addi x8, x0, -1952
	addi x26, x27, -1029
	addi x14, x0, -1
	lb x6, 930(x23)
	lwu x16, -1999(x12)
	addi x30, x0, 1941
	addi x2, x0, 1
	xor x14, x14, x29
	and x18, x12, x14
	or x24, x31, x8
	la x25, test_memory-1559
	or x13, x18, x29
	lw x6, 2035(x25)
	la x7, test_memory+1616
	la x20, test_memory+809
	lb x17, -927(x7)
	lhu x28, -587(x20)
	addi x12, x0, 588
	la x15, test_memory-398
	srlw x25, x12, x12
	addi x16, x30, 955
	bge x30, x16, crash_forward
	ld x3, -524(x22)
	addi x24, x0, 1
	bge x26, x27, crash_backward
	sll x24, x24, 63
	sll x2, x2, 63
	ld x4, 1030(x15)
	addi x10, x0, -1
	addi x11, x0, -1
	xor x10, x10, x24
	sra x5, x3, x28
	slt x6, x27, x0
	addi x4, x0, 1
	mulhu x15, x14, x14
	sll x4, x4, 63
	la x27, test_memory+2107
	addi x9, x0, -1514
	xor x11, x11, x2
	addi x15, x0, 1167
	addi x6, x0, 5
	addi x22, x0, -1263
	sraw x30, x6, x22
	addi x26, x0, 532
	addi x20, x0, -1
	addi x3, x0, 1811
	sllw x1, x9, x3
	and x19, x7, x11
	divuw x5, x26, x26
	xor x20, x20, x4
	la x17, test_memory-1104
	sh x11, -1365(x27)
	la x18, test_memory-1053
	and x7, x24, x20
	divu x21, x23, x23
	or x28, x3, x4
	srlw x29, x10, x10
	addi x13, x0, 1857
	and x8, x11, x10
	subw x16, x15, x13
	la x14, test_memory-1405
	la x22, test_memory+1301
	sb x10, 1729(x17)
	addi x13, x0, 0
	addi x30, x0, 1722
	or x31, x11, x24
	la x26, test_memory+2259
	lh x6, -569(x22)
	mulh x29, x17, x17
	bgeu x7, x28, crash_forward
	addi x15, x0, 0
	sh x13, 1431(x14)
	la x25, test_memory-1436
	ld x3, 1077(x18)
	or x23, x10, x2
	addi x27, x0, -1889
	sd x10, -1947(x26)
	mulhu x5, x20, x13
	addi x1, x0, -2039
	lbu x12, 1907(x25)
	remw x9, x30, x1
	bltu x23, x19, crash_forward
	addi x21, x0, -72
	and x16, x27, x21
	remuw x20, x7, x7
	la x17, test_memory-1803
	slt x11, x16, x16
	addi x5, x0, 1497
	addiw x26, x30, -1677
	addi x18, x0, -1147
	addi x2, x0, 1731
	addi x13, x0, 0
	addi x8, x0, -1295
	lw x21, 2007(x17)
	addi x12, x8, -234
	addi x20, x0, -842
	la x14, test_memory-1693
	and x30, x11, x11
	mul x22, x5, x5
	subw x3, x31, x31
	addi x26, x0, 1309
	addi x24, x0, -1460
	la x21, test_memory+2166
	sh x4, 1921(x14)
	addi x17, x26, 1816
	addi x4, x0, 1381
	addi x1, x0, 1086
	sh x23, -1920(x21)
	add x23, x24, x6
	addi x30, x0, 1192
	addi x7, x0, 0
	divw x31, x24, x24
	and x16, x27, x12
	div x11, x20, x20
	addi x19, x0, -1026
	sub x25, x2, x4
	addi x14, x0, -1338
	mulw x29, x1, x19
	addi x22, x0, 621
	addi x6, x0, 820
	sraw x3, x1, x13
	srl x10, x18, x18
	add x28, x6, x6
	mulw x21, x14, x22
	xor x22, x14, x14
	la x18, test_memory+1959
	addi x29, x0, 1665
	mulhu x4, x27, x17
	subw x16, x0, x15
	addi x21, x0, 846
	la x10, test_memory-615
	addi x14, x0, -1063
	remuw x5, x30, x30
	sh x25, 637(x10)
	mulhu x19, x6, x6
	srlw x25, x29, x29
	slt x20, x21, x14
	addi x17, x0, 1
	bne x0, x0, crash_backward
	remuw x6, x16, x16
	div x23, x4, x4
	blt x13, x7, crash_backward
	addi x9, x24, -1098
	addi x16, x0, 1
	addi x26, x0, 242
	addi x21, x0, 1
	mulw x23, x29, x29
	lh x1, -1943(x18)
	srl x10, x10, x20
	la x6, test_memory+2377
	sll x16, x16, 63
	la x22, test_memory+95
	sra x14, x2, x2
	addi x25, x0, -553
	lw x4, 781(x22)
	addi x24, x0, 0
	addi x23, x0, 0
	addi x9, x0, 365
	addi x11, x0, 1025
	rem x5, x25, x25
	addi x27, x0, -814
	remw x15, x27, x27
	addi x30, x0, -1
	addi x1, x0, -844
	lwu x13, -1373(x6)
	sll x21, x21, 63
	remw x8, x9, x1
	add x3, x26, x11
	xor x30, x30, x16
	sll x17, x17, 63
	and x29, x10, x30
	or x19, x21, x16
	beq x29, x19, crash_forward
	addi x7, x0, -1
	addi x28, x0, -1
	xor x7, x7, x21
	and x12, x11, x7
	xor x28, x28, x17
	and x31, x17, x28
	or x20, x17, x21
	bge x20, x12, crash_forward
	or x2, x31, x17
	beq x31, x2, crash_forward
	sra x13, x24, x19
	mul x4, x30, x11
	la x29, test_memory-506
	sb x13, 934(x29)
	la x8, test_memory+1731
	la x14, test_memory+2845
	la x21, test_memory+1322
	sd x20, -362(x21)
	la x28, test_memory-535
	lb x15, -1557(x8)
	addi x2, x0, 1
	addi x23, x0, 1911
	sh x1, -1923(x14)
	sll x2, x2, 63
	la x22, test_memory-1277
	la x12, test_memory+2309
	addi x26, x0, -432
	sll x10, x26, x26
	sd x9, -1501(x12)
	addi x31, x0, 449
	xori x3, x9, -1012
	addi x30, x23, 471
	addi x24, x0, -901
	div x18, x31, x24
	lw x1, 1757(x22)
	srliw x9, x31, 8
	addi x25, x0, -1
	xor x25, x25, x2
	lhu x16, 1057(x28)
	and x6, x6, x25
	la x23, test_memory-471
	sltu x14, x6, x6
	addi x7, x0, 725
	addi x9, x0, 1188
	addi x28, x0, -1328
	addi x20, x0, 1228
	addi x29, x0, 1799
	srli x18, x14, 47
	or x11, x6, x2
	add x31, x9, x20
	la x10, test_memory+2882
	lw x15, -1870(x10)
	addi x12, x0, 1
	addw x5, x7, x7
	sw x2, 1215(x23)
	bltu x11, x6, crash_forward
	add x22, x28, x28
	sll x12, x12, 63
	addi x30, x29, 1258
	addi x21, x0, -1
	bltu x30, x29, crash_backward
	xor x21, x21, x12
	and x24, x15, x21
	or x3, x24, x12
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x21, 168(x1)
	sd x22, 176(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xc06b5ba598daba64
reg_x1_init:	.dword 0xffffffffffff8000
reg_x2_init:	.dword 0xffffffff80000003
reg_x3_init:	.dword 0xffffffffffff8009
reg_x4_init:	.dword 0x9937ef9c252a09d1
reg_x5_init:	.dword 0xfffffffffffffffd
reg_x6_init:	.dword 0x0000000000000000
reg_x7_init:	.dword 0xffffffffffffff83
reg_x8_init:	.dword 0xc008afb74b992c33
reg_x9_init:	.dword 0xffffffffffffffff
reg_x10_init:	.dword 0x0000000000000000
reg_x11_init:	.dword 0x27d6f37447c1eee9
reg_x12_init:	.dword 0xffffffffffffff86
reg_x13_init:	.dword 0xb1f0c18b3ecd38cb
reg_x14_init:	.dword 0xe3130ca2b85c9e37
reg_x15_init:	.dword 0xffffffffffffff83
reg_x16_init:	.dword 0xce801d51aa7dce25
reg_x17_init:	.dword 0x4c762ee1c8e068e2
reg_x18_init:	.dword 0x882f38446a631431
reg_x19_init:	.dword 0xffffffffffffffff
reg_x20_init:	.dword 0xbc36a4b81574fb3a
reg_x21_init:	.dword 0x0800000000000002
reg_x22_init:	.dword 0x3d926fb2fdf33a41
reg_x23_init:	.dword 0xcdc18b0895305e6d
reg_x24_init:	.dword 0xffffffffffffff87
reg_x25_init:	.dword 0x0000000000000000
reg_x26_init:	.dword 0xffffffffffffff80
reg_x27_init:	.dword 0x0000000000000001
reg_x28_init:	.dword 0x0800000000000008
reg_x29_init:	.dword 0x0800000000000006
reg_x30_init:	.dword 0x0000000000000000
reg_x31_init:	.dword 0xffffffffffffffff

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x2a086da3c31e76a1
reg_x1_output:	.dword 0x77cbb59c8340c715
reg_x2_output:	.dword 0x8b628d1d503f04ef
reg_x3_output:	.dword 0xef2b4086ce4c7c6d
reg_x4_output:	.dword 0x0f0843bb5ce756bd
reg_x5_output:	.dword 0xb2b679ee11992ab9
reg_x6_output:	.dword 0x602b6774cf55e230
reg_x7_output:	.dword 0xf235446fae785209
reg_x8_output:	.dword 0x2dc992b489ca4e03
reg_x9_output:	.dword 0x15e796707a7614e8
reg_x10_output:	.dword 0x1bde304bb081c065
reg_x11_output:	.dword 0xac03e929346a7be4
reg_x12_output:	.dword 0xd414d2a67beeb821
reg_x13_output:	.dword 0x7cc50505a95ced4e
reg_x14_output:	.dword 0x78ed4a3df632d3ff
reg_x15_output:	.dword 0x2897bf2f42c0dd3d
reg_x16_output:	.dword 0x77662f5282632c6a
reg_x17_output:	.dword 0x03ee7c671a7ef9d9
reg_x18_output:	.dword 0x1359d2dad9862352
reg_x19_output:	.dword 0x36498d13eeae57d5
reg_x20_output:	.dword 0x0d04cab7bec3ce53
reg_x21_output:	.dword 0x0360b69f0b15633d
reg_x22_output:	.dword 0xd1ec8d28e8305f16
reg_x23_output:	.dword 0xb74b7dfe21c29871
reg_x24_output:	.dword 0xf3cfcf82fe2a2df7
reg_x25_output:	.dword 0xe64b078e02894970
reg_x26_output:	.dword 0x34b19c1e86bb4ae8
reg_x27_output:	.dword 0x97b1a0249b2ef359
reg_x28_output:	.dword 0xa2ab53959f08b894
reg_x29_output:	.dword 0xe6914366dbd9e82f
reg_x30_output:	.dword 0xc0410d2b78d7b5c7
reg_x31_output:	.dword 0x939bb3583d1a50dc

// Memory Blocks
	.align 8
test_memory:
	.dword 0x01b70a883fd3b90c, 0xb733f53332f2cb78
	.dword 0x649e32acc7c60297, 0x125a4778d2d629ca
	.dword 0x2fb8c824cc99e865, 0x9618e54c1de4140e
	.dword 0x0db7ce799d1740a1, 0x5ca92afc850693f8
	.dword 0x7864d2ea63ee8e49, 0x12edefe2662ecbf9
	.dword 0x82d30c5a6e48d411, 0x5d59296d010f5ec0
	.dword 0x6b6e068a75c73187, 0x16202b790a974b03
	.dword 0x596b4c8923fcae77, 0xed0319e6f1583f7e
	.dword 0x5787c66b712ed890, 0x58215f68ae2fab3b
	.dword 0x0750be39bdd01747, 0x629e3d9cc43a0e14
	.dword 0xe7c3c02a4ff0d9fa, 0x8675ca5cbd8c4d76
	.dword 0x0f0fca0f52130459, 0xc413ee54e7a71167
	.dword 0x44f57e13519d3d01, 0xc94438d57f546dc9
	.dword 0xd8eb4ca32ee20269, 0x7b2a9ce68fe05bdf
	.dword 0xe805c9a94188aa01, 0x39626ba3f9a0c810
	.dword 0x09f3a1005064ad98, 0xe4621fc2d7ca37eb
	.dword 0x3d5fde23b5a9eafd, 0x1c17ce7191da4c6b
	.dword 0x12047b295632b9e9, 0x669b516789b1a47b
	.dword 0x54e26aedce76fc1b, 0x67107e39910ae3bb
	.dword 0x38b39291a0218bc5, 0x03a4feee2794e184
	.dword 0x1cfe66252223ac26, 0x243a9fcd42d2442a
	.dword 0xa87a1ca240fc6077, 0x7b08267cda410c80
	.dword 0x12edaf1ca7e3cd0b, 0xca88064e3970d5a0
	.dword 0xd6a3173803e906b1, 0x29ad85d2c6d6cceb
	.dword 0xe52b80daaa12f45c, 0x85ce29b55d9aa64e
	.dword 0x2dc86322d77b2706, 0xca3678c2ea8810c7
	.dword 0x4098b49a0063cbd0, 0xb53e6d4bd5046f27
	.dword 0x0fe8aea88fb81c6d, 0x1b2327b004a0d919
	.dword 0xe3f5d44a1578f1c1, 0x9d30b63476dca862
	.dword 0x1c603001168d5cc4, 0x39200616472d1669
	.dword 0x209cfd0b858969ac, 0x663a51e179a2adfa
	.dword 0x254e2fd8d07b714b, 0x2d14a1027ecd9546
	.dword 0x22a591b775f29cb5, 0x08cb2c9a420df42e
	.dword 0x673163d031777f25, 0xc6cdbd95228dfac0
	.dword 0xb5dbbd571fd9ea20, 0xb1cb57f9bef74c01
	.dword 0x64c518fd3c455fdb, 0x5e5cc78444cdd0ec
	.dword 0xc035c5a86a3fc7d9, 0x81f2e1718a7637bb
	.dword 0x40692e65eccc49d8, 0x7f868f9aae8ea364
	.dword 0x55b12d9eda2672ed, 0x46d5f8c41ca44f66
	.dword 0x8b9edf8a5c2808ed, 0xd3db5a3486b92bc4
	.dword 0x1cc1a7e191ae300f, 0xf1df6688b8b8b551
	.dword 0x4c645ed7c378c6cf, 0xd9523dc5c72b8e2e
	.dword 0xb5bbd94a91491c14, 0x1eb352ad616d9a91
	.dword 0x6779403560b36394, 0x1481d15269a2a5c7
	.dword 0xfae5eb67f0688c77, 0xefb45aee0de1d37b
	.dword 0xb5d5b37aa6f45e3a, 0x76d02af2a6d06138
	.dword 0x3a17eefe4d45ffd6, 0xe4a4f95f8c687c2c
	.dword 0xcade8ef412174d20, 0xa2342e55da312f2e
	.dword 0xfc160e8245a99e73, 0x149f3aeafcf8ad01
	.dword 0xd82029e36b94e68b, 0x8d622b3d9d727ada
	.dword 0x890e909e64d04ab3, 0x61dcc5ca912f3f1f
	.dword 0x2a9a06fb4ce99923, 0xcc7dcc00767c3871
	.dword 0x1ce5aab194d341a2, 0xd30930104c14a0ec
	.dword 0x74e54ee63206b473, 0x6bab5406036f81ad
	.dword 0xa9392350cc334b6e, 0x3b18a61bd018ba94
	.dword 0x78c01abf7c90216c, 0xda1a2e4ce82c424a
	.dword 0x1645c4c062697be8, 0xbddce127e5f6e285
	.dword 0xa9c78e985ee8aae2, 0xdd62cbe5e12ff48a
	.dword 0x2f189f7a309f8306, 0x8cd26dbe4b73e1f3
	.dword 0x126ac3f4c44ed60e, 0xe651d27847df6db2
	.dword 0xc8b61cae65f18d63, 0x6ce0423f85280955
	.dword 0x1b60844ef18c4b0a, 0x697a9abc048dba8a
	.dword 0x3f20e0bec0dbb4be, 0x3303a55fe2c754e6
	.dword 0xd529d392c7f9cd58, 0x0f2aff0062d20be1

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
