// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x23, test_memory-1312
	addi x13, x0, -165
	bltu x0, x0, crash_backward
	bltu x0, x0, crash_forward
	addi x6, x8, 0
	remw x31, x7, x7
	addi x27, x0, 1659
	addi x21, x0, 725
	addi x9, x13, -1969
	and x17, x26, x2
	addi x11, x6, 0
	ld x19, 1552(x23)
	addi x29, x0, 217
	sub x3, x27, x29
	addi x24, x21, 232
	addi x22, x0, -298
	remu x12, x30, x15
	addi x1, x0, 1
	addi x11, x0, -1589
	mulhsu x17, x11, x11
	addi x2, x0, 0
	addi x20, x0, 0
	la x27, test_memory+245
	addi x8, x0, 669
	sll x23, x19, x28
	bge x21, x24, crash_forward
	sraw x4, x8, x8
	addi x19, x0, -941
	sll x1, x1, 63
	addi x14, x0, -1
	addi x5, x0, 1402
	addi x23, x0, 0
	addi x26, x0, -2042
	addi x29, x0, 1
	addi x24, x0, -1692
	addi x25, x0, -236
	remuw x21, x24, x24
	sll x29, x29, 63
	remw x17, x10, x10
	addi x4, x0, 1683
	bltu x1, x1, crash_forward
	addi x31, x0, -1620
	sh x29, -15(x27)
	add x8, x4, x4
	addi x30, x25, -1841
	addi x2, x0, 477
	addi x24, x0, -584
	xor x14, x14, x1
	and x10, x7, x14
	sraw x28, x26, x26
	remuw x20, x2, x24
	addi x11, x0, -1
	la x26, test_memory+1331
	or x7, x14, x1
	la x18, test_memory-459
	sb x15, -556(x26)
	addw x9, x15, x24
	bgeu x10, x7, crash_backward
	la x21, test_memory+125
	addi x20, x0, -417
	bge x30, x25, crash_backward
	mulhsu x28, x20, x20
	subw x4, x3, x3
	xor x11, x11, x29
	addi x2, x0, 710
	sltu x16, x22, x5
	lh x15, 475(x18)
	remuw x3, x19, x31
	slli x24, x29, 8
	add x27, x20, x20
	addi x13, x0, 0
	and x12, x17, x11
	or x6, x12, x29
	la x7, test_memory-115
	addi x9, x0, -1330
	addi x20, x0, 1
	la x15, test_memory+984
	sll x20, x20, 63
	lh x16, -976(x15)
	addi x1, x0, -1369
	addi x3, x0, 1042
	mulhsu x22, x9, x3
	addi x8, x2, 773
	sw x28, -53(x21)
	lwu x30, 535(x7)
	addi x25, x0, -1
	addi x19, x0, 1088
	divw x5, x1, x1
	addi x31, x0, 1
	la x26, test_memory+1157
	la x7, test_memory+187
	xor x25, x25, x20
	la x3, test_memory-1277
	addi x1, x0, -1773
	sll x31, x31, 63
	lwu x16, 1905(x3)
	lwu x17, -345(x26)
	addi x4, x19, 888
	and x27, x11, x25
	or x24, x27, x20
	blt x27, x24, crash_backward
	addi x15, x0, -822
	addi x9, x0, -1853
	addi x16, x0, -143
	sd x11, 405(x7)
	la x6, test_memory+16
	lbu x7, 458(x6)
	rem x11, x17, x17
	addi x8, x0, 2038
	addi x18, x0, -1
	addi x2, x0, -1672
	addi x27, x0, 1
	mul x3, x16, x8
	mulh x13, x26, x26
	bgeu x19, x4, crash_backward
	xor x24, x8, x8
	xor x30, x1, x1
	addi x28, x9, -1534
	sll x27, x27, 63
	bltu x9, x28, crash_forward
	addi x25, x0, 670
	addi x17, x0, -1
	xor x17, x17, x27
	remu x26, x2, x25
	addi x13, x0, 1
	la x19, test_memory+424
	sll x13, x13, 63
	addi x4, x0, -1
	sd x8, 424(x19)
	xor x8, x10, x2
	la x20, test_memory+762
	addi x23, x0, 1195
	mulhu x3, x19, x19
	la x5, test_memory-996
	lw x22, 1376(x5)
	la x3, test_memory+1003
	mulh x16, x15, x15
	lwu x2, -199(x3)
	and x12, x15, x17
	la x19, test_memory-1453
	or x29, x14, x27
	sd x1, 1677(x19)
	srai x26, x28, 18
	addi x6, x0, 1
	xor x18, x18, x31
	or x21, x15, x23
	divu x11, x22, x7
	sw x30, 222(x20)
	la x8, test_memory-447
	and x14, x13, x18
	lb x25, 814(x8)
	or x10, x9, x31
	addi x22, x0, -1550
	blt x14, x10, crash_forward
	xor x4, x4, x13
	sll x6, x6, 63
	la x5, test_memory+631
	and x28, x10, x4
	la x25, test_memory+1488
	la x11, test_memory+2578
	divuw x9, x22, x22
	xor x2, x6, x17
	or x7, x28, x13
	addi x23, x0, 540
	addi x18, x23, 50
	bltu x7, x28, crash_backward
	addi x1, x0, -1
	la x12, test_memory-884
	blt x0, x0, crash_forward
	addi x31, x0, -1826
	sll x16, x13, x13
	la x14, test_memory+1174
	addi x20, x0, -1870
	la x17, test_memory+342
	lb x10, 314(x17)
	sd x23, -615(x5)
	la x26, test_memory+1528
	sra x8, x31, x31
	lb x21, -1304(x26)
	sd x1, -598(x14)
	srl x22, x11, x21
	addi x9, x0, 1815
	lbu x29, -1720(x11)
	addi x3, x20, -1062
	la x15, test_memory+627
	addi x2, x0, -1322
	bltu x20, x3, crash_forward
	la x31, test_memory+462
	xor x1, x1, x6
	addi x19, x2, -223
	slli x23, x29, 35
	ld x27, -912(x25)
	bltu x2, x19, crash_backward
	la x17, test_memory-1460
	addi x21, x0, -2011
	la x25, test_memory-1081
	la x2, test_memory+314
	la x20, test_memory-433
	addi x16, x0, 1291
	sh x7, -304(x31)
	ld x10, 30(x2)
	addi x28, x0, -1345
	la x26, test_memory-1651
	slt x5, x21, x21
	la x19, test_memory+935
	sd x13, 1329(x20)
	sd x13, 1740(x12)
	la x27, test_memory+2518
	addi x4, x0, -495
	and x24, x10, x1
	lui x3, 193145
	lh x23, -99(x19)
	la x18, test_memory+1592
	add x7, x28, x4
	divuw x13, x9, x16
	ld x22, 1636(x17)
	sw x1, 1827(x26)
	la x12, test_memory+93
	la x4, test_memory-1192
	addi x10, x0, 1
	sw x1, 1712(x4)
	sll x10, x10, 63
	or x30, x24, x6
	addi x14, x0, -1171
	sltu x23, x11, x11
	la x26, test_memory+2397
	beq x24, x30, crash_backward
	sw x5, 571(x12)
	la x9, test_memory+132
	lhu x8, -1472(x18)
	la x20, test_memory-372
	sb x10, 527(x20)
	mulw x28, x8, x5
	sb x21, -1709(x27)
	ld x7, 388(x9)
	addi x19, x0, 1
	sb x1, -74(x15)
	lh x17, -1927(x26)
	la x11, test_memory-114
	la x4, test_memory+632
	sw x28, 1805(x25)
	la x22, test_memory+1362
	srlw x3, x14, x14
	addi x5, x0, -1
	sh x23, 498(x11)
	sll x19, x19, 63
	lhu x21, -90(x4)
	xor x5, x5, x10
	and x31, x10, x5
	or x2, x31, x10
	addi x13, x0, -1
	xor x13, x13, x19
	and x29, x20, x13
	sw x24, -822(x22)
	or x16, x8, x19
	bgeu x29, x16, crash_forward
	addi x5, x0, 531
	sltiu x16, x26, -1174
	div x30, x5, x1
	addi x14, x0, 1030
	addi x17, x0, 943
	rem x7, x17, x17
	srlw x22, x14, x14
	addi x19, x0, 0
	addi x26, x0, 0
	la x23, test_memory+1059
	subw x15, x4, x4
	divu x9, x14, x10
	addi x20, x0, 1
	addi x27, x0, -88
	remw x10, x17, x28
	la x8, test_memory-960
	addi x31, x0, 1979
	sll x20, x20, 63
	sw x16, 1860(x8)
	addi x3, x0, -1
	addi x29, x0, 352
	xor x3, x3, x20
	addi x2, x0, -1362
	sraw x6, x5, x27
	la x7, test_memory-436
	lh x9, 890(x7)
	sra x18, x29, x1
	mulhu x21, x29, x29
	addi x5, x0, -708
	and x24, x31, x3
	addi x28, x0, 1653
	addi x10, x0, 0
	sraw x25, x18, x18
	or x13, x29, x20
	mul x30, x4, x0
	blt x19, x26, crash_forward
	addi x27, x0, -1483
	subw x15, x5, x5
	srlw x1, x2, x28
	la x6, test_memory+1567
	addi x4, x0, 120
	la x21, test_memory-886
	xor x11, x31, x4
	addi x8, x27, -1536
	bgeu x8, x27, crash_forward
	addi x7, x0, -719
	sh x30, -1265(x6)
	lhu x12, -223(x23)
	lw x9, 998(x21)
	addi x8, x0, -502
	subw x21, x5, x26
	addi x13, x0, 1
	addi x17, x0, 0
	addi x25, x0, 0
	addi x18, x0, 226
	la x27, test_memory-1145
	mulh x29, x7, x18
	sll x13, x13, 63
	addi x26, x0, -1
	la x9, test_memory+1668
	addi x14, x0, -1161
	addi x22, x0, -1466
	addi x31, x0, 1661
	xor x26, x26, x13
	addi x15, x0, 0
	and x2, x18, x26
	or x12, x2, x13
	ld x3, -1508(x9)
	addi x19, x0, 1779
	addi x4, x0, -971
	blt x2, x12, crash_backward
	srlw x16, x14, x22
	lbu x6, 1693(x27)
	sraw x30, x2, x20
	and x24, x19, x19
	la x28, test_memory-387
	la x9, test_memory+2494
	divuw x5, x7, x7
	addi x29, x0, 1
	sltiu x20, x11, 1654
	sb x12, -1713(x9)
	sll x29, x29, 63
	addi x23, x0, -856
	la x2, test_memory-696
	divu x21, x31, x23
	subw x14, x29, x29
	blt x25, x15, crash_backward
	blt x0, x0, crash_backward
	lbu x16, 1621(x2)
	addi x21, x0, 371
	rem x30, x31, x21
	addi x27, x0, 1
	addi x10, x0, -1
	srliw x13, x9, 29
	addi x5, x0, -1543
	divuw x14, x2, x31
	lh x1, 775(x28)
	sll x27, x27, 63
	la x26, test_memory-1515
	addi x25, x0, 1035
	blt x0, x0, crash_forward
	mulw x11, x8, x4
	addi x31, x0, -1430
	mulhu x15, x27, x23
	addi x6, x0, -1
	xor x6, x6, x27
	addi x2, x0, -1112
	srl x3, x16, x16
	lb x12, 1604(x26)
	xor x7, x7, x10
	bne x0, x0, crash_backward
	xor x10, x10, x29
	srl x16, x25, x2
	addi x13, x0, -1956
	mulw x23, x21, x31
	addi x30, x0, 1
	addi x24, x0, 1081
	sll x30, x30, 63
	addi x9, x24, 1089
	and x20, x19, x6
	la x26, test_memory-1245
	or x19, x20, x27
	addi x8, x0, 1352
	div x14, x13, x13
	addi x4, x8, 1896
	lbu x7, 1773(x26)
	and x18, x28, x10
	addi x22, x5, -1828
	addi x14, x0, -301
	addi x8, x0, -1384
	addi x23, x0, 1121
	bge x24, x9, crash_forward
	addi x13, x0, 1485
	or x17, x18, x29
	la x28, test_memory+2116
	sll x26, x14, x13
	addi x21, x0, 1798
	addi x12, x0, -1
	xor x12, x12, x30
	beq x5, x22, crash_forward
	and x11, x8, x21
	lh x3, -1758(x28)
	addi x7, x0, -1848
	and x15, x26, x12
	addi x13, x0, 0
	la x28, test_memory+787
	addi x8, x0, 0
	lhu x11, -57(x28)
	bne x13, x8, crash_forward
	addi x2, x0, 857
	la x21, test_memory-209
	addi x28, x0, 1505
	lhu x24, 223(x21)
	and x4, x23, x2
	mulh x5, x14, x14
	or x25, x7, x7
	addi x9, x0, 1
	la x11, test_memory-588
	bltu x19, x20, crash_backward
	or x1, x4, x30
	addi x31, x0, 1464
	bgeu x18, x17, crash_forward
	sll x9, x9, 63
	andi x24, x12, -1232
	addi x4, x0, 767
	bne x6, x6, crash_backward
	sd x17, 1348(x11)
	andi x26, x30, -784
	add x6, x4, x13
	la x25, test_memory-459
	addi x7, x0, 385
	and x20, x4, x7
	div x16, x31, x31
	la x24, test_memory-277
	sh x9, 651(x25)
	la x19, test_memory-532
	addi x8, x0, -1610
	sd x31, 437(x24)
	sub x13, x28, x8
	la x21, test_memory-1094
	addi x22, x0, -1
	ld x5, 1268(x19)
	addi x17, x0, 1
	addi x27, x0, 0
	sh x5, 1110(x21)
	sll x17, x17, 63
	addi x2, x0, 0
	xor x22, x22, x9
	remu x18, x7, x7
	la x1, test_memory-926
	addi x26, x0, -1
	bne x27, x2, crash_forward
	and x3, x23, x22
	or x14, x3, x9
	sd x17, 1406(x1)
	xor x26, x26, x17
	and x11, x30, x26
	or x29, x11, x17
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x20, 160(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x29, 232(x1)
	sd x30, 240(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xffffffffffffffff
reg_x1_init:	.dword 0x0000000000000005
reg_x2_init:	.dword 0x5f394c6ca2edeb86
reg_x3_init:	.dword 0x47678de828e327d3
reg_x4_init:	.dword 0xffffffffffff8004
reg_x5_init:	.dword 0x0000000000000000
reg_x6_init:	.dword 0x2fdb0e763b339631
reg_x7_init:	.dword 0x0800000000000004
reg_x8_init:	.dword 0x818fc79aec6f394c
reg_x9_init:	.dword 0x666ac7ee8757ebd7
reg_x10_init:	.dword 0x3893e461b700b466
reg_x11_init:	.dword 0x0000000000000000
reg_x12_init:	.dword 0x0800000000000007
reg_x13_init:	.dword 0xffffffffffff8008
reg_x14_init:	.dword 0x18b0dab68ab036e5
reg_x15_init:	.dword 0xffffffff80000004
reg_x16_init:	.dword 0x0000000000000000
reg_x17_init:	.dword 0x0000000000000000
reg_x18_init:	.dword 0x5f577a2acf1c5f7c
reg_x19_init:	.dword 0xd7d104cd6b5e9f7b
reg_x20_init:	.dword 0x7f27a931f1e89279
reg_x21_init:	.dword 0x0800000000000007
reg_x22_init:	.dword 0x6b24cb05c101ba65
reg_x23_init:	.dword 0x0800000000000001
reg_x24_init:	.dword 0xffffffffffffffff
reg_x25_init:	.dword 0x3a2ff9532af945f9
reg_x26_init:	.dword 0xffffffffffffffff
reg_x27_init:	.dword 0x9d63d09f7b3c71ff
reg_x28_init:	.dword 0x7349ae0a3ba38578
reg_x29_init:	.dword 0x7586ad0247bf44fb
reg_x30_init:	.dword 0xffffffffffffffff
reg_x31_init:	.dword 0x0800000000000006

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x2cacd949068e24b0
reg_x1_output:	.dword 0xe44afceffd524c51
reg_x2_output:	.dword 0xfaf4d336aeb29f8e
reg_x3_output:	.dword 0x33d479ee784d139c
reg_x4_output:	.dword 0xee9dfe2e2e715e30
reg_x5_output:	.dword 0x9350ea37eb856dc9
reg_x6_output:	.dword 0xb5f222ccf8ca0842
reg_x7_output:	.dword 0x151940d14a6d50bf
reg_x8_output:	.dword 0xb9f6953969fafe60
reg_x9_output:	.dword 0x8a5e0889ed81ef6f
reg_x10_output:	.dword 0xeb43dc78d91910d9
reg_x11_output:	.dword 0xc3a44d7110295838
reg_x12_output:	.dword 0x31dffb0095a55eb6
reg_x13_output:	.dword 0x3fa329861f61158d
reg_x14_output:	.dword 0x211c2c8b8cf3a0fa
reg_x15_output:	.dword 0xda20e8b39923b4d4
reg_x16_output:	.dword 0x5f302d2dc793662a
reg_x17_output:	.dword 0x12e9f7feba655791
reg_x18_output:	.dword 0xa95a5da96113020f
reg_x19_output:	.dword 0xafeb13f974e5b2c3
reg_x20_output:	.dword 0x51ed58fda49b35b9
reg_x21_output:	.dword 0x201b6a7a1118208e
reg_x22_output:	.dword 0x2b28cf47734ed3c7
reg_x23_output:	.dword 0x667aa38f5148a819
reg_x24_output:	.dword 0xc144b9c46649e4e6
reg_x25_output:	.dword 0xf03205b1dc2f1fb9
reg_x26_output:	.dword 0x9cf33c3261d01097
reg_x27_output:	.dword 0x7e27293a848fcd4e
reg_x28_output:	.dword 0xa70ec762b1f24e34
reg_x29_output:	.dword 0xdc41ef15b39b28ed
reg_x30_output:	.dword 0x236f510ab6f02234
reg_x31_output:	.dword 0x168eaeb5b2b4a5bf

// Memory Blocks
	.align 8
test_memory:
	.dword 0x9d3ab4d69118ebad, 0x0180cf48d962a528
	.dword 0x67b192c2d536061a, 0x7e29402d2ba7f82a
	.dword 0x74bb3eabd3cec35e, 0xd87784a1ce29930c
	.dword 0x7b88952463238208, 0xdbd346bed6895736
	.dword 0x16cec984e5cd63d8, 0xdcc7a5a98189175f
	.dword 0x50988147bac46882, 0x8c58b3033c1739e9
	.dword 0x42bcd096a765f0b1, 0x362ed3a052989d8b
	.dword 0x1bf0ec1ead31ed4e, 0x454af77e88d9a430
	.dword 0x2362a42b2b953f01, 0xfeb1dcf87f4a881e
	.dword 0xbd16fcedfe7c09f7, 0x2dabd3322dc95f5a
	.dword 0x0929781f54cf01e6, 0x9519afd7137e714b
	.dword 0x64bde3cb5aaaf24d, 0xe436ec0b1c75c29d
	.dword 0xce3fc2662a520700, 0x662c1c98e2eafb68
	.dword 0x44a7a02228ca98e3, 0xda54396f79eb0b90
	.dword 0x8c2fe983681782f5, 0xba4a684b9b41316e
	.dword 0x076817328d324390, 0x81fd3eb709db46af
	.dword 0x532e43123baf6dee, 0x605faf31862b777c
	.dword 0x2c047a91207a2fef, 0x8c1f15ae81cbc7db
	.dword 0x84b86240589bf018, 0x82491743250a0b54
	.dword 0x26a8fea45cd147df, 0xdc4349196a4932d7
	.dword 0x4c5fb64d8efdde25, 0x8a21d2a86a8f14dd
	.dword 0x54eee12787a4e603, 0xe5897f28326413cc
	.dword 0x72d97910d7a445c8, 0xc31cf240f89c469f
	.dword 0x696cbfabe9ccaa42, 0xdc3bf4049ff807c6
	.dword 0x70aded7558d10a3d, 0x4bd7082073040e4a
	.dword 0xef8b3e147cac5e48, 0x8688c44dd57f7534
	.dword 0x3720edf53f4490be, 0x03499a0baa10552f
	.dword 0xedd7fd17cefdea04, 0x7e2a0791bc75d46c
	.dword 0x9f2dcb2567627d0f, 0x54ca63ff19f0d0c5
	.dword 0x7a50e0c2c8355828, 0x6406bad5c18a8824
	.dword 0xcfb07a28ba817df3, 0x2ac06aa8fe72e326
	.dword 0x4961a6f41db0eaac, 0xde167b13762645fa
	.dword 0x3516133ad4b829b4, 0xdaf8ddea04a50b8f
	.dword 0xdd8dcddfc1273f4c, 0x37120fb4d9050eee
	.dword 0xd62ea027ffb8ea9f, 0x92c5cb5c7647e6e3
	.dword 0x0300ca8e4c058405, 0x1ebac51dbde6b7e3
	.dword 0xeafa3ad2cf8efb85, 0xa450a0c5952ec029
	.dword 0xaf7e8f596fafbb9c, 0x58c297210a980221
	.dword 0x9b8b7bb0b64e743c, 0x19ca7ea9bef1b10a
	.dword 0x346e6271bed51217, 0x1f9f2b8745d643d6
	.dword 0xb659384bb409661c, 0x1e645ab7db935254
	.dword 0xedfa045bb84a4141, 0x9fd19c8d42cfa090
	.dword 0xfe9991c0e09c0883, 0x2038f2588bfbfc79
	.dword 0x3f7b266dd81c052a, 0x376d13638a41d1c4
	.dword 0x6c805340ed21f551, 0x09928d24876c9810
	.dword 0xbab1315497cba0a5, 0x14e632af80797f4b
	.dword 0x5a7aa092e326756d, 0x93368f6c994afe53
	.dword 0xc4795b8eb2e771c9, 0x6775510a2db427e0
	.dword 0x23c1f49157e1dd3e, 0x7ca0dcb1bae9e9a0
	.dword 0xe7030fefb9719671, 0x9295837dfca699a3
	.dword 0x29e06fa60215f932, 0x6a590a2ad72e75f9
	.dword 0x46baa420f5c6a0bc, 0xbd6a780cb929fa99
	.dword 0x90007657215b8a3a, 0x45cb6143e0353183
	.dword 0x5c645f1beff65b8d, 0xa617202b97516129
	.dword 0x3c219fb76df2d24c, 0x3d4fb2190158bd0b
	.dword 0x2c21cfb264c09f0c, 0xd84f2b441169fca0
	.dword 0xd78cf3f1586930e0, 0xee47f5fee23bfc7c
	.dword 0xae5b73055aa83523, 0x45ad512ff9a7cdae
	.dword 0x99227ac138a5cf74, 0xd680c1fc21b9d76a
	.dword 0x04c8ab0e1bcdce01, 0xc5986cc23280eee7
	.dword 0x9d5a19faac2f5e08, 0xe53d894a69dc898a
	.dword 0x631005183f85049b, 0x31c1663e1ef96d44
	.dword 0x7111c402cbbcdfa3, 0xe79aafd7c03e8337
	.dword 0x47b9d0429ad57326, 0xab83eddc0261b09f

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
