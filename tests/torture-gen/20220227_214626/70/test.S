// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	sltiu x16, x10, 41
	slt x11, x13, x13
	la x27, test_memory-636
	sltu x4, x26, x25
	addi x21, x0, 498
	addi x29, x22, 0
	sllw x7, x20, x26
	addi x26, x0, 109
	addi x2, x0, -1105
	la x30, test_memory+1247
	addi x12, x18, -446
	la x15, test_memory+627
	addi x8, x0, 1841
	addi x3, x26, 33
	xor x23, x2, x2
	addi x31, x0, 1
	sw x26, 732(x27)
	la x24, test_memory-1063
	mul x5, x21, x21
	lhu x13, -29(x15)
	remu x17, x9, x9
	addi x9, x29, 0
	la x18, test_memory-439
	sb x31, -651(x30)
	sd x25, 1399(x24)
	addi x20, x0, -1740
	mulh x6, x8, x20
	lb x10, 1044(x18)
	sll x31, x31, 63
	addi x19, x0, 1344
	addi x28, x0, -1
	subw x25, x25, x12
	sltu x14, x19, x19
	xor x28, x28, x31
	and x22, x4, x28
	or x1, x22, x31
	beq x22, x1, crash_backward
	subw x28, x16, x3
	la x1, test_memory-1151
	addi x17, x0, 1180
	addi x29, x0, -1671
	remuw x27, x30, x16
	addi x9, x0, -276
	addi x13, x0, 596
	addi x25, x0, 1
	slti x19, x31, -1646
	addi x16, x0, 2043
	la x14, test_memory+880
	sltu x21, x9, x16
	la x30, test_memory+1224
	addi x26, x0, -1498
	addi x11, x0, 0
	srlw x7, x17, x17
	sltu x22, x5, x5
	sll x25, x25, 63
	addi x15, x0, 0
	lw x2, 1559(x1)
	addw x4, x29, x13
	addi x3, x0, 268
	la x24, test_memory+546
	addi x27, x0, 1556
	addi x21, x0, -453
	lbu x12, -748(x14)
	lb x10, -498(x30)
	mulw x16, x27, x21
	sh x17, -414(x24)
	sll x6, x26, x3
	addi x9, x0, 1607
	la x8, test_memory+2784
	addi x20, x0, -1
	addi x28, x0, 1270
	blt x7, x7, crash_forward
	addi x3, x0, 0
	sll x17, x30, x30
	addi x1, x0, 1767
	lhu x18, -2032(x8)
	addi x2, x0, -1309
	addi x30, x0, -1204
	la x11, test_memory+111
	addi x16, x0, 0
	mulhu x27, x7, x7
	slt x6, x2, x2
	xor x20, x20, x25
	la x4, test_memory-1102
	la x12, test_memory+1668
	sll x24, x30, x30
	slli x30, x4, 63
	lb x14, 191(x11)
	remuw x8, x3, x3
	addi x27, x0, 1
	mulhu x10, x1, x1
	and x5, x21, x20
	sll x27, x27, 63
	or x23, x3, x25
	addi x31, x29, 0
	addi x21, x31, 0
	div x19, x9, x28
	la x11, test_memory+1334
	addi x22, x0, 1909
	div x26, x3, x3
	lwu x14, -1026(x11)
	srl x15, x22, x22
	blt x31, x21, crash_forward
	la x6, test_memory+1691
	ld x7, 2006(x4)
	addi x29, x0, -1
	div x17, x24, x16
	addi x10, x0, -1750
	xori x28, x29, 1075
	blt x3, x16, crash_backward
	addi x25, x0, -1404
	addi x4, x0, -2035
	sd x23, -1092(x12)
	addi x14, x0, -1795
	addw x31, x4, x4
	xor x29, x29, x27
	lhu x1, -1647(x6)
	sra x31, x9, x9
	addi x5, x0, 1
	addi x13, x0, 193
	srl x4, x17, x0
	and x2, x29, x29
	addi x17, x0, -583
	addi x3, x0, -880
	sub x16, x3, x3
	sltu x9, x0, x0
	or x18, x3, x27
	addi x8, x0, 823
	bltu x18, x2, crash_backward
	or x15, x25, x17
	addi x11, x14, -27
	la x6, test_memory+1207
	mulhu x2, x4, x2
	mulh x25, x28, x28
	addi x24, x13, 1712
	mulhsu x30, x10, x8
	remuw x31, x19, x19
	la x7, test_memory+29
	blt x0, x0, crash_forward
	sltu x29, x9, x9
	la x12, test_memory-904
	la x8, test_memory+735
	addi x2, x0, -682
	sll x5, x5, 63
	addi x17, x0, -1490
	addi x20, x0, -1
	addi x27, x17, -146
	addi x15, x0, 1014
	addi x22, x9, -335
	lhu x30, 5(x8)
	div x24, x26, x26
	addi x19, x0, -1308
	addi x9, x0, 1
	bge x27, x17, crash_backward
	rem x13, x7, x7
	la x25, test_memory-730
	sh x28, 1750(x12)
	addi x29, x0, -724
	lhu x1, -697(x6)
	sll x9, x9, 63
	sub x18, x15, x15
	xor x20, x20, x5
	lwu x21, 815(x7)
	addi x4, x0, -1
	la x11, test_memory-98
	xor x4, x4, x9
	lbu x31, 1189(x25)
	sltu x10, x2, x29
	addi x13, x0, -224
	or x14, x21, x4
	and x3, x14, x4
	or x16, x28, x9
	bltu x16, x3, crash_forward
	xor x26, x19, x19
	and x23, x31, x20
	la x24, test_memory-214
	la x15, test_memory-559
	addi x18, x0, 133
	addi x8, x4, 0
	and x12, x13, x18
	sh x0, 765(x15)
	la x27, test_memory-1106
	or x28, x23, x5
	lh x7, 1554(x27)
	addi x30, x0, 1
	addi x21, x8, 0
	lw x1, 966(x24)
	sh x19, 560(x11)
	addi x2, x0, 577
	addi x16, x0, 1
	sll x16, x16, 63
	divu x7, x27, x27
	xor x29, x2, x2
	sll x30, x30, 63
	la x15, test_memory+249
	divw x7, x3, x3
	la x12, test_memory+247
	la x5, test_memory-1451
	addi x7, x0, 1
	la x11, test_memory+1011
	addi x26, x0, -438
	sll x7, x7, 63
	la x3, test_memory+2076
	addi x9, x0, -1
	mulhsu x13, x26, x26
	la x1, test_memory+345
	addi x25, x0, -965
	lb x4, 168(x12)
	addi x23, x0, -1
	sb x21, -1438(x3)
	sw x9, 51(x1)
	mulhu x19, x25, x25
	la x29, test_memory+432
	ld x2, -587(x11)
	lb x28, 1678(x5)
	xor x9, x9, x16
	la x25, test_memory+774
	addi x17, x0, -1
	addi x28, x0, -23
	divuw x24, x31, x22
	ori x18, x24, -1794
	la x13, test_memory-210
	remuw x4, x28, x28
	la x5, test_memory-728
	lbu x3, -501(x25)
	and x10, x24, x9
	ori x14, x12, 1844
	or x27, x10, x16
	la x8, test_memory+2465
	addi x18, x0, 635
	blt x10, x27, crash_backward
	xor x23, x23, x7
	la x21, test_memory-792
	la x28, test_memory-1010
	la x14, test_memory-787
	lb x4, 1257(x21)
	lh x25, 1560(x28)
	sra x24, x31, x12
	sw x17, 1436(x5)
	rem x3, x18, x18
	addi x1, x0, 485
	la x9, test_memory+1347
	sb x26, -7(x29)
	sb x2, 31(x15)
	sw x18, -1929(x8)
	addi x16, x0, 326
	addi x27, x0, -537
	addi x25, x0, -849
	addi x2, x0, 1
	and x31, x3, x23
	addi x29, x0, 828
	sll x2, x2, 63
	addi x18, x0, 0
	rem x21, x25, x25
	xor x17, x17, x30
	addi x11, x0, 605
	sll x24, x29, x11
	sll x5, x16, x27
	addi x12, x0, -1208
	sw x22, 1551(x14)
	xor x19, x1, x12
	and x22, x18, x17
	remuw x10, x16, x16
	addi x4, x23, 0
	addi x19, x4, 0
	addi x8, x0, 0
	sh x7, -655(x9)
	addi x24, x0, 1
	bne x4, x19, crash_backward
	or x20, x16, x7
	la x10, test_memory-1655
	addi x14, x0, -1320
	addi x16, x0, -1733
	xori x9, x8, -104
	sb x7, 1925(x10)
	addi x28, x0, -1
	or x6, x6, x30
	addi x29, x0, -1065
	xor x28, x28, x2
	and x15, x2, x28
	or x3, x15, x2
	divu x12, x14, x29
	bltu x3, x15, crash_forward
	la x21, test_memory+1086
	sb x16, -259(x21)
	sraw x5, x22, x4
	lh x26, 1196(x13)
	sub x25, x16, x16
	sll x24, x24, 63
	addi x11, x0, -1
	xor x11, x11, x24
	and x1, x23, x11
	or x27, x23, x24
	la x8, test_memory+965
	or x12, x7, x4
	la x13, test_memory-1321
	la x1, test_memory+132
	ld x31, 348(x1)
	addi x22, x0, -117
	la x5, test_memory+685
	addi x19, x0, 1153
	lh x26, -243(x5)
	addi x15, x0, 858
	addi x10, x0, 1
	sraw x3, x15, x15
	or x7, x19, x19
	srai x9, x25, 20
	lbu x17, -941(x8)
	addi x5, x0, 373
	or x31, x28, x28
	addi x20, x0, 871
	remu x18, x22, x20
	addi x12, x0, -1746
	addi x15, x0, 1
	la x29, test_memory-535
	slliw x6, x27, 23
	addi x4, x0, 1608
	sll x10, x10, 63
	divu x1, x21, x21
	mul x26, x5, x12
	la x19, test_memory-622
	ld x27, 2025(x13)
	la x14, test_memory+780
	la x8, test_memory-918
	addi x21, x0, -1
	sb x26, 1165(x8)
	xor x21, x21, x10
	lb x30, 957(x29)
	and x28, x27, x21
	addi x16, x0, 503
	or x2, x15, x10
	addi x18, x0, 1
	addi x11, x0, -1113
	beq x28, x2, crash_forward
	sltu x23, x4, x11
	ori x31, x1, -1703
	sll x18, x18, 63
	addi x27, x0, -1
	add x25, x16, x16
	la x20, test_memory+148
	lb x24, -742(x14)
	xor x25, x13, x21
	lb x21, 107(x20)
	addi x2, x0, -966
	sub x4, x30, x30
	ld x7, 862(x19)
	divuw x1, x12, x12
	addi x22, x0, -1738
	la x10, test_memory-1127
	srlw x13, x22, x22
	lh x31, 1845(x10)
	sll x15, x15, 63
	addi x30, x0, 1
	addi x3, x0, -1
	xor x3, x3, x15
	bne x31, x31, crash_backward
	la x11, test_memory-1359
	xor x27, x27, x18
	lh x28, 1797(x11)
	and x17, x26, x3
	or x16, x2, x2
	remuw x23, x3, x18
	sll x30, x30, 63
	addi x26, x0, -1
	or x9, x6, x15
	and x29, x19, x27
	blt x17, x9, crash_backward
	or x6, x18, x18
	xor x26, x26, x30
	beq x29, x6, crash_backward
	and x12, x29, x26
	or x5, x25, x30
	bltu x5, x12, crash_backward
	addi x12, x0, 1398
	addi x16, x0, 1
	addi x27, x0, -2000
	remuw x4, x30, x30
	la x28, test_memory-132
	addi x10, x0, -364
	la x26, test_memory-1303
	lui x2, 647540
	add x29, x30, x30
	lwu x18, 292(x28)
	addi x9, x0, 1678
	addi x21, x0, 651
	la x24, test_memory+2036
	la x8, test_memory+2261
	sw x22, -1325(x8)
	la x13, test_memory-1178
	lw x17, 2047(x26)
	addi x22, x0, -2019
	sll x16, x16, 63
	la x15, test_memory+1582
	addi x11, x0, -1
	rem x31, x12, x22
	sra x6, x10, x10
	lh x5, 1658(x13)
	sw x4, -1840(x24)
	xor x11, x11, x16
	or x14, x21, x21
	addi x3, x0, 795
	and x20, x19, x11
	addi x7, x3, 55
	remuw x25, x27, x8
	ld x30, -1142(x15)
	or x19, x23, x16
	bge x19, x20, crash_forward
	sllw x1, x27, x9
	la x8, test_memory+1806
	addi x28, x25, 0
	la x3, test_memory-1210
	mul x21, x18, x18
	addi x10, x0, 1
	addi x29, x0, -1750
	ld x1, 1402(x3)
	remu x30, x25, x25
	sll x10, x10, 63
	addi x14, x0, -986
	div x7, x29, x14
	addi x13, x0, -1
	addi x11, x28, 0
	bne x28, x11, crash_backward
	xor x13, x13, x10
	slt x27, x20, x20
	la x14, test_memory+785
	addi x9, x0, -1218
	la x29, test_memory+1315
	sd x2, -1462(x8)
	sd x19, -683(x29)
	and x24, x9, x13
	la x21, test_memory+1006
	addi x7, x0, -1992
	remw x25, x15, x15
	sw x9, -1(x14)
	sw x28, -278(x21)
	addi x6, x0, 473
	mulhsu x12, x9, x7
	or x4, x24, x10
	and x28, x6, x6
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x7, 56(x1)
	sd x9, 72(x1)
	sd x10, 80(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x13, 104(x1)
	sd x16, 128(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x19, 152(x1)
	sd x20, 160(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x24, 192(x1)
	sd x25, 200(x1)
	sd x27, 216(x1)
	sd x28, 224(x1)
	sd x30, 240(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0x47e48d9206d0c802
reg_x1_init:	.dword 0xf80828657c139b05
reg_x2_init:	.dword 0x0fa4f9aa73a69896
reg_x3_init:	.dword 0xe13b29819a1c1777
reg_x4_init:	.dword 0xb950cb021d0de447
reg_x5_init:	.dword 0xc5a54af826a0ebbd
reg_x6_init:	.dword 0x0800000000000007
reg_x7_init:	.dword 0xd6c68398fa9add6d
reg_x8_init:	.dword 0x7166c09356288805
reg_x9_init:	.dword 0x0000000000000000
reg_x10_init:	.dword 0xbc15bb1c10a065a5
reg_x11_init:	.dword 0xf625fa2d418a6713
reg_x12_init:	.dword 0xa2087539735f9706
reg_x13_init:	.dword 0x0000000000000000
reg_x14_init:	.dword 0x0000000000000010
reg_x15_init:	.dword 0x9a79e7ebfc1ac952
reg_x16_init:	.dword 0x34602fbacce0255c
reg_x17_init:	.dword 0x3c824a7a0f4ed57c
reg_x18_init:	.dword 0x72e77c0b9842d513
reg_x19_init:	.dword 0x3ee57a1392a7222f
reg_x20_init:	.dword 0xffffffff80000008
reg_x21_init:	.dword 0xe66de5d381d43d3f
reg_x22_init:	.dword 0xffffffff80000003
reg_x23_init:	.dword 0x0800000000000002
reg_x24_init:	.dword 0xa99ac1a7f00894e8
reg_x25_init:	.dword 0x0800000000000000
reg_x26_init:	.dword 0x9931291ecaa39c99
reg_x27_init:	.dword 0xedffbbfdd3711563
reg_x28_init:	.dword 0x8ffacf2c87f74dba
reg_x29_init:	.dword 0x0800000000000008
reg_x30_init:	.dword 0x20913ef806b7f8f0
reg_x31_init:	.dword 0x21b860a3f178deb5

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x146769c5cf32f445
reg_x1_output:	.dword 0xd55f6f7fb7817e62
reg_x2_output:	.dword 0xa6a815231e4812cd
reg_x3_output:	.dword 0xa41a0d26e214967c
reg_x4_output:	.dword 0xdf0eb32a60ee47f3
reg_x5_output:	.dword 0xff65b3d44619235c
reg_x6_output:	.dword 0x3da1d7da10aee1ab
reg_x7_output:	.dword 0x2f4281910ac31216
reg_x8_output:	.dword 0x745bbeaa7c7c5273
reg_x9_output:	.dword 0x40030c0d00cbd22b
reg_x10_output:	.dword 0x4e4e1ff0d4dbe4eb
reg_x11_output:	.dword 0x8bd4ce9fa810c53f
reg_x12_output:	.dword 0x7e6378881dbe94ab
reg_x13_output:	.dword 0x4252f48c397c760f
reg_x14_output:	.dword 0x9ffaa7ac86ce2050
reg_x15_output:	.dword 0x42050384b8d7caa1
reg_x16_output:	.dword 0x2004072a49b0a8d8
reg_x17_output:	.dword 0x35bf2a71923fa5bc
reg_x18_output:	.dword 0x661561b4f316722f
reg_x19_output:	.dword 0xeaf2387561ceab9a
reg_x20_output:	.dword 0xcc5c6b9a3c8a9909
reg_x21_output:	.dword 0x0a558027b0d21ddb
reg_x22_output:	.dword 0x09ada196c338d1f2
reg_x23_output:	.dword 0x12352b2a5ddc02bd
reg_x24_output:	.dword 0x0c67b205b06785a3
reg_x25_output:	.dword 0xbd53c1d92b740b8a
reg_x26_output:	.dword 0xb5c1d4412486de96
reg_x27_output:	.dword 0xfaf5eb60674bee51
reg_x28_output:	.dword 0xdd9db2410aaa9bdb
reg_x29_output:	.dword 0xa09ba9f288f326d8
reg_x30_output:	.dword 0xdd5bc888214dbd2c
reg_x31_output:	.dword 0xec5a9759065152d0

// Memory Blocks
	.align 8
test_memory:
	.dword 0x0ebb60410b9c5c3f, 0x6c00e5a9dced9d4a
	.dword 0x10bd87a44571475b, 0x91612859947ced6a
	.dword 0xc214ac9ed0fa312e, 0x13a32974e097cc59
	.dword 0x1d20bdb270ce89dc, 0xa8764f2ad0143680
	.dword 0x0711f5199972555b, 0xd2c6558f678ecbf2
	.dword 0xa0cab230eaff92fd, 0xb75b609b0d721429
	.dword 0x4ebb0513bc460a4e, 0x96daaa76b781c8f4
	.dword 0xf376d085e55a911f, 0xb82d51f9efdb5cb0
	.dword 0x5971a612b58c1ee2, 0xfaa70d6f98bc2fb5
	.dword 0x8159c07799464138, 0xbc9ec59d96712913
	.dword 0x1e3dc040fccdc5c8, 0x4dc75d01ecdaa67e
	.dword 0x7d3f0eb41a3dad52, 0x54b7275e552af786
	.dword 0x164d0aec98f7bc03, 0xb8f0d5773834d80a
	.dword 0x1c836549c41d3b0a, 0x1ea8d91a65029dee
	.dword 0x49884d0809d9bf6b, 0x6bae855ed1c60e0b
	.dword 0x65ed542de7930a12, 0x45906f3171bc0c67
	.dword 0x73602da92cae552a, 0xe487d20d5c9e9ba5
	.dword 0xfaa6a9b7f7cca2af, 0xdd2efd088ef2dfbf
	.dword 0x9933948a3664e041, 0xd0c30c16c52817f1
	.dword 0x26d85b2405bbf43b, 0xf8f17189e957c3f8
	.dword 0x75f19a87bba80804, 0xb53613d93bc6687c
	.dword 0xf5aafd12c68da3a4, 0x14d703a37c47a6c9
	.dword 0x30d90a2603da6e9a, 0x8dd70df28d9f9bc5
	.dword 0xfaadcc07bc2aa9ec, 0xe708aec42f26ba1e
	.dword 0xef77700a9183b77e, 0xd5ff27c6cb9493c2
	.dword 0x00e644ec57df42a7, 0xf933bf6301294694
	.dword 0xf549bb7edfe7de01, 0xf7916bfc66b4805c
	.dword 0xd60a4d8b18812a80, 0x78f96f7755744dfe
	.dword 0x2da06ef1d2c2dbc5, 0xf377a6fdc8b529ee
	.dword 0xf6a6ed14b6af2db4, 0x8705930004bffde3
	.dword 0x2ea960763a629f43, 0x32275b7af63a0bca
	.dword 0xf635949e6b040695, 0xec9e547c94e5f1fd
	.dword 0xfec10a401b995246, 0xcf20c6e6f7f43eb4
	.dword 0x1c61f79d3b568c08, 0x87bf0173da0546bb
	.dword 0x276d6b2a2041f06e, 0x5e99f5f89ee53365
	.dword 0xd702747105613007, 0xee0fe6ed50267bc0
	.dword 0xeba47733b2512daf, 0x20c7e92bb74e3d09
	.dword 0x4e850cd6ae6ace20, 0xbf4d3df6af892662
	.dword 0xc94017fec8acaccf, 0xd277c93ee516ebc1
	.dword 0xa0d2ee7578cac9f5, 0xdfef28219905742b
	.dword 0xc7c1bd505a4285eb, 0xceea2bb533b43722
	.dword 0x04ec8b5301627dba, 0x5d24bc03bb2b7d5c
	.dword 0x78c77d92c11b1cf2, 0x03226755dada78b5
	.dword 0x5fc0425cd065f8ba, 0x0b7421b57c0a6765
	.dword 0xf8d4c656145f4828, 0x471bf8abd8843675
	.dword 0xa0fd97e1ba0e0dd3, 0x0991bf5206c9576e
	.dword 0xb1509cc8a58cc6a5, 0x0d97f686c817bd54
	.dword 0x94e6fe17850db1f5, 0x3140757c977c34d2
	.dword 0x16db6e455a5306d4, 0xff749679cdb58bb6
	.dword 0xb6642d956de4aaa6, 0x284cebdb02de3b9e
	.dword 0x215e70c191d23cf4, 0x03c0c15a83f98bf3
	.dword 0xf2d70dd727698c81, 0x33f5ed94c2dc5f17
	.dword 0xc576935ea136c99a, 0x69fdb7c699b91ed9
	.dword 0x3f752dbdea2509b2, 0x2953d5d844197c31
	.dword 0x491cfeddb8eaf02d, 0x6840c69b3487f629
	.dword 0x5627cc0cfd58907c, 0xd5910c54cbd65c18
	.dword 0xe7af262430d8dd69, 0xe3270b7c3c0dbf16
	.dword 0xee346febe5ca39b3, 0x010591c110e786ab
	.dword 0xdbb866bdcf76fddd, 0x81cd495069769cc9
	.dword 0x4b3011690fb00742, 0xc0879c558da2e4fc
	.dword 0x8f1f39569c98a46d, 0x643dccc3558872df
	.dword 0x0afed1f25a5472a7, 0x2083444fa3ef33d1
	.dword 0x6497f243363d00d0, 0x6f0660c2c726ffe9
	.dword 0xb1e244dc654e4b72, 0x55ab4071e7df4626

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
