// random assembly code generated by RISC-V torture test generator
// nseqs = 200
// memsize = 1024

#include "riscv_test.h"

RVTEST_RV64U
RVTEST_CODE_BEGIN

	j test_start

crash_backward:
	RVTEST_FAIL

test_start:

xreg_init:
	la x31, xreg_init_data
	ld x0, 0(x31)
	ld x1, 8(x31)
	ld x2, 16(x31)
	ld x3, 24(x31)
	ld x4, 32(x31)
	ld x5, 40(x31)
	ld x6, 48(x31)
	ld x7, 56(x31)
	ld x8, 64(x31)
	ld x9, 72(x31)
	ld x10, 80(x31)
	ld x11, 88(x31)
	ld x12, 96(x31)
	ld x13, 104(x31)
	ld x14, 112(x31)
	ld x15, 120(x31)
	ld x16, 128(x31)
	ld x17, 136(x31)
	ld x18, 144(x31)
	ld x19, 152(x31)
	ld x20, 160(x31)
	ld x21, 168(x31)
	ld x22, 176(x31)
	ld x23, 184(x31)
	ld x24, 192(x31)
	ld x25, 200(x31)
	ld x26, 208(x31)
	ld x27, 216(x31)
	ld x28, 224(x31)
	ld x29, 232(x31)
	ld x30, 240(x31)
	ld x31, 248(x31)

	j pseg_0

pseg_0:
	la x6, test_memory+760
	slt x22, x16, x11
	la x19, test_memory+688
	addi x17, x0, 439
	slli x3, x29, 38
	la x28, test_memory-1001
	addi x23, x0, 9
	la x15, test_memory+322
	addi x3, x0, -988
	srlw x12, x29, x17
	sraw x24, x15, x15
	sw x22, 226(x15)
	addi x31, x10, 0
	addi x8, x3, -596
	sd x5, 1337(x28)
	rem x14, x10, x10
	addi x9, x31, 0
	la x2, test_memory-267
	addi x5, x0, 0
	blt x31, x9, crash_backward
	addi x22, x0, 1335
	addi x7, x0, -1545
	sh x27, -346(x19)
	mulhsu x10, x11, x11
	addi x25, x0, -19
	addi x8, x0, -1648
	divw x1, x25, x25
	la x16, test_memory+1494
	la x14, test_memory-560
	addi x31, x0, -1600
	addi x13, x0, -1952
	andi x24, x30, -851
	addi x26, x0, -26
	lwu x27, 847(x2)
	addi x4, x0, 0
	la x30, test_memory+1025
	sub x20, x23, x23
	addi x21, x7, -1886
	mulh x12, x9, x21
	and x15, x8, x31
	lbu x18, -555(x6)
	and x29, x13, x26
	sb x23, 836(x14)
	bltu x7, x21, crash_backward
	sw x29, -825(x30)
	sub x11, x17, x22
	sd x31, -1478(x16)
	addi x20, x0, 584
	addi x24, x0, 1
	addi x12, x0, -621
	addi x10, x0, -290
	addi x22, x0, -1988
	addi x25, x0, 1005
	mul x15, x8, x8
	xori x29, x10, -387
	addi x1, x0, 1
	sll x24, x24, 63
	addi x27, x0, 1585
	addi x9, x0, 1
	subw x30, x12, x22
	addi x26, x0, -1689
	addi x6, x0, -1
	slt x17, x10, x27
	la x21, test_memory+1881
	lhu x13, -1217(x21)
	xor x6, x6, x24
	sll x1, x1, 63
	mulh x4, x26, x26
	addi x11, x0, -1
	subw x5, x20, x25
	sll x9, x9, 63
	xor x11, x11, x1
	addi x15, x0, -730
	addi x28, x0, -1
	addi x4, x0, 1
	and x31, x5, x11
	rem x13, x26, x26
	and x23, x31, x6
	or x16, x23, x24
	addi x25, x0, 1351
	sra x27, x25, x25
	addi x30, x0, 1639
	addi x7, x0, 0
	addi x5, x0, 1913
	xor x28, x28, x9
	addi x16, x0, 586
	addi x18, x0, 0
	or x8, x31, x1
	addi x6, x0, 640
	addi x17, x0, 836
	remw x12, x30, x30
	addi x25, x0, 1736
	srlw x24, x16, x25
	la x13, test_memory+272
	add x2, x2, x30
	la x14, test_memory-568
	lh x21, -162(x13)
	addi x23, x0, 2012
	la x11, test_memory+212
	sll x4, x4, 63
	mul x29, x15, x15
	addi x20, x0, -1
	xor x20, x20, x4
	sb x31, 1460(x14)
	srl x22, x5, x17
	mul x27, x6, x23
	and x10, x1, x20
	and x19, x3, x28
	or x26, x17, x4
	bgeu x10, x26, crash_backward
	addi x1, x0, 1
	sll x1, x1, 63
	la x16, test_memory+2312
	la x27, test_memory+2720
	or x3, x10, x9
	lb x12, 2(x11)
	remu x23, x3, x3
	lh x10, -1862(x16)
	mul x5, x0, x12
	la x21, test_memory+1146
	bge x3, x19, crash_forward
	slti x14, x9, -165
	la x25, test_memory+2025
	sh x30, -1321(x25)
	addi x30, x0, -1
	la x26, test_memory-1512
	addi x4, x0, 1755
	blt x2, x2, crash_forward
	addi x2, x0, 248
	addi x10, x0, 20
	addi x14, x0, 110
	lwu x24, -578(x21)
	addi x11, x0, -222
	xor x30, x30, x1
	and x8, x22, x30
	addi x13, x0, 1511
	addi x15, x0, -1609
	xor x9, x26, x21
	lw x18, -2016(x27)
	addi x6, x0, 693
	or x31, x7, x1
	mulw x3, x14, x11
	addi x20, x0, -727
	slti x27, x24, 705
	la x24, test_memory+2071
	or x22, x4, x4
	rem x7, x2, x20
	sd x9, 1800(x26)
	addi x11, x0, -811
	addi x5, x0, 1875
	remu x29, x15, x15
	lhu x25, -1197(x24)
	addi x28, x18, 0
	sltu x4, x0, x10
	la x23, test_memory-744
	mulhu x16, x10, x5
	addi x24, x0, 1
	sll x24, x24, 63
	sraw x18, x17, x17
	addi x21, x0, -524
	la x20, test_memory+233
	divu x8, x3, x3
	addi x26, x0, 626
	sllw x17, x13, x6
	addi x4, x29, -1039
	div x9, x21, x21
	subw x22, x11, x11
	addi x19, x7, -445
	add x7, x26, x26
	addi x2, x0, -939
	mulhu x8, x14, x9
	sll x29, x2, x2
	sb x2, 1374(x23)
	lh x27, 495(x20)
	addi x4, x0, -1159
	la x6, test_memory+2509
	addi x1, x0, 87
	sltu x5, x1, x1
	addi x31, x0, 1
	sll x31, x31, 63
	addi x10, x0, 1304
	slt x17, x4, x10
	la x8, test_memory+2106
	mul x9, x13, x5
	sb x17, -1786(x6)
	la x21, test_memory+1389
	ld x20, -541(x21)
	addi x13, x0, 1889
	addi x14, x0, -1
	addi x19, x0, -745
	addi x26, x0, 1677
	xor x14, x14, x24
	bne x0, x0, crash_backward
	and x25, x17, x14
	la x22, test_memory+799
	addi x2, x0, -278
	divw x23, x26, x26
	addi x29, x0, 1605
	addi x9, x0, 0
	slt x27, x13, x19
	la x30, test_memory+337
	addi x10, x0, 63
	sw x15, 83(x30)
	and x21, x11, x11
	sw x31, 85(x22)
	addi x11, x0, 1525
	addi x5, x0, 1448
	addi x12, x28, 0
	bltu x28, x12, crash_backward
	sub x4, x10, x10
	or x15, x12, x24
	sll x7, x29, x11
	addi x27, x0, 1
	addi x6, x0, 1502
	addi x26, x0, 0
	addi x29, x0, 634
	addi x20, x0, 599
	mulhsu x10, x27, x13
	xor x17, x6, x6
	addi x11, x0, 518
	divuw x28, x29, x11
	div x1, x2, x5
	la x4, test_memory-1166
	addi x22, x0, -1490
	xori x7, x3, 305
	addi x18, x0, -1
	and x23, x20, x20
	sh x26, 1662(x4)
	mulw x17, x7, x7
	remw x1, x15, x26
	sll x27, x27, 63
	addi x23, x0, 1663
	addi x4, x0, -1764
	xor x13, x22, x22
	la x11, test_memory+388
	addi x6, x0, -638
	xor x14, x16, x16
	addi x25, x0, 1989
	xor x18, x18, x31
	or x5, x31, x31
	addi x29, x25, 585
	beq x25, x29, crash_forward
	la x7, test_memory-1229
	addi x12, x0, -84
	mulhu x15, x4, x12
	addi x28, x0, -1058
	slt x26, x28, x28
	ld x24, 1605(x7)
	addi x4, x0, 0
	and x16, x15, x18
	or x3, x9, x31
	slli x22, x9, 60
	addi x13, x0, 1295
	addi x25, x0, 0
	la x26, test_memory+422
	addi x15, x0, -1966
	bltu x3, x16, crash_forward
	mul x28, x15, x15
	divu x16, x18, x3
	addi x2, x0, -1918
	divu x14, x13, x13
	addi x17, x0, -262
	sb x18, -1472(x8)
	xor x20, x23, x2
	sd x15, -286(x26)
	divw x10, x6, x6
	mulhu x31, x26, x26
	la x25, test_memory+627
	addi x19, x0, -1
	la x22, test_memory-59
	addi x15, x0, -537
	addi x13, x0, -1766
	add x28, x13, x22
	sltu x1, x6, x28
	la x26, test_memory-607
	la x2, test_memory+2214
	lwu x20, -611(x25)
	sra x16, x15, x13
	la x5, test_memory+2169
	lhu x18, 1143(x26)
	xor x19, x19, x27
	addi x7, x0, 581
	addi x4, x0, -926
	lh x3, 467(x22)
	mulw x29, x7, x7
	sd x12, -1761(x5)
	la x6, test_memory+1789
	addi x12, x0, 777
	la x31, test_memory+502
	sw x14, 262(x31)
	lh x1, -1325(x6)
	ld x23, -1798(x2)
	and x21, x18, x19
	subw x10, x4, x4
	lb x9, -327(x11)
	la x8, test_memory+876
	or x30, x21, x27
	ld x14, -380(x8)
	or x24, x17, x12
	bgeu x21, x30, crash_backward
	addi x15, x0, -423
	addi x20, x0, 1
	la x16, test_memory+567
	sll x20, x20, 63
	la x21, test_memory+1504
	blt x25, x25, crash_backward
	lw x17, -1428(x21)
	addi x11, x0, 0
	addi x8, x0, 0
	la x25, test_memory+1868
	la x9, test_memory-814
	addi x3, x0, -1609
	sra x13, x4, x4
	addi x24, x0, 639
	bne x11, x8, crash_backward
	sh x29, -948(x25)
	srl x12, x17, x17
	lb x26, 1468(x9)
	addi x17, x0, 1449
	addi x1, x24, 506
	addi x18, x0, 1038
	addi x27, x0, 1
	sh x1, -333(x16)
	addi x22, x0, -364
	or x30, x27, x5
	addi x4, x0, -1934
	addw x14, x22, x22
	sll x27, x27, 63
	la x12, test_memory+1702
	addi x2, x18, 1951
	la x22, test_memory+2085
	addi x13, x0, 156
	bge x24, x1, crash_forward
	slt x9, x25, x30
	la x25, test_memory+1124
	lhu x11, -1170(x12)
	addi x10, x0, -1963
	addw x11, x29, x24
	remw x21, x17, x13
	la x18, test_memory-727
	addi x19, x0, -1
	la x30, test_memory+1745
	addi x14, x0, -1314
	sw x26, -1493(x22)
	addi x13, x30, 0
	or x8, x14, x14
	lw x16, -516(x25)
	divw x24, x19, x29
	xor x19, x19, x20
	addi x21, x13, 0
	xori x22, x10, -198
	la x12, test_memory+138
	and x28, x28, x19
	ori x24, x5, -352
	remu x7, x4, x10
	bne x13, x21, crash_forward
	addi x23, x0, -1
	sh x14, 798(x12)
	la x9, test_memory+1549
	or x6, x10, x20
	xor x23, x23, x27
	addi x4, x0, 1453
	sh x23, -1227(x9)
	addi x21, x0, -1197
	remw x11, x5, x27
	and x29, x27, x23
	la x26, test_memory+1166
	or x31, x29, x27
	sraw x24, x6, x24
	lbu x1, 1051(x18)
	blt x28, x6, crash_forward
	lbu x2, -955(x30)
	addi x13, x21, -1430
	addi x14, x0, 2017
	srl x5, x15, x3
	la x16, test_memory+1848
	la x3, test_memory+1035
	addi x2, x0, 709
	lhu x17, -708(x26)
	addw x25, x14, x14
	addi x19, x0, -307
	addi x18, x0, 0
	xor x27, x19, x19
	la x24, test_memory+1828
	addi x7, x18, 0
	addi x6, x27, 0
	addi x9, x0, -1589
	divw x28, x2, x2
	lwu x31, -1360(x24)
	addi x12, x7, 0
	la x8, test_memory-940
	sd x10, 1460(x8)
	addi x20, x0, 1922
	addi x30, x0, 0
	addi x11, x6, 0
	addi x1, x9, -756
	la x15, test_memory-416
	la x25, test_memory+1466
	lb x12, -508(x25)
	addi x21, x0, 275
	bltu x6, x11, crash_forward
	addi x7, x0, -591
	addi x17, x0, -1724
	lw x22, -1264(x16)
	subw x19, x7, x7
	sb x5, 952(x15)
	blt x18, x30, crash_forward
	addi x10, x4, 1054
	lbu x5, -883(x3)
	divuw x8, x21, x21
	bge x1, x9, crash_backward
	addi x23, x0, -589
	addi x26, x0, 20
	sraw x29, x20, x23
	mul x31, x17, x26
	addi x3, x0, -328
	addi x14, x27, 0
	addi x4, x0, 1645
	la x30, test_memory-1755
	addi x5, x14, 0
	la x10, test_memory-125
	la x19, test_memory-483
	addi x18, x0, 614
	la x21, test_memory+494
	la x24, test_memory+2316
	sd x8, 635(x19)
	addi x27, x0, -279
	divu x15, x3, x18
	addi x12, x0, 929
	sraw x29, x12, x12
	sd x22, -366(x21)
	mulw x20, x4, x27
	lb x11, 1802(x30)
	lhu x25, -2004(x24)
	la x28, test_memory-1658
	sw x8, 165(x10)
	lwu x2, 1674(x28)
	j reg_dump

reg_dump:
	la x1, loop_count
	lw x2, 0(x1)
	addi x3, x2, -1
	sw x3, 0(x1)
	bnez x2, pseg_0
	la x1, xreg_output_data
	sd x0, 0(x1)
	sd x2, 16(x1)
	sd x3, 24(x1)
	sd x4, 32(x1)
	sd x5, 40(x1)
	sd x6, 48(x1)
	sd x8, 64(x1)
	sd x9, 72(x1)
	sd x11, 88(x1)
	sd x12, 96(x1)
	sd x14, 112(x1)
	sd x15, 120(x1)
	sd x17, 136(x1)
	sd x18, 144(x1)
	sd x20, 160(x1)
	sd x22, 176(x1)
	sd x23, 184(x1)
	sd x25, 200(x1)
	sd x26, 208(x1)
	sd x27, 216(x1)
	sd x29, 232(x1)
	sd x31, 248(x1)

	j test_end

crash_forward:
	RVTEST_FAIL

test_end:
	RVTEST_PASS

RVTEST_CODE_END


	.data

hidden_data:
	.align 8
xreg_init_data:
reg_x0_init:	.dword 0xedfa0da80ae1c464
reg_x1_init:	.dword 0xce93421d6605ec14
reg_x2_init:	.dword 0x0800000000000002
reg_x3_init:	.dword 0xffffffff80000004
reg_x4_init:	.dword 0x75f704fd63e1831a
reg_x5_init:	.dword 0x0800000000000001
reg_x6_init:	.dword 0x210c929c4e250ab1
reg_x7_init:	.dword 0x2cca9f1ac0fb2bdf
reg_x8_init:	.dword 0xffffffffffff8009
reg_x9_init:	.dword 0xf6b4dad145b6d764
reg_x10_init:	.dword 0xffffffffffffffff
reg_x11_init:	.dword 0xffffffffffff8009
reg_x12_init:	.dword 0xffffffff80000004
reg_x13_init:	.dword 0xffffffffffff8002
reg_x14_init:	.dword 0x18364e2f83cc11be
reg_x15_init:	.dword 0xffffffffffffffff
reg_x16_init:	.dword 0x6954d438e8c4b03c
reg_x17_init:	.dword 0x44f2dbd446a948ac
reg_x18_init:	.dword 0x0e6d33b967f72672
reg_x19_init:	.dword 0x04ea9c1726cedc42
reg_x20_init:	.dword 0x706926995858dbaa
reg_x21_init:	.dword 0xffffffff80000001
reg_x22_init:	.dword 0xf934cdd4bc218853
reg_x23_init:	.dword 0xffffffffffffff80
reg_x24_init:	.dword 0xae91b399a3a46c78
reg_x25_init:	.dword 0xffffffffffffffff
reg_x26_init:	.dword 0x0000000000000001
reg_x27_init:	.dword 0x0800000000000008
reg_x28_init:	.dword 0x9f2fa782c713065c
reg_x29_init:	.dword 0xffffffffffffffff
reg_x30_init:	.dword 0x01f9f0d15735beb0
reg_x31_init:	.dword 0xa9245414d503f463

RVTEST_DATA_BEGIN

	.align 8
xreg_output_data:
reg_x0_output:	.dword 0x19862d1516da7e69
reg_x1_output:	.dword 0x3566601bc81b48da
reg_x2_output:	.dword 0x144e125d7ec49bf7
reg_x3_output:	.dword 0xfcdb868b400513f0
reg_x4_output:	.dword 0x99a829c7f13a23ec
reg_x5_output:	.dword 0x4b75caaf7cf26acb
reg_x6_output:	.dword 0x470c7282f3ee4fb6
reg_x7_output:	.dword 0xf6c03185949996ca
reg_x8_output:	.dword 0x80396ac3f73458a2
reg_x9_output:	.dword 0xd25df8e32227ab93
reg_x10_output:	.dword 0x140d34b246976bc7
reg_x11_output:	.dword 0x340c4783a99a77a3
reg_x12_output:	.dword 0x899796a44da37822
reg_x13_output:	.dword 0xe7864a6343aa7905
reg_x14_output:	.dword 0x214f4a8dd7ea3b02
reg_x15_output:	.dword 0x1dfd534c07d8da61
reg_x16_output:	.dword 0x460850b6ce222ea6
reg_x17_output:	.dword 0xf5dbccaea0f1bc38
reg_x18_output:	.dword 0x58f039af7ff33f23
reg_x19_output:	.dword 0x4ba316b6b6934e6d
reg_x20_output:	.dword 0xfeb09b7f94df698b
reg_x21_output:	.dword 0x3921a199d04e7e06
reg_x22_output:	.dword 0x5927262374f3a94b
reg_x23_output:	.dword 0x2e3fd93184fe3b33
reg_x24_output:	.dword 0x9c260b352dcfd7d5
reg_x25_output:	.dword 0xeb77b5cce73e9b90
reg_x26_output:	.dword 0xd3a6acea405a627e
reg_x27_output:	.dword 0xf2f406406ebd5ca7
reg_x28_output:	.dword 0x5a03c841395efaa8
reg_x29_output:	.dword 0xaf91c74221b18ab8
reg_x30_output:	.dword 0xb46f8e78b9a5a423
reg_x31_output:	.dword 0x99cf1bf582604fbb

// Memory Blocks
	.align 8
test_memory:
	.dword 0x562d61c28301c5d0, 0xdf58bbc90e712ea5
	.dword 0x1f5e293805af2087, 0x6b9fe97dc1342eea
	.dword 0x75a9700cae4cd03a, 0xe3f047859b20bc43
	.dword 0x32fcc4042724bb5a, 0x091e1d9447fc3eb1
	.dword 0xac3e0724d1701479, 0xa15ae3717683aec0
	.dword 0x0664a8adc32fd230, 0x4747250bb063aa10
	.dword 0x6f38f9468e3a4142, 0x4d3613d3a3fecc10
	.dword 0x87380e795b8d1501, 0xee08594a033a4f0d
	.dword 0xff0de9617d0599f0, 0xbd48fed0c785396b
	.dword 0xb3fed4a06596eea9, 0x37907ec7c3ce9b31
	.dword 0x3eb42d9507306700, 0x57df52d9a5639fca
	.dword 0x2e700cce54047d69, 0x9fe2939394f67809
	.dword 0x02ee81ba2102f696, 0x552a7d368d9b606d
	.dword 0x487255a3df5f1b64, 0x2d83edceb89947a6
	.dword 0x1ee689dbad252cf7, 0xee233082eebfd957
	.dword 0x7ddd053597707723, 0xdd5faa2f32ccf11d
	.dword 0xf6c624b7b605a50d, 0x6aa53b2f1887b9d0
	.dword 0xc444238e0e2b3c12, 0x45396a7ca9d7fd08
	.dword 0x0c388e4113d460e6, 0xbdbfadfe4a8466e2
	.dword 0x39593527bad04b00, 0xd149641834aac204
	.dword 0xcbfd521d87f30a35, 0x8473528687b16fdd
	.dword 0x7faad5740a5282a3, 0x3adbbe7129a1a131
	.dword 0xdef70e28d0fcc2d0, 0xc85971b74bce12d4
	.dword 0x88cd2157f03b1812, 0xf70d418ca7a252b5
	.dword 0x646004f0bcc78530, 0xdcecea4c2bb2d11e
	.dword 0xa334f1aab1907f49, 0x65ff548603e64239
	.dword 0xc60e8038c80114f4, 0x0b6f975a9e1513d5
	.dword 0x614fe5ba9181e3a8, 0x7c1d4c0a7f03fb6a
	.dword 0x4af303776d497f5e, 0x86a606c9a66ae05a
	.dword 0x56a33dc87dd93074, 0x784d08d9a409a679
	.dword 0x273a4e55dfed2bd4, 0x4ce37fd6dfe09ccf
	.dword 0xb6fb8585d775a955, 0xfb24e64d7cba949c
	.dword 0x8cbd2f3390a07c60, 0x3420598f7292e49b
	.dword 0x9af70e9ef95112d6, 0x7c80f8ca5641dc8b
	.dword 0x29a825a384defe31, 0x5914a157d17e6cea
	.dword 0x0c753b2f2ed16ae9, 0xae119c5129ec0703
	.dword 0x9684d4ee3bd02a18, 0x8f911167bbd7f92b
	.dword 0x04b4984660693160, 0xd2bd52f2ddb9cb47
	.dword 0x700f468995d3b50c, 0x3f90574ae0be5f90
	.dword 0x3529c869dbc84075, 0x73eff35578dddb9a
	.dword 0x3c80fca8f61770a6, 0x4fbaaa5fb0789d91
	.dword 0xcb593e12431f3543, 0x273127321877c1c6
	.dword 0xc73bd4ab9fd8bba6, 0x5b55b25d5ab1fc69
	.dword 0x5f3dc62bdd37684a, 0x479c39d5e91dcb98
	.dword 0x50feb9aa2333826c, 0x76dabdc6b5664598
	.dword 0xe305e298366175ef, 0xa01336a2aa080761
	.dword 0xce0e26ee87a0cf7f, 0x33ad487acc70075f
	.dword 0xba31f4aa407c56f9, 0x0447579046ee5076
	.dword 0x6efa7a76c486ec0a, 0x68abd22825eae947
	.dword 0x155d37abe6970916, 0xbff0c3a4e5eb6bb1
	.dword 0xdbee1777027d105a, 0x829504d25bdc109a
	.dword 0x4f3b8b5956eec754, 0x94cf9d805ef733ef
	.dword 0xddad58d51224a461, 0xc47b2b5087d294e8
	.dword 0x4e960e641c4bd2a8, 0xb95061d372c9d690
	.dword 0xaab253ab7fba1036, 0xedbff7d021720484
	.dword 0xe05088ef7dfeca6a, 0xeaed95e33f3a1ffa
	.dword 0xb20e69c7acbf1c93, 0x30529a4e5d18f905
	.dword 0x93c1a713840094d7, 0x30a8c60b5f68d816
	.dword 0x88fbac2e6360e356, 0x3f2a271fcc15bbc6
	.dword 0xe2e803606af6d78e, 0x5b34d436de4b2ed2
	.dword 0x93480d95697b5000, 0x82364d6cfc1afa65
	.dword 0x574601534a1f0014, 0xa9ab9668a266389d
	.dword 0x1a0464e6b35c3039, 0x2a405db117e68b47
	.dword 0xeb6e77e12b61dc50, 0x3ae8c53841cd7aed

.align 8
loop_count: .word 0x40

RVTEST_DATA_END
